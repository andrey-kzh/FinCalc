"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkReact_project"] = self["webpackChunkReact_project"] || []).push([[179],{

/***/ "e+/uGl/8":
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/classCallCheck.js\nvar classCallCheck = __webpack_require__(\"lwsEjDFy\");\nvar classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/createClass.js\nvar createClass = __webpack_require__(\"W8MJtME8\");\nvar createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/inherits.js\nvar inherits = __webpack_require__(\"7W2iVumU\");\nvar inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\nvar possibleConstructorReturn = __webpack_require__(\"a1gurjc+\");\nvar possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/getPrototypeOf.js\nvar getPrototypeOf = __webpack_require__(\"NsbkXAeW\");\nvar getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"q1tIBJhx\");\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(\"i8i4LrFt\");\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 19 modules\nvar es = __webpack_require__(\"SNoJyrEz\");\n// EXTERNAL MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js\nvar react_router_dom = __webpack_require__(\"55IpiCAJ\");\n// EXTERNAL MODULE: ./node_modules/react-router/esm/react-router.js + 1 modules\nvar react_router = __webpack_require__(\"4qXz/kfb\");\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js + 2 modules\nvar redux = __webpack_require__(\"ofL3qLP6\");\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js + 2 modules\nvar redux_saga_core_npm_proxy_esm = __webpack_require__(\"mM01Bdt2\");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(\"o0o1ebC6\");\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js + 1 modules\nvar redux_saga_effects_npm_proxy_esm = __webpack_require__(\"IihTIhwn\");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/defineProperty.js\nvar defineProperty = __webpack_require__(\"lSNAPYH/\");\nvar defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(\"yXPUfTdm\");\nvar asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);\n;// CONCATENATED MODULE: ./src/utils/tokens.js\nfunction saveTokensToStorage(tokens) {\n  localStorage.setItem('tokens', JSON.stringify(tokens));\n}\nfunction clearTokensFromStorage() {\n  localStorage.removeItem('tokens');\n}\nfunction getRefreshTokenFromStorage() {\n  if (!localStorage.tokens) return null;\n  return JSON.parse(localStorage.tokens).refreshToken;\n}\nfunction getAccessTokenFromStorage() {\n  if (!localStorage.tokens) return null;\n  return JSON.parse(localStorage.tokens).accessToken;\n}\n;// CONCATENATED MODULE: ./src/api/index.js\n\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\nvar Api = /*#__PURE__*/function () {\n  function Api() {\n    classCallCheck_default()(this, Api);\n\n    this.urlRoot = '/api'; //this.urlRoot = 'http://localhost:3000/api';\n\n    this.optionsDefault = {\n      mode: \"cors\"\n    };\n    this.getRefreshTokenFromStorage = getRefreshTokenFromStorage;\n    this.getAccessTokenFromStorage = getAccessTokenFromStorage;\n    this.loginRequest = this.loginRequest.bind(this);\n    this.logoutRequest = this.logoutRequest.bind(this);\n    this.requestWithAccessToken = this.requestWithAccessToken.bind(this);\n    this.refreshTokens = this.refreshTokens.bind(this);\n    this.getAuthDataBySession = this.getAuthDataBySession.bind(this);\n    this.addCategoryRequest = this.addCategoryRequest.bind(this);\n    this.updCategoryRequest = this.updCategoryRequest.bind(this);\n    this.delCategoryRequest = this.delCategoryRequest.bind(this);\n    this.getAllCategorys = this.getAllCategorys.bind(this);\n    this.getAllListsWithCategorys = this.getAllListsWithCategorys.bind(this);\n    this.addListItemRequest = this.addListItemRequest.bind(this);\n    this.updListItemRequest = this.updListItemRequest.bind(this);\n    this.delListItemRequest = this.delListItemRequest.bind(this);\n  }\n\n  createClass_default()(Api, [{\n    key: \"requestWithAccessToken\",\n    value: function () {\n      var _requestWithAccessToken = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(url, options) {\n        var fullUrl, accessToken;\n        return regenerator_default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                fullUrl = \"\".concat(this.urlRoot).concat(url);\n                accessToken = this.getAccessTokenFromStorage();\n                if (!options.headers) options.headers = {};\n                options.headers = {\n                  'Content-Type': 'application/json'\n                };\n                if (accessToken) options.headers.Authorization = \"Bearer \".concat(accessToken);\n                _context.next = 8;\n                return fetch(fullUrl, _objectSpread(_objectSpread({}, this.optionsDefault), options));\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0.message);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n\n      function requestWithAccessToken(_x, _x2) {\n        return _requestWithAccessToken.apply(this, arguments);\n      }\n\n      return requestWithAccessToken;\n    }()\n  }, {\n    key: \"refreshTokens\",\n    value: function () {\n      var _refreshTokens = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {\n        var refreshToken, fullUrl, options, response;\n        return regenerator_default().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                refreshToken = this.getRefreshTokenFromStorage();\n                fullUrl = \"\".concat(this.urlRoot, \"/auth/refresh\");\n                options = {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    refreshToken: refreshToken\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                };\n                _context2.next = 6;\n                return fetch(fullUrl, _objectSpread(_objectSpread({}, this.optionsDefault), options));\n\n              case 6:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0.message);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      function refreshTokens() {\n        return _refreshTokens.apply(this, arguments);\n      }\n\n      return refreshTokens;\n    }()\n  }, {\n    key: \"loginRequest\",\n    value: function () {\n      var _loginRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3(data) {\n        var fullUrl, options, response;\n        return regenerator_default().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                fullUrl = \"\".concat(this.urlRoot, \"/auth/login\");\n                options = {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    login: data.login,\n                    password: data.pass\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                };\n                _context3.prev = 2;\n                _context3.next = 5;\n                return fetch(fullUrl, _objectSpread(_objectSpread({}, this.optionsDefault), options));\n\n              case 5:\n                response = _context3.sent;\n                return _context3.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](2);\n                console.log(_context3.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 9]]);\n      }));\n\n      function loginRequest(_x3) {\n        return _loginRequest.apply(this, arguments);\n      }\n\n      return loginRequest;\n    }()\n  }, {\n    key: \"logoutRequest\",\n    value: function () {\n      var _logoutRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4() {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                url = \"/auth/logout\";\n                options = {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    refreshToken: this.getRefreshTokenFromStorage()\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                };\n                _context4.prev = 2;\n                _context4.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context4.sent;\n                return _context4.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](2);\n                console.log(_context4.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[2, 9]]);\n      }));\n\n      function logoutRequest() {\n        return _logoutRequest.apply(this, arguments);\n      }\n\n      return logoutRequest;\n    }()\n  }, {\n    key: \"getAuthDataBySession\",\n    value: function () {\n      var _getAuthDataBySession = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee5() {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                url = \"/auth/user\";\n                options = {\n                  method: \"GET\"\n                };\n                _context5.prev = 2;\n                _context5.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context5.prev = 9;\n                _context5.t0 = _context5[\"catch\"](2);\n                console.log(_context5.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2, 9]]);\n      }));\n\n      function getAuthDataBySession() {\n        return _getAuthDataBySession.apply(this, arguments);\n      }\n\n      return getAuthDataBySession;\n    }()\n  }, {\n    key: \"addCategoryRequest\",\n    value: function () {\n      var _addCategoryRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee6(category) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                url = \"/categorys\";\n                options = {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    title: category.title,\n                    userId: category.userId,\n                    type: category.type\n                  })\n                };\n                _context6.prev = 2;\n                _context6.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context6.sent;\n                return _context6.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context6.prev = 9;\n                _context6.t0 = _context6[\"catch\"](2);\n                console.log(_context6.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[2, 9]]);\n      }));\n\n      function addCategoryRequest(_x4) {\n        return _addCategoryRequest.apply(this, arguments);\n      }\n\n      return addCategoryRequest;\n    }()\n  }, {\n    key: \"updCategoryRequest\",\n    value: function () {\n      var _updCategoryRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee7(category) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                url = \"/categorys\";\n                options = {\n                  method: \"PUT\",\n                  body: JSON.stringify(category)\n                };\n                _context7.prev = 2;\n                _context7.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context7.prev = 9;\n                _context7.t0 = _context7[\"catch\"](2);\n                console.log(_context7.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[2, 9]]);\n      }));\n\n      function updCategoryRequest(_x5) {\n        return _updCategoryRequest.apply(this, arguments);\n      }\n\n      return updCategoryRequest;\n    }()\n  }, {\n    key: \"updListItemRequest\",\n    value: function () {\n      var _updListItemRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee8(listItem) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                url = \"/lists\";\n                options = {\n                  method: \"PUT\",\n                  body: JSON.stringify(listItem)\n                };\n                _context8.prev = 2;\n                _context8.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context8.sent;\n                return _context8.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context8.prev = 9;\n                _context8.t0 = _context8[\"catch\"](2);\n                console.log(_context8.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[2, 9]]);\n      }));\n\n      function updListItemRequest(_x6) {\n        return _updListItemRequest.apply(this, arguments);\n      }\n\n      return updListItemRequest;\n    }()\n  }, {\n    key: \"delListItemRequest\",\n    value: function () {\n      var _delListItemRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee9(listItem) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                url = \"/lists\";\n                options = {\n                  method: \"DELETE\",\n                  body: JSON.stringify(listItem)\n                };\n                _context9.prev = 2;\n                _context9.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context9.sent;\n                return _context9.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context9.prev = 9;\n                _context9.t0 = _context9[\"catch\"](2);\n                console.log(_context9.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[2, 9]]);\n      }));\n\n      function delListItemRequest(_x7) {\n        return _delListItemRequest.apply(this, arguments);\n      }\n\n      return delListItemRequest;\n    }()\n  }, {\n    key: \"delCategoryRequest\",\n    value: function () {\n      var _delCategoryRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee10(category) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                url = \"/categorys\";\n                options = {\n                  method: \"DELETE\",\n                  body: JSON.stringify(category)\n                };\n                _context10.prev = 2;\n                _context10.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context10.sent;\n                return _context10.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context10.prev = 9;\n                _context10.t0 = _context10[\"catch\"](2);\n                console.log(_context10.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[2, 9]]);\n      }));\n\n      function delCategoryRequest(_x8) {\n        return _delCategoryRequest.apply(this, arguments);\n      }\n\n      return delCategoryRequest;\n    }()\n  }, {\n    key: \"getAllCategorys\",\n    value: function () {\n      var _getAllCategorys = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee11(userId) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                url = \"/categorys?userId=\".concat(userId);\n                options = {\n                  method: \"GET\"\n                };\n                _context11.prev = 2;\n                _context11.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context11.sent;\n                return _context11.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context11.prev = 9;\n                _context11.t0 = _context11[\"catch\"](2);\n                console.log(_context11.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[2, 9]]);\n      }));\n\n      function getAllCategorys(_x9) {\n        return _getAllCategorys.apply(this, arguments);\n      }\n\n      return getAllCategorys;\n    }()\n  }, {\n    key: \"getAllListsWithCategorys\",\n    value: function () {\n      var _getAllListsWithCategorys = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee12(_ref) {\n        var userId, dateMin, dateMax, url, options, response;\n        return regenerator_default().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                userId = _ref.userId, dateMin = _ref.dateMin, dateMax = _ref.dateMax;\n                url = \"/lists?userId=\".concat(userId, \"&dateMin=\").concat(dateMin, \"&dateMax=\").concat(dateMax);\n                options = {\n                  method: \"GET\"\n                };\n                _context12.prev = 3;\n                _context12.next = 6;\n                return this.requestWithAccessToken(url, options);\n\n              case 6:\n                response = _context12.sent;\n                return _context12.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 10:\n                _context12.prev = 10;\n                _context12.t0 = _context12[\"catch\"](3);\n                console.log(_context12.t0.message);\n\n              case 13:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[3, 10]]);\n      }));\n\n      function getAllListsWithCategorys(_x10) {\n        return _getAllListsWithCategorys.apply(this, arguments);\n      }\n\n      return getAllListsWithCategorys;\n    }()\n  }, {\n    key: \"addListItemRequest\",\n    value: function () {\n      var _addListItemRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee13(listItem) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                url = \"/lists\";\n                options = {\n                  method: \"POST\",\n                  body: JSON.stringify(listItem)\n                };\n                _context13.prev = 2;\n                _context13.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context13.sent;\n                return _context13.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context13.prev = 9;\n                _context13.t0 = _context13[\"catch\"](2);\n                console.log(_context13.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this, [[2, 9]]);\n      }));\n\n      function addListItemRequest(_x11) {\n        return _addListItemRequest.apply(this, arguments);\n      }\n\n      return addListItemRequest;\n    }()\n  }]);\n\n  return Api;\n}();\n\n\n// EXTERNAL MODULE: ./node_modules/normalizr/dist/normalizr.es.js\nvar normalizr_es = __webpack_require__(\"XiPHYwkG\");\n;// CONCATENATED MODULE: ./src/utils/normalize.js\n\nfunction normalizeLists(data) {\n  var category = new normalizr_es/* schema.Entity */.fK.Entity('categorys', {\n    list: [new normalizr_es/* schema.Entity */.fK.Entity('list')]\n  });\n  var listsSchema = {\n    categorys: [category]\n  };\n  return (0,normalizr_es/* normalize */.Fv)(data, listsSchema);\n}\nfunction normalizeCategorys(data) {\n  var category = new normalizr_es/* schema.Entity */.fK.Entity('categorys');\n  var categorySchema = {\n    categorys: [category]\n  };\n  return (0,normalizr_es/* normalize */.Fv)(data, categorySchema);\n}\n;// CONCATENATED MODULE: ./src/store/actions.js\nvar loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: \"LOGIN_REQUEST\",\n    payload: data\n  };\n};\nvar loginUserAction = function loginUserAction(user) {\n  return {\n    type: \"LOGIN_STORE\",\n    payload: user\n  };\n};\nvar logoutUserAction = function logoutUserAction() {\n  return {\n    type: \"LOGOUT_STORE\",\n    payload: {}\n  };\n};\nvar loginErrorAction = function loginErrorAction(error) {\n  return {\n    type: \"LOGIN_ERROR_STORE\",\n    payload: {\n      error: error\n    }\n  };\n};\nvar authRequestAction = function authRequestAction() {\n  return {\n    type: \"AUTH_REQUEST\",\n    payload: {}\n  };\n};\nvar logoutAction = function logoutAction() {\n  return {\n    type: \"LOGOUT_REQUEST\",\n    payload: {}\n  };\n};\nvar refreshTokensAction = function refreshTokensAction(nextAction) {\n  return {\n    type: \"REFRESH_TOKENS_REQUEST\",\n    payload: nextAction\n  };\n};\nvar toggleCategoryAction = function toggleCategoryAction(categoryType) {\n  return {\n    type: \"TOGGLE_CATEGORYS_TYPE_STORE\",\n    payload: {\n      categoryType: categoryType\n    }\n  };\n};\nvar addCategoryAction = function addCategoryAction(category) {\n  return {\n    type: \"ADD_CATEGORY_REQUEST\",\n    payload: category\n  };\n};\nvar updCategoryAction = function updCategoryAction(category) {\n  return {\n    type: \"UPD_ONE_CATEGORY_REQUEST\",\n    payload: {\n      category: category\n    }\n  };\n};\nvar delCategoryAction = function delCategoryAction(category) {\n  return {\n    type: \"DEL_ONE_CATEGORY_REQUEST\",\n    payload: {\n      category: category\n    }\n  };\n};\nvar getAllCategorysAction = function getAllCategorysAction(userId) {\n  return {\n    type: \"GET_CATEGORYS_REQUEST\",\n    payload: {\n      userId: userId\n    }\n  };\n};\nvar getAllListsWithCategorysAction = function getAllListsWithCategorysAction(obj) {\n  return {\n    type: \"GET_LISTS_REQUEST\",\n    payload: {\n      userIdAndDateRange: obj\n    }\n  };\n};\nvar updDataInStoreAction = function updDataInStoreAction(categorys) {\n  return {\n    type: \"UPD_DATA_STORE\",\n    payload: {\n      categorys: categorys\n    }\n  };\n};\nvar addCategoryInStoreAction = function addCategoryInStoreAction(category) {\n  return {\n    type: \"ADD_NEW_CATEGORY_STORE\",\n    payload: {\n      category: category\n    }\n  };\n};\nvar updOneCategoryInStoreAction = function updOneCategoryInStoreAction(category) {\n  return {\n    type: \"UPD_ONE_CATEGORY_STORE\",\n    payload: {\n      category: category\n    }\n  };\n};\nvar updOneListItemInStoreAction = function updOneListItemInStoreAction(listItem) {\n  return {\n    type: \"UPD_ONE_LIST_ITEM_STORE\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\nvar delOneCategoryInStoreAction = function delOneCategoryInStoreAction(category) {\n  return {\n    type: \"DEL_ONE_CATEGORY_STORE\",\n    payload: {\n      category: category\n    }\n  };\n};\nvar delOneListItemInStoreAction = function delOneListItemInStoreAction(listItem) {\n  return {\n    type: \"DEL_ONE_LIST_ITEM_STORE\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\nvar addListItemAction = function addListItemAction(listItem) {\n  return {\n    type: \"ADD_LIST_ITEM_REQUEST\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\nvar updListItemAction = function updListItemAction(listItem) {\n  return {\n    type: \"UPD_ONE_LIST_ITEM_REQUEST\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\nvar delListItemAction = function delListItemAction(listItem) {\n  return {\n    type: \"DEL_ONE_LIST_ITEM_REQUEST\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\nvar addListItemInStoreAction = function addListItemInStoreAction(listItem) {\n  return {\n    type: \"ADD_NEW_LIST_ITEM_STORE\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\n;// CONCATENATED MODULE: ./src/store/sagas.js\n\n\nvar _marked = /*#__PURE__*/regenerator_default().mark(fetchLogin),\n    _marked2 = /*#__PURE__*/regenerator_default().mark(fetchAuth),\n    _marked3 = /*#__PURE__*/regenerator_default().mark(fetchLogout),\n    _marked4 = /*#__PURE__*/regenerator_default().mark(fetchRefreshTokens),\n    _marked5 = /*#__PURE__*/regenerator_default().mark(fetchAddCategory),\n    _marked6 = /*#__PURE__*/regenerator_default().mark(fetchAllCategorys),\n    _marked7 = /*#__PURE__*/regenerator_default().mark(fetchUpdateCategory),\n    _marked8 = /*#__PURE__*/regenerator_default().mark(fetchDeleteCategory),\n    _marked9 = /*#__PURE__*/regenerator_default().mark(fetchAllListsWithCategorys),\n    _marked10 = /*#__PURE__*/regenerator_default().mark(fetchAddListItem),\n    _marked11 = /*#__PURE__*/regenerator_default().mark(fetchUpdateListItem),\n    _marked12 = /*#__PURE__*/regenerator_default().mark(fetchDeleteListItem),\n    _marked13 = /*#__PURE__*/regenerator_default().mark(sagas);\n\n\n\n\n\n\nvar api = new Api();\n\nfunction fetchLogin(action) {\n  var user;\n  return regenerator_default().wrap(function fetchLogin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.loginRequest, action.payload);\n\n        case 3:\n          user = _context.sent;\n\n          if (user.error) {\n            _context.next = 12;\n            break;\n          }\n\n          if (!user.tokens) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 8;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(saveTokensToStorage, user.tokens);\n\n        case 8:\n          _context.next = 10;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(loginUserAction(user));\n\n        case 10:\n          _context.next = 14;\n          break;\n\n        case 12:\n          _context.next = 14;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(loginErrorAction(user.error));\n\n        case 14:\n          _context.next = 19;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0.message);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 16]]);\n}\n\nfunction fetchAuth() {\n  var user;\n  return regenerator_default().wrap(function fetchAuth$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.getAuthDataBySession);\n\n        case 3:\n          user = _context2.sent;\n\n          if (user.error) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 7;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(loginUserAction(user));\n\n        case 7:\n          _context2.next = 16;\n          break;\n\n        case 9:\n          if (!(user.error.code === 'l03')) {\n            _context2.next = 14;\n            break;\n          }\n\n          _context2.next = 12;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(refreshTokensAction(authRequestAction()));\n\n        case 12:\n          _context2.next = 16;\n          break;\n\n        case 14:\n          _context2.next = 16;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(loginUserAction({\n            userName: null,\n            isLogin: false\n          }));\n\n        case 16:\n          _context2.next = 21;\n          break;\n\n        case 18:\n          _context2.prev = 18;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0.message);\n\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 18]]);\n}\n\nfunction fetchLogout() {\n  var response;\n  return regenerator_default().wrap(function fetchLogout$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.logoutRequest);\n\n        case 3:\n          response = _context3.sent;\n\n          if (response.error) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 7;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(clearTokensFromStorage);\n\n        case 7:\n          _context3.next = 9;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(logoutUserAction());\n\n        case 9:\n          _context3.next = 12;\n          break;\n\n        case 11:\n          console.log(response.error);\n\n        case 12:\n          _context3.next = 17;\n          break;\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0.message);\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 14]]);\n}\n\nfunction fetchRefreshTokens(nextAction) {\n  var response;\n  return regenerator_default().wrap(function fetchRefreshTokens$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.refreshTokens);\n\n        case 2:\n          response = _context4.sent;\n\n          if (!response.error) {\n            _context4.next = 8;\n            break;\n          }\n\n          _context4.next = 6;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(loginUserAction({\n            userName: null,\n            isLogin: false\n          }));\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.next = 10;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(saveTokensToStorage, response.tokens);\n\n        case 10:\n          _context4.next = 12;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(nextAction.payload);\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction fetchAddCategory(action) {\n  var response;\n  return regenerator_default().wrap(function fetchAddCategory$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.addCategoryRequest, action.payload);\n\n        case 2:\n          response = _context5.sent;\n          _context5.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(addCategoryInStoreAction(response.category));\n\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction fetchAllCategorys(action) {\n  var response;\n  return regenerator_default().wrap(function fetchAllCategorys$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.getAllCategorys, action.payload.userId);\n\n        case 2:\n          response = _context6.sent;\n          _context6.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(updDataInStoreAction(normalizeCategorys(response)));\n\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction fetchUpdateCategory(action) {\n  var response;\n  return regenerator_default().wrap(function fetchUpdateCategory$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.updCategoryRequest, action.payload.category);\n\n        case 2:\n          response = _context7.sent;\n          _context7.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(updOneCategoryInStoreAction(response.category));\n\n        case 5:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction fetchDeleteCategory(action) {\n  var response;\n  return regenerator_default().wrap(function fetchDeleteCategory$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.delCategoryRequest, action.payload.category);\n\n        case 2:\n          response = _context8.sent;\n          _context8.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(delOneCategoryInStoreAction(response.category));\n\n        case 5:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction fetchAllListsWithCategorys(action) {\n  var response, data;\n  return regenerator_default().wrap(function fetchAllListsWithCategorys$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.getAllListsWithCategorys, action.payload.userIdAndDateRange);\n\n        case 2:\n          response = _context9.sent;\n          data = normalizeLists(response);\n          _context9.next = 6;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(updDataInStoreAction(data));\n\n        case 6:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction fetchAddListItem(action) {\n  var response;\n  return regenerator_default().wrap(function fetchAddListItem$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.addListItemRequest, action.payload.listItem);\n\n        case 2:\n          response = _context10.sent;\n          _context10.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(addListItemInStoreAction(response.listItem));\n\n        case 5:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction fetchUpdateListItem(action) {\n  var response;\n  return regenerator_default().wrap(function fetchUpdateListItem$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.updListItemRequest, action.payload.listItem);\n\n        case 2:\n          response = _context11.sent;\n          _context11.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(updOneListItemInStoreAction(response.listItem));\n\n        case 5:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction fetchDeleteListItem(action) {\n  var response;\n  return regenerator_default().wrap(function fetchDeleteListItem$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.delListItemRequest, action.payload.listItem);\n\n        case 2:\n          response = _context12.sent;\n          _context12.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(delOneListItemInStoreAction(response.listItem));\n\n        case 5:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction sagas() {\n  return regenerator_default().wrap(function sagas$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"LOGIN_REQUEST\", fetchLogin);\n\n        case 2:\n          _context13.next = 4;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"AUTH_REQUEST\", fetchAuth);\n\n        case 4:\n          _context13.next = 6;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"REFRESH_TOKENS_REQUEST\", fetchRefreshTokens);\n\n        case 6:\n          _context13.next = 8;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"LOGOUT_REQUEST\", fetchLogout);\n\n        case 8:\n          _context13.next = 10;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"ADD_CATEGORY_REQUEST\", fetchAddCategory);\n\n        case 10:\n          _context13.next = 12;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"GET_CATEGORYS_REQUEST\", fetchAllCategorys);\n\n        case 12:\n          _context13.next = 14;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"UPD_ONE_CATEGORY_REQUEST\", fetchUpdateCategory);\n\n        case 14:\n          _context13.next = 16;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"GET_LISTS_REQUEST\", fetchAllListsWithCategorys);\n\n        case 16:\n          _context13.next = 18;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"ADD_LIST_ITEM_REQUEST\", fetchAddListItem);\n\n        case 18:\n          _context13.next = 20;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"DEL_ONE_CATEGORY_REQUEST\", fetchDeleteCategory);\n\n        case 20:\n          _context13.next = 22;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"UPD_ONE_LIST_ITEM_REQUEST\", fetchUpdateListItem);\n\n        case 22:\n          _context13.next = 24;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"DEL_ONE_LIST_ITEM_REQUEST\", fetchDeleteListItem);\n\n        case 24:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\n/* harmony default export */ const store_sagas = (sagas);\n// EXTERNAL MODULE: ./node_modules/ramda/es/clone.js + 5 modules\nvar clone = __webpack_require__(\"Wjd+fjFr\");\n;// CONCATENATED MODULE: ./src/store/reducers.js\n\n\nfunction returnStateReducer() {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  return prevState;\n}\nfunction userReducer() {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOGIN_STORE\":\n      {\n        return {\n          id: action.payload.id,\n          name: action.payload.userName,\n          isLogin: action.payload.isLogin\n        };\n      }\n\n    case \"LOGOUT_STORE\":\n      {\n        return {\n          id: null,\n          name: null,\n          isLogin: false,\n          loginErrorMes: null\n        };\n      }\n\n    case \"LOGIN_ERROR_STORE\":\n      {\n        return {\n          loginErrorMes: action.payload.error.mes\n        };\n      }\n  }\n\n  return prevState;\n}\nfunction toogleCategoryReducer() {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"TOGGLE_CATEGORYS_TYPE_STORE\":\n      {\n        return action.payload.categoryType;\n      }\n  }\n\n  return prevState;\n}\nfunction dataReducer() {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"UPD_DATA_STORE\":\n      {\n        return action.payload.categorys;\n      }\n\n    case \"ADD_NEW_CATEGORY_STORE\":\n      {\n        var data = (0,clone/* default */.Z)(prevState);\n        if (!data.entities.categorys) data.entities.categorys = {};\n        data.entities.categorys[action.payload.category.id] = action.payload.category;\n        data.result.categorys.push(action.payload.category.id);\n        return data;\n      }\n\n    case \"ADD_NEW_LIST_ITEM_STORE\":\n      {\n        var _data = (0,clone/* default */.Z)(prevState);\n\n        if (!_data.entities.list) _data.entities.list = {};\n        _data.entities.list[action.payload.listItem.id] = action.payload.listItem;\n\n        _data.entities.categorys[action.payload.listItem.categoryId].list.unshift(action.payload.listItem.id);\n\n        _data.entities.categorys[action.payload.listItem.categoryId].totalSum += action.payload.listItem.sum;\n        return _data;\n      }\n\n    case \"UPD_ONE_CATEGORY_STORE\":\n      {\n        var _data2 = (0,clone/* default */.Z)(prevState);\n\n        _data2.entities.categorys[action.payload.category.id] = action.payload.category;\n        return _data2;\n      }\n\n    case \"UPD_ONE_LIST_ITEM_STORE\":\n      {\n        var _data3 = (0,clone/* default */.Z)(prevState);\n\n        var listItem = action.payload.listItem;\n        var prevSum = prevState.entities.list[listItem.id].sum;\n        _data3.entities.list[listItem.id] = listItem;\n        _data3.entities.categorys[listItem.categoryId].totalSum -= prevSum;\n        _data3.entities.categorys[listItem.categoryId].totalSum += listItem.sum;\n        return _data3;\n      }\n\n    case \"DEL_ONE_CATEGORY_STORE\":\n      {\n        var _data4 = (0,clone/* default */.Z)(prevState);\n\n        delete _data4.entities.categorys[action.payload.category.id];\n        _data4.result.categorys = _data4.result.categorys.filter(function (categoryId) {\n          return categoryId !== action.payload.category.id;\n        });\n        return _data4;\n      }\n\n    case \"DEL_ONE_LIST_ITEM_STORE\":\n      {\n        var _data5 = (0,clone/* default */.Z)(prevState);\n\n        var _listItem = action.payload.listItem;\n\n        var newListArr = _data5.entities.categorys[_listItem.categoryId].list.filter(function (listId) {\n          return listId !== _listItem.id;\n        });\n\n        _data5.entities.categorys[_listItem.categoryId].list = newListArr;\n        _data5.entities.categorys[_listItem.categoryId].totalSum -= _listItem.sum;\n        delete _data5.entities.list[_listItem.id];\n        return _data5;\n      }\n  }\n\n  return prevState;\n}\n;// CONCATENATED MODULE: ./src/store/index.js\n\n\n\n\nvar sagaMiddleware = (0,redux_saga_core_npm_proxy_esm/* default */.ZP)();\nvar initialState = {\n  user: {\n    id: null,\n    name: null,\n    isLogin: null,\n    loginErrorMes: null\n  },\n  toggleCategory: 'expense',\n  menu: [{\n    title: 'Этот месяц',\n    link: 'month'\n  }, {\n    title: 'Прошлый месяц',\n    link: 'last-month'\n  }, {\n    title: 'Шесть месяцев',\n    link: 'half-year'\n  }, {\n    title: 'Этот год',\n    link: 'year'\n  }],\n  data: null\n};\nvar reducer = (0,redux/* combineReducers */.UY)({\n  user: userReducer,\n  menu: returnStateReducer,\n  data: dataReducer,\n  toggleCategory: toogleCategoryReducer\n});\nvar store = (0,redux/* createStore */.MT)(reducer, initialState, (0,redux/* applyMiddleware */.md)(sagaMiddleware));\nsagaMiddleware.run(store_sagas);\n;// CONCATENATED MODULE: ./src/components/MenuItem/component.js\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar MenuItem = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(MenuItem, _React$PureComponent);\n\n  var _super = _createSuper(MenuItem);\n\n  function MenuItem(props) {\n    classCallCheck_default()(this, MenuItem);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(MenuItem, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"li\", null, /*#__PURE__*/react.createElement(\"a\", {\n        href: \"/\".concat(this.props.link),\n        className: \"button button_period\"\n      }, this.props.title));\n    }\n  }]);\n\n  return MenuItem;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/MenuItem/index.js\n\n/* harmony default export */ const components_MenuItem = (MenuItem);\n;// CONCATENATED MODULE: ./src/components/Menu/component.js\n\n\n\n\n\n\nfunction component_createSuper(Derived) { var hasNativeReflectConstruct = component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar MenuComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(MenuComponent, _React$PureComponent);\n\n  var _super = component_createSuper(MenuComponent);\n\n  function MenuComponent(props) {\n    classCallCheck_default()(this, MenuComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(MenuComponent, [{\n    key: \"renderItems\",\n    value: function renderItems() {\n      return this.props.menu.map(function (menuItem, i) {\n        return /*#__PURE__*/react.createElement(components_MenuItem, {\n          key: i,\n          title: menuItem.title,\n          link: menuItem.link\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"nav\", null, /*#__PURE__*/react.createElement(\"ul\", {\n        className: \"menu\"\n      }, this.renderItems()));\n    }\n  }]);\n\n  return MenuComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/Menu/container.js\n\n\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    menu: state.menu\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar Menu = (0,es/* connect */.$j)(mapStateToProps, mapDispatchToProps)(MenuComponent);\n;// CONCATENATED MODULE: ./src/components/Menu/index.js\n\n/* harmony default export */ const components_Menu = (Menu);\n;// CONCATENATED MODULE: ./src/components/UserLogoutLink/component.js\n\n\n\n\n\n\nfunction UserLogoutLink_component_createSuper(Derived) { var hasNativeReflectConstruct = UserLogoutLink_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction UserLogoutLink_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar UserLogoutLinkComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(UserLogoutLinkComponent, _React$PureComponent);\n\n  var _super = UserLogoutLink_component_createSuper(UserLogoutLinkComponent);\n\n  function UserLogoutLinkComponent(props) {\n    classCallCheck_default()(this, UserLogoutLinkComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(UserLogoutLinkComponent, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"user\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"user-name\"\n      }, this.props.userName), /*#__PURE__*/react.createElement(\"button\", {\n        onClick: this.props.logout,\n        className: \"user-logout\"\n      }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\"));\n    }\n  }]);\n\n  return UserLogoutLinkComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/UserLogoutLink/container.js\n\n\n\n\n\nvar container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    userName: state.user.name\n  };\n};\n\nvar container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    logout: function logout() {\n      return dispatch(logoutAction());\n    }\n  };\n};\n\nvar UserLogoutLink = (0,es/* connect */.$j)(container_mapStateToProps, container_mapDispatchToProps)(UserLogoutLinkComponent);\n;// CONCATENATED MODULE: ./src/components/UserLogoutLink/index.js\n\n/* harmony default export */ const components_UserLogoutLink = (UserLogoutLink);\n;// CONCATENATED MODULE: ./src/components/SetupLink/component.js\n\n\nfunction SetupLink() {\n  return /*#__PURE__*/react.createElement(\"a\", {\n    href: \"/setup/\",\n    className: \"button-setup\"\n  }, \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\");\n}\n;// CONCATENATED MODULE: ./src/components/SetupLink/index.js\n\n/* harmony default export */ const components_SetupLink = (SetupLink);\n;// CONCATENATED MODULE: ./src/pages/header/index.js\n\n\n\n\n\n\nfunction header_createSuper(Derived) { var hasNativeReflectConstruct = header_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction header_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar Header = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(Header, _React$Component);\n\n  var _super = header_createSuper(Header);\n\n  function Header() {\n    classCallCheck_default()(this, Header);\n\n    return _super.apply(this, arguments);\n  }\n\n  createClass_default()(Header, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"header\", {\n        className: \"top\"\n      }, /*#__PURE__*/react.createElement(components_Menu, null), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"menu-setup\"\n      }, /*#__PURE__*/react.createElement(components_SetupLink, null), /*#__PURE__*/react.createElement(components_UserLogoutLink, null)));\n    }\n  }]);\n\n  return Header;\n}(react.Component);\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(\"PJYZgaOA\");\nvar assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);\n;// CONCATENATED MODULE: ./src/components/ChartsItem/component.js\n\n\n\n\n\n\n\n\nfunction ChartsItem_component_createSuper(Derived) { var hasNativeReflectConstruct = ChartsItem_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction ChartsItem_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar ChartsItem = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ChartsItem, _React$PureComponent);\n\n  var _super = ChartsItem_component_createSuper(ChartsItem);\n\n  function ChartsItem(props) {\n    var _this;\n\n    classCallCheck_default()(this, ChartsItem);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      chartStyleName: \"width\"\n    };\n    _this.updateChartDimension = _this.updateChartDimension.bind(assertThisInitialized_default()(_this));\n    return _this;\n  }\n\n  createClass_default()(ChartsItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateChartDimension();\n      window.addEventListener(\"resize\", this.updateChartDimension);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateChartDimension);\n    }\n  }, {\n    key: \"updateChartDimension\",\n    value: function updateChartDimension() {\n      if (window.innerWidth <= 480) {\n        this.setState({\n          chartStyleName: \"height\"\n        });\n      } else {\n        this.setState({\n          chartStyleName: \"width\"\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"chart\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        style: defineProperty_default()({}, this.state.chartStyleName, \"\".concat(this.props.persent, \"%\")),\n        className: \"chart-line chart-line_\".concat(this.props.type)\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"chart-txt\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"chart-txt_title\"\n      }, this.props.title), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"chart-txt_val\"\n      }, this.props.sum, \" \\u20BD\")));\n    }\n  }]);\n\n  return ChartsItem;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/ChartsItem/index.js\n\n/* harmony default export */ const components_ChartsItem = (ChartsItem);\n;// CONCATENATED MODULE: ./src/components/Charts/component.js\n\n\n\n\n\n\nfunction Charts_component_createSuper(Derived) { var hasNativeReflectConstruct = Charts_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Charts_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar ChartsComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ChartsComponent, _React$PureComponent);\n\n  var _super = Charts_component_createSuper(ChartsComponent);\n\n  function ChartsComponent(props) {\n    classCallCheck_default()(this, ChartsComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(ChartsComponent, [{\n    key: \"renderItems\",\n    value: function renderItems() {\n      return this.props.charts.map(function (chartsItem, i) {\n        return /*#__PURE__*/react.createElement(components_ChartsItem, {\n          key: i,\n          title: chartsItem.title,\n          sum: chartsItem.sum,\n          persent: chartsItem.persent,\n          type: chartsItem.type\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if ('charts' in this.props) {\n        return /*#__PURE__*/react.createElement(\"div\", {\n          className: \"charts\"\n        }, this.renderItems());\n      }\n\n      return [];\n    }\n  }]);\n\n  return ChartsComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/utils/calcCharts.js\nfunction calcCharts(data) {\n  var income = 0;\n  var expense = 0;\n  data.result.categorys.map(function (categoryId) {\n    if (data.entities.categorys[categoryId].type === \"income\") {\n      income += data.entities.categorys[categoryId].totalSum;\n    } else {\n      expense += data.entities.categorys[categoryId].totalSum;\n    }\n  });\n  var persents = calcChartsPersents(income, expense);\n  return [{\n    title: \"\\u0414\\u043E\\u0445\\u043E\\u0434\",\n    type: \"income\",\n    sum: income,\n    persent: persents.incomePersents\n  }, {\n    title: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\",\n    type: \"expense\",\n    sum: expense,\n    persent: persents.expensePersents\n  }, {\n    title: \"\\u041D\\u0430\\u043A\\u043E\\u043F\\u043B\\u0435\\u043D\\u0438\\u044F\",\n    type: \"savings\",\n    sum: income - expense,\n    persent: persents.savingsPersents\n  }];\n}\nfunction calcChartsPersents(income, expense) {\n  var onePersent = 0;\n  if (income !== 0 && expense !== 0) onePersent = income > expense ? 100 / income : 100 / expense;\n  var incomePersents = Math.ceil(income > expense ? 100 : income * onePersent);\n  var expensePersents = Math.ceil(income < expense ? 100 : expense * onePersent);\n  var savingsPersents = Math.ceil((income - expense) * onePersent);\n  if (incomePersents < 1) incomePersents = 1;\n  if (expensePersents < 1) expensePersents = 1;\n  if (savingsPersents < 1) savingsPersents = 1;\n  return {\n    incomePersents: incomePersents,\n    expensePersents: expensePersents,\n    savingsPersents: savingsPersents\n  };\n}\n;// CONCATENATED MODULE: ./src/components/Charts/container.js\n\n\n\n\n\nvar Charts_container_mapStateToProps = function mapStateToProps(state) {\n  if (state.data === null) return {};\n  return {\n    charts: calcCharts(state.data)\n  };\n};\n\nvar Charts = (0,es/* connect */.$j)(Charts_container_mapStateToProps)(ChartsComponent);\n;// CONCATENATED MODULE: ./src/components/Charts/index.js\n\n/* harmony default export */ const components_Charts = (Charts);\n;// CONCATENATED MODULE: ./src/components/PlusButton/component.js\n\n\n\n\n\n\nfunction PlusButton_component_createSuper(Derived) { var hasNativeReflectConstruct = PlusButton_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction PlusButton_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar PlusButton = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(PlusButton, _React$PureComponent);\n\n  var _super = PlusButton_component_createSuper(PlusButton);\n\n  function PlusButton(props) {\n    classCallCheck_default()(this, PlusButton);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(PlusButton, [{\n    key: \"returnClassName\",\n    value: function returnClassName() {\n      if (this.props.isOpen) {\n        return 'minus';\n      }\n\n      return 'plus';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"button\", {\n        onClick: this.props.toggleCallback,\n        className: this.returnClassName()\n      });\n    }\n  }]);\n\n  return PlusButton;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/PlusButton/index.js\n\n/* harmony default export */ const components_PlusButton = (PlusButton);\n;// CONCATENATED MODULE: ./src/components/SubmitButton/component.js\n\n\n\n\n\n\nfunction SubmitButton_component_createSuper(Derived) { var hasNativeReflectConstruct = SubmitButton_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction SubmitButton_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar SubmitButton = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(SubmitButton, _React$PureComponent);\n\n  var _super = SubmitButton_component_createSuper(SubmitButton);\n\n  function SubmitButton(props) {\n    classCallCheck_default()(this, SubmitButton);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(SubmitButton, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"button\", {\n        className: \"button \".concat(this.props.className),\n        onClick: this.props.callback\n      }, this.props.children);\n    }\n  }]);\n\n  return SubmitButton;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/SubmitButton/index.js\n\n/* harmony default export */ const components_SubmitButton = (SubmitButton);\n;// CONCATENATED MODULE: ./src/components/AddForm/component.js\n\n\n\n\n\n\n\nfunction component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { component_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction AddForm_component_createSuper(Derived) { var hasNativeReflectConstruct = AddForm_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction AddForm_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar AddFormComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(AddFormComponent, _React$PureComponent);\n\n  var _super = AddForm_component_createSuper(AddFormComponent);\n\n  function AddFormComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, AddFormComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      sum: '',\n      title: ''\n    };\n    return _this;\n  }\n\n  createClass_default()(AddFormComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(e, val) {\n      var fieldValue = val === \"sum\" ? e.target.value.replace(/\\D/, '') : e.target.value;\n      this.setState(defineProperty_default()({}, val, fieldValue));\n    }\n  }, {\n    key: \"checkAndAddListItem\",\n    value: function checkAndAddListItem() {\n      if (this.state.sum && this.state.title) {\n        this.props.addListItem(component_objectSpread(component_objectSpread({}, {\n          categoryId: this.props.categoryId\n        }), this.state));\n        this.setState({\n          sum: '',\n          title: ''\n        });\n        this.props.toggleCallback();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.isOpen === true) {\n        return /*#__PURE__*/react.createElement(\"div\", {\n          className: \"add-form\"\n        }, /*#__PURE__*/react.createElement(\"input\", {\n          value: this.state.sum,\n          onChange: function onChange(e) {\n            return _this2.handleChange(e, 'sum');\n          },\n          placeholder: \"\\u0421\\u0443\\u043C\\u043C\\u0430\",\n          type: \"text\",\n          className: \"add-form__sum\"\n        }), /*#__PURE__*/react.createElement(\"textarea\", {\n          value: this.state.comment,\n          onChange: function onChange(e) {\n            return _this2.handleChange(e, 'title');\n          },\n          placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n          className: \"add-form__txt\"\n        }), /*#__PURE__*/react.createElement(components_SubmitButton, {\n          className: 'button_add-form',\n          callback: function callback() {\n            return _this2.checkAndAddListItem();\n          }\n        }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n      }\n\n      return null;\n    }\n  }]);\n\n  return AddFormComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/AddForm/container.js\n\n\n\n\n\nvar AddForm_container_mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar AddForm_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addListItem: function addListItem(listItem) {\n      return dispatch(addListItemAction(listItem));\n    }\n  };\n};\n\nvar AddForm = (0,es/* connect */.$j)(AddForm_container_mapStateToProps, AddForm_container_mapDispatchToProps)(AddFormComponent);\n;// CONCATENATED MODULE: ./src/components/AddForm/index.js\n\n/* harmony default export */ const components_AddForm = (AddForm);\n;// CONCATENATED MODULE: ./src/components/ModalWindow/component.js\n\n\n\n\n\n\nfunction ModalWindow_component_createSuper(Derived) { var hasNativeReflectConstruct = ModalWindow_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction ModalWindow_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar ModalWindowComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ModalWindowComponent, _React$PureComponent);\n\n  var _super = ModalWindow_component_createSuper(ModalWindowComponent);\n\n  function ModalWindowComponent(props) {\n    classCallCheck_default()(this, ModalWindowComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(ModalWindowComponent, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"modal-window-container\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"modal-window\"\n      }, this.props.children));\n    }\n  }]);\n\n  return ModalWindowComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/ModalWindow/container.js\n\n\n\n\nvar ModalWindow_container_mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar ModalWindow_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar ModalWindow = (0,es/* connect */.$j)(ModalWindow_container_mapStateToProps, ModalWindow_container_mapDispatchToProps)(ModalWindowComponent);\n;// CONCATENATED MODULE: ./src/components/ModalWindow/index.js\n\n/* harmony default export */ const components_ModalWindow = (ModalWindow);\n;// CONCATENATED MODULE: ./src/components/CloseWindowButton/component.js\n\n\n\n\n\n\nfunction CloseWindowButton_component_createSuper(Derived) { var hasNativeReflectConstruct = CloseWindowButton_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction CloseWindowButton_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar CloseWindowButton = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CloseWindowButton, _React$PureComponent);\n\n  var _super = CloseWindowButton_component_createSuper(CloseWindowButton);\n\n  function CloseWindowButton(props) {\n    classCallCheck_default()(this, CloseWindowButton);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(CloseWindowButton, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"close-window-container\"\n      }, /*#__PURE__*/react.createElement(\"button\", {\n        onClick: this.props.closeCallback,\n        className: \"close-window\"\n      }));\n    }\n  }]);\n\n  return CloseWindowButton;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/CloseWindowButton/index.js\n\n/* harmony default export */ const components_CloseWindowButton = (CloseWindowButton);\n;// CONCATENATED MODULE: ./src/components/ConfirmDeleteWindow/component.js\n\n\n\n\n\n\nfunction ConfirmDeleteWindow_component_createSuper(Derived) { var hasNativeReflectConstruct = ConfirmDeleteWindow_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction ConfirmDeleteWindow_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar ConfirmDeleteWindow = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ConfirmDeleteWindow, _React$PureComponent);\n\n  var _super = ConfirmDeleteWindow_component_createSuper(ConfirmDeleteWindow);\n\n  function ConfirmDeleteWindow(props) {\n    classCallCheck_default()(this, ConfirmDeleteWindow);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(ConfirmDeleteWindow, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(components_ModalWindow, null, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(components_CloseWindowButton, {\n        closeCallback: this.props.cancelCallback\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"delete-window-text\"\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \", this.props.title, \"?\"), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"modal-window__buttons\"\n      }, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: this.props.deleteCallback,\n        className: \"button_modal-window\"\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"), /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: this.props.cancelCallback,\n        className: \"button_modal-window\"\n      }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n    }\n  }]);\n\n  return ConfirmDeleteWindow;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/ConfirmDeleteWindow/index.js\n\n/* harmony default export */ const components_ConfirmDeleteWindow = (ConfirmDeleteWindow);\n;// CONCATENATED MODULE: ./src/utils/formatListDate.js\nfunction formatDate(dateString) {\n  var dateArr = dateString.slice(0, 10).split('-');\n  return \"\".concat(dateArr[2], \"-\").concat(dateArr[1], \"-\").concat(dateArr[0]);\n}\n;// CONCATENATED MODULE: ./src/components/ListItem/component.js\n\n\n\n\n\n\n\n\nfunction ListItem_component_createSuper(Derived) { var hasNativeReflectConstruct = ListItem_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction ListItem_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\nvar ListItemComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ListItemComponent, _React$PureComponent);\n\n  var _super = ListItem_component_createSuper(ListItemComponent);\n\n  function ListItemComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, ListItemComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isOpenEditWindow: false,\n      isOpenConfirmDelete: false,\n      title: _this.props.title,\n      sum: _this.props.sum\n    };\n    _this.openEditWindow = _this.openEditWindow.bind(assertThisInitialized_default()(_this));\n    _this.closeWindows = _this.closeWindows.bind(assertThisInitialized_default()(_this));\n    _this.openConfirmDeleteWindow = _this.openConfirmDeleteWindow.bind(assertThisInitialized_default()(_this));\n    _this.saveListItem = _this.saveListItem.bind(assertThisInitialized_default()(_this));\n    _this.deleteListItem = _this.deleteListItem.bind(assertThisInitialized_default()(_this));\n    return _this;\n  }\n\n  createClass_default()(ListItemComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(e, val) {\n      var fieldValue = val === \"sum\" ? e.target.value.replace(/\\D/, '') : e.target.value;\n      this.setState(defineProperty_default()({}, val, fieldValue));\n    }\n  }, {\n    key: \"openEditWindow\",\n    value: function openEditWindow() {\n      this.setState({\n        isOpenEditWindow: true,\n        isOpenConfirmDelete: false\n      });\n    }\n  }, {\n    key: \"openConfirmDeleteWindow\",\n    value: function openConfirmDeleteWindow() {\n      this.setState({\n        isOpenEditWindow: false,\n        isOpenConfirmDelete: true\n      });\n    }\n  }, {\n    key: \"closeWindows\",\n    value: function closeWindows() {\n      this.setState({\n        isOpenEditWindow: false,\n        isOpenConfirmDelete: false\n      });\n    }\n  }, {\n    key: \"saveListItem\",\n    value: function saveListItem() {\n      this.props.updListItem({\n        id: this.props.id,\n        title: this.state.title,\n        sum: this.state.sum\n      });\n      this.closeWindows();\n    }\n  }, {\n    key: \"deleteListItem\",\n    value: function deleteListItem() {\n      this.props.delListItem({\n        id: this.props.id,\n        sum: this.props.sum\n      });\n      this.closeWindows();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return [/*#__PURE__*/react.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.openEditWindow();\n        },\n        key: this.props.id,\n        className: \"category-item\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-item__txt\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-item__date\"\n      }, formatDate(this.props.date)), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-item__descr\"\n      }, this.props.title)), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-item__sum\"\n      }, this.props.sum, \" \\u20BD\")), this.state.isOpenEditWindow && /*#__PURE__*/react.createElement(components_ModalWindow, {\n        key: \"ew\".concat(this.props.id)\n      }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(components_CloseWindowButton, {\n        closeCallback: this.closeWindows\n      }), /*#__PURE__*/react.createElement(\"input\", {\n        value: this.state.sum,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'sum');\n        },\n        placeholder: \"\\u0421\\u0443\\u043C\\u043C\\u0430\",\n        type: \"text\",\n        className: \"add-form__sum\"\n      }), /*#__PURE__*/react.createElement(\"textarea\", {\n        value: this.state.title,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'title');\n        },\n        placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        className: \"add-form__txt\"\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"modal-window__buttons\"\n      }, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this2.saveListItem();\n        },\n        className: \"button_modal-window\"\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this2.openConfirmDeleteWindow();\n        },\n        className: \"button_modal-window\"\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")))), this.state.isOpenConfirmDelete && /*#__PURE__*/react.createElement(components_ConfirmDeleteWindow, {\n        key: \"dw\".concat(this.props.id),\n        cancelCallback: function cancelCallback() {\n          return _this2.closeWindows();\n        },\n        deleteCallback: function deleteCallback() {\n          return _this2.deleteListItem();\n        },\n        title: this.props.title\n      })];\n    }\n  }]);\n\n  return ListItemComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/ListItem/container.js\n\n\n\n\n\nvar ListItem_container_mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar ListItem_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updListItem: function updListItem(listItem) {\n      return dispatch(updListItemAction(listItem));\n    },\n    delListItem: function delListItem(listItem) {\n      return dispatch(delListItemAction(listItem));\n    }\n  };\n};\n\nvar ListItem = (0,es/* connect */.$j)(ListItem_container_mapStateToProps, ListItem_container_mapDispatchToProps)(ListItemComponent);\n;// CONCATENATED MODULE: ./src/components/ListItem/index.js\n\n/* harmony default export */ const components_ListItem = (ListItem);\n;// CONCATENATED MODULE: ./src/components/List/component.js\n\n\n\n\n\n\nfunction List_component_createSuper(Derived) { var hasNativeReflectConstruct = List_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction List_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar ListComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ListComponent, _React$PureComponent);\n\n  var _super = List_component_createSuper(ListComponent);\n\n  function ListComponent(props) {\n    classCallCheck_default()(this, ListComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(ListComponent, [{\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this = this;\n\n      if (this.props.listIdArr.length > 0) {\n        return this.props.listIdArr.map(function (listItemId) {\n          var listItem = _this.props.list[listItemId];\n          return /*#__PURE__*/react.createElement(components_ListItem, {\n            id: listItem.id,\n            date: listItem.date,\n            key: listItem.id,\n            title: listItem.title,\n            sum: listItem.sum\n          });\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.isOpen === true) {\n        return /*#__PURE__*/react.createElement(\"div\", {\n          className: \"category-list\"\n        }, this.renderItems());\n      }\n\n      return null;\n    }\n  }]);\n\n  return ListComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/List/container.js\n\n\n\n\nvar List_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    list: state.data.entities.list\n  };\n};\n\nvar List_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar List = (0,es/* connect */.$j)(List_container_mapStateToProps, List_container_mapDispatchToProps)(ListComponent);\n;// CONCATENATED MODULE: ./src/components/List/index.js\n\n/* harmony default export */ const components_List = (List);\n;// CONCATENATED MODULE: ./src/components/CategoryItem/component.js\n\n\n\n\n\n\nfunction CategoryItem_component_createSuper(Derived) { var hasNativeReflectConstruct = CategoryItem_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction CategoryItem_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar CategoryItem = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CategoryItem, _React$PureComponent);\n\n  var _super = CategoryItem_component_createSuper(CategoryItem);\n\n  function CategoryItem(props) {\n    var _this;\n\n    classCallCheck_default()(this, CategoryItem);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isOpenList: false,\n      isOpenForm: false\n    };\n    return _this;\n  }\n\n  createClass_default()(CategoryItem, [{\n    key: \"toggleList\",\n    value: function toggleList() {\n      this.setState({\n        isOpenList: !this.state.isOpenList\n      });\n    }\n  }, {\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        isOpenForm: !this.state.isOpenForm\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category__header\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.toggleList();\n        },\n        className: \"category-txt \".concat(this.state.isOpenList ? \"category-txt_rotate90\" : \"category-txt_rotate0\")\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-txt__title\"\n      }, this.props.title), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-txt__sum\"\n      }, this.props.sum > 0 ? this.props.sum : 0, \" \\u20BD\")), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"add-button\"\n      }, /*#__PURE__*/react.createElement(components_PlusButton, {\n        isOpen: this.state.isOpenForm,\n        toggleCallback: function toggleCallback() {\n          return _this2.toggleForm();\n        }\n      }))), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-content\"\n      }, /*#__PURE__*/react.createElement(components_AddForm, {\n        categoryType: this.props.type,\n        categoryId: this.props.id,\n        isOpen: this.state.isOpenForm,\n        toggleCallback: function toggleCallback() {\n          return _this2.toggleForm();\n        }\n      }), /*#__PURE__*/react.createElement(components_List, {\n        listIdArr: this.props.listIdArr,\n        isOpen: this.state.isOpenList\n      })));\n    }\n  }]);\n\n  return CategoryItem;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/CategoryItem/index.js\n\n/* harmony default export */ const components_CategoryItem = (CategoryItem);\n;// CONCATENATED MODULE: ./src/components/Category/component.js\n\n\n\n\n\n\nfunction Category_component_createSuper(Derived) { var hasNativeReflectConstruct = Category_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Category_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar CategoryComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CategoryComponent, _React$PureComponent);\n\n  var _super = Category_component_createSuper(CategoryComponent);\n\n  function CategoryComponent(props) {\n    classCallCheck_default()(this, CategoryComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(CategoryComponent, [{\n    key: \"returnClassName\",\n    value: function returnClassName() {\n      if (this.props.type !== this.props.toggleCategory) {\n        return 'details__block_hide';\n      }\n\n      return '';\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this = this;\n\n      return this.props.categorysIdArr.map(function (categoryId) {\n        var category = _this.props.categorys[categoryId];\n\n        if (category.type === _this.props.type) {\n          return /*#__PURE__*/react.createElement(components_CategoryItem, {\n            key: category.id,\n            id: category.id,\n            title: category.title,\n            type: category.type,\n            sum: category.totalSum,\n            listIdArr: category.list\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if ('categorys' in this.props) {\n        return /*#__PURE__*/react.createElement(\"div\", {\n          className: \"details__block \".concat(this.returnClassName())\n        }, this.renderItems());\n      }\n\n      return [];\n    }\n  }]);\n\n  return CategoryComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/Category/container.js\n\n\n\n\nvar Category_container_mapStateToProps = function mapStateToProps(state) {\n  if (state.data === null) return {};\n  return {\n    categorys: state.data.entities.categorys,\n    categorysIdArr: state.data.result.categorys,\n    toggleCategory: state.toggleCategory\n  };\n};\n\nvar Category_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar Category = (0,es/* connect */.$j)(Category_container_mapStateToProps, Category_container_mapDispatchToProps)(CategoryComponent);\n;// CONCATENATED MODULE: ./src/components/Category/index.js\n\n/* harmony default export */ const components_Category = (Category);\n;// CONCATENATED MODULE: ./src/components/ToggleCategory/component.js\n\n\n\n\n\n\nfunction ToggleCategory_component_createSuper(Derived) { var hasNativeReflectConstruct = ToggleCategory_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction ToggleCategory_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar ToggleCategoryComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ToggleCategoryComponent, _React$PureComponent);\n\n  var _super = ToggleCategory_component_createSuper(ToggleCategoryComponent);\n\n  function ToggleCategoryComponent(props) {\n    classCallCheck_default()(this, ToggleCategoryComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(ToggleCategoryComponent, [{\n    key: \"returnClassName\",\n    value: function returnClassName(type) {\n      if (type === this.props.toggleCategory) {\n        return 'button_active';\n      }\n\n      return '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/react.createElement(\"ul\", {\n        className: \"menu__details menu__details_search\"\n      }, /*#__PURE__*/react.createElement(\"li\", null, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this.props.toggle('expense');\n        },\n        className: \"button_details \".concat(this.returnClassName('expense'))\n      }, \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B\")), /*#__PURE__*/react.createElement(\"li\", null, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this.props.toggle('income');\n        },\n        className: \"button_details \".concat(this.returnClassName('income'))\n      }, \"\\u0414\\u043E\\u0445\\u043E\\u0434\\u044B\")));\n    }\n  }]);\n\n  return ToggleCategoryComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/ToggleCategory/container.js\n\n\n\n\n\nvar ToggleCategory_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    toggleCategory: state.toggleCategory\n  };\n};\n\nvar ToggleCategory_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggle: function toggle(categoryType) {\n      return dispatch(toggleCategoryAction(categoryType));\n    }\n  };\n};\n\nvar ToggleCategory = (0,es/* connect */.$j)(ToggleCategory_container_mapStateToProps, ToggleCategory_container_mapDispatchToProps)(ToggleCategoryComponent);\n;// CONCATENATED MODULE: ./src/components/ToggleCategory/index.js\n\n/* harmony default export */ const components_ToggleCategory = (ToggleCategory);\n;// CONCATENATED MODULE: ./src/utils/calcDateRange.js\nfunction calcDateRange(period) {\n  var date = new Date();\n  var dateMin;\n  var dateMax;\n  var yearMin;\n  var monthMin;\n\n  switch (period) {\n    case 'month':\n      dateMin = new Date(date.getFullYear(), date.getMonth(), 1);\n      dateMax = new Date();\n      break;\n\n    case 'last-month':\n      yearMin = date.getFullYear();\n      monthMin = date.getMonth() - 1;\n\n      if (monthMin < 0) {\n        --yearMin;\n        monthMin = 11;\n      }\n\n      dateMin = new Date(yearMin, monthMin, 1);\n      dateMax = new Date(date.getFullYear(), date.getMonth(), 1);\n      break;\n\n    case 'half-year':\n      yearMin = date.getFullYear();\n      monthMin = date.getMonth() - 6;\n\n      if (monthMin < 0) {\n        --yearMin;\n        monthMin = 11 - -monthMin;\n      }\n\n      dateMin = new Date(yearMin, monthMin, 1);\n      dateMax = new Date(date.getFullYear(), date.getMonth(), 1);\n      break;\n\n    case 'year':\n      dateMin = new Date(date.getFullYear(), 0, 1);\n      dateMax = new Date();\n      break;\n\n    default:\n      dateMin = new Date(date.getFullYear(), date.getMonth(), 1);\n      dateMax = new Date();\n  }\n\n  return {\n    dateMin: dateMin,\n    dateMax: dateMax\n  };\n}\n;// CONCATENATED MODULE: ./src/components/Categorys/component.js\n\n\n\n\n\n\n\nfunction Categorys_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction Categorys_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Categorys_component_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Categorys_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Categorys_component_createSuper(Derived) { var hasNativeReflectConstruct = Categorys_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Categorys_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar CategorysComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CategorysComponent, _React$PureComponent);\n\n  var _super = Categorys_component_createSuper(CategorysComponent);\n\n  function CategorysComponent(props) {\n    classCallCheck_default()(this, CategorysComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(CategorysComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dateRange = calcDateRange(this.props.datePeriod);\n      this.props.getAllListsWithCategorys(Categorys_component_objectSpread(Categorys_component_objectSpread({}, {\n        userId: this.props.user.id\n      }), dateRange));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return [/*#__PURE__*/react.createElement(components_ToggleCategory, {\n        key: \"ct01\"\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        key: \"ct02\",\n        className: \"details details_categorys\"\n      }, /*#__PURE__*/react.createElement(components_Category, {\n        type: \"expense\"\n      }), /*#__PURE__*/react.createElement(components_Category, {\n        type: \"income\"\n      }))];\n    }\n  }]);\n\n  return CategorysComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/Categorys/container.js\n\n\n\n\n\nvar Categorys_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar Categorys_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getAllListsWithCategorys: function getAllListsWithCategorys(userIdAndDateRange) {\n      return dispatch(getAllListsWithCategorysAction(userIdAndDateRange));\n    }\n  };\n};\n\nvar Categorys = (0,es/* connect */.$j)(Categorys_container_mapStateToProps, Categorys_container_mapDispatchToProps)(CategorysComponent);\n;// CONCATENATED MODULE: ./src/components/Categorys/index.js\n\n/* harmony default export */ const components_Categorys = (Categorys);\n;// CONCATENATED MODULE: ./src/pages/home/index.js\n\n\n\n\n\n\nfunction home_createSuper(Derived) { var hasNativeReflectConstruct = home_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction home_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar Home = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(Home, _React$Component);\n\n  var _super = home_createSuper(Home);\n\n  function Home() {\n    classCallCheck_default()(this, Home);\n\n    return _super.apply(this, arguments);\n  }\n\n  createClass_default()(Home, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(Header, null), /*#__PURE__*/react.createElement(\"section\", null, /*#__PURE__*/react.createElement(components_Charts, null)), /*#__PURE__*/react.createElement(\"section\", null, /*#__PURE__*/react.createElement(components_Categorys, {\n        datePeriod: this.props.urlParams.period\n      })));\n    }\n  }]);\n\n  return Home;\n}(react.Component);\n\n\n;// CONCATENATED MODULE: ./src/components/RadioButton/component.js\n\n\n\n\n\n\nfunction RadioButton_component_createSuper(Derived) { var hasNativeReflectConstruct = RadioButton_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction RadioButton_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar RadioButton = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(RadioButton, _React$PureComponent);\n\n  var _super = RadioButton_component_createSuper(RadioButton);\n\n  function RadioButton(props) {\n    var _this;\n\n    classCallCheck_default()(this, RadioButton);\n\n    _this = _super.call(this, props);\n    _this.defaultChecked = _this.props.defaultChecked || false;\n    return _this;\n  }\n\n  createClass_default()(RadioButton, [{\n    key: \"render\",\n    value: function render() {\n      return [/*#__PURE__*/react.createElement(\"input\", {\n        key: 'rb01',\n        className: \"radio-button\",\n        type: \"radio\",\n        id: this.props.id,\n        name: this.props.name,\n        value: this.props.value,\n        defaultChecked: this.defaultChecked,\n        onClick: this.props.callback\n      }), /*#__PURE__*/react.createElement(\"label\", {\n        key: 'rb02',\n        className: \"\".concat(this.props.className, \" radio-button-lable\"),\n        htmlFor: this.props.id\n      }, this.props.children)];\n    }\n  }]);\n\n  return RadioButton;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/RadioButton/index.js\n\n/* harmony default export */ const components_RadioButton = (RadioButton);\n;// CONCATENATED MODULE: ./src/components/AddCategory/component.js\n\n\n\n\n\n\n\n\nfunction AddCategory_component_createSuper(Derived) { var hasNativeReflectConstruct = AddCategory_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction AddCategory_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\nvar AddCategoryComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(AddCategoryComponent, _React$PureComponent);\n\n  var _super = AddCategory_component_createSuper(AddCategoryComponent);\n\n  function AddCategoryComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, AddCategoryComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      type: 'expense',\n      title: '',\n      userId: props.user.id\n    };\n    _this.handleChange = _this.handleChange.bind(assertThisInitialized_default()(_this));\n    _this.addCategoryAndResetState = _this.addCategoryAndResetState.bind(assertThisInitialized_default()(_this));\n    return _this;\n  }\n\n  createClass_default()(AddCategoryComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(e, val) {\n      this.setState(defineProperty_default()({}, val, e.target.value));\n    }\n  }, {\n    key: \"addCategoryAndResetState\",\n    value: function addCategoryAndResetState(category) {\n      if (this.state.title !== '') {\n        this.props.addCategory(category);\n        this.setState({\n          title: ''\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/react.createElement(\"form\", {\n        className: \"setup-form\",\n        onSubmit: function onSubmit(e) {\n          return e.preventDefault();\n        }\n      }, /*#__PURE__*/react.createElement(components_RadioButton, {\n        className: 'radio-setup-lable',\n        id: 'radio-expense',\n        name: 'category-type',\n        value: 'expense',\n        defaultChecked: true,\n        callback: function callback(e) {\n          return _this2.handleChange(e, 'type');\n        }\n      }, \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\"), /*#__PURE__*/react.createElement(components_RadioButton, {\n        className: 'radio-setup-lable',\n        id: 'radio-income',\n        name: 'category-type',\n        value: 'income',\n        callback: function callback(e) {\n          return _this2.handleChange(e, 'type');\n        }\n      }, \"\\u0414\\u043E\\u0445\\u043E\\u0434\"), /*#__PURE__*/react.createElement(\"input\", {\n        value: this.state.title,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'title');\n        },\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        type: \"text\",\n        className: \"setup-input-field\"\n      }), /*#__PURE__*/react.createElement(components_SubmitButton, {\n        className: 'button_setup-form',\n        callback: function callback() {\n          return _this2.addCategoryAndResetState(_this2.state);\n        }\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n    }\n  }]);\n\n  return AddCategoryComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/AddCategory/container.js\n\n\n\n\n\nvar AddCategory_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar AddCategory_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addCategory: function addCategory(category) {\n      return dispatch(addCategoryAction(category));\n    }\n  };\n};\n\nvar AddCategory = (0,es/* connect */.$j)(AddCategory_container_mapStateToProps, AddCategory_container_mapDispatchToProps)(AddCategoryComponent);\n;// CONCATENATED MODULE: ./src/components/AddCategory/index.js\n\n/* harmony default export */ const components_AddCategory = (AddCategory);\n;// CONCATENATED MODULE: ./src/components/CategoryItem_Setup/component.js\n\n\n\n\n\n\n\n\nfunction CategoryItem_Setup_component_createSuper(Derived) { var hasNativeReflectConstruct = CategoryItem_Setup_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction CategoryItem_Setup_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\nvar CategoryItemSetupComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CategoryItemSetupComponent, _React$PureComponent);\n\n  var _super = CategoryItem_Setup_component_createSuper(CategoryItemSetupComponent);\n\n  function CategoryItemSetupComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, CategoryItemSetupComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isOpenEditWindow: false,\n      isOpenConfirmDelete: false,\n      title: _this.props.title\n    };\n    _this.openEditWindow = _this.openEditWindow.bind(assertThisInitialized_default()(_this));\n    _this.closeWindows = _this.closeWindows.bind(assertThisInitialized_default()(_this));\n    _this.openConfirmDeleteWindow = _this.openConfirmDeleteWindow.bind(assertThisInitialized_default()(_this));\n    _this.saveCategoryItem = _this.saveCategoryItem.bind(assertThisInitialized_default()(_this));\n    _this.deleteCategoryItem = _this.deleteCategoryItem.bind(assertThisInitialized_default()(_this));\n    _this.toggleVisibleAndUpdate = _this.toggleVisibleAndUpdate.bind(assertThisInitialized_default()(_this));\n    return _this;\n  }\n\n  createClass_default()(CategoryItemSetupComponent, [{\n    key: \"toggleVisibleAndUpdate\",\n    value: function toggleVisibleAndUpdate() {\n      var category = {\n        id: this.props.id,\n        visible: !this.props.visible\n      };\n      this.props.updCategory(category);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e, val) {\n      var fieldValue = val === \"sum\" ? e.target.value.replace(/\\D/, '') : e.target.value;\n      this.setState(defineProperty_default()({}, val, fieldValue));\n    }\n  }, {\n    key: \"openEditWindow\",\n    value: function openEditWindow() {\n      this.setState({\n        isOpenEditWindow: true,\n        isOpenConfirmDelete: false\n      });\n    }\n  }, {\n    key: \"openConfirmDeleteWindow\",\n    value: function openConfirmDeleteWindow() {\n      this.setState({\n        isOpenEditWindow: false,\n        isOpenConfirmDelete: true\n      });\n    }\n  }, {\n    key: \"closeWindows\",\n    value: function closeWindows() {\n      this.setState({\n        isOpenEditWindow: false,\n        isOpenConfirmDelete: false\n      });\n    }\n  }, {\n    key: \"saveCategoryItem\",\n    value: function saveCategoryItem() {\n      this.props.updCategory({\n        id: this.props.id,\n        title: this.state.title\n      });\n      this.closeWindows();\n    }\n  }, {\n    key: \"deleteCategoryItem\",\n    value: function deleteCategoryItem() {\n      this.props.delCategory({\n        id: this.props.id\n      });\n      this.closeWindows();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return [/*#__PURE__*/react.createElement(\"div\", {\n        key: this.props.id,\n        className: \"category__setup\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.openEditWindow();\n        },\n        className: \"category-setup__item \".concat(!this.props.visible && \"category-setup__item_hidden\")\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-setup__title\"\n      }, this.props.title)), /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this2.toggleVisibleAndUpdate();\n        },\n        className: \"button button_hide\"\n      }, this.props.visible ? \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C\" : \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\")), this.state.isOpenEditWindow && /*#__PURE__*/react.createElement(components_ModalWindow, {\n        key: \"ew\".concat(this.props.id)\n      }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(components_CloseWindowButton, {\n        closeCallback: this.closeWindows\n      }), /*#__PURE__*/react.createElement(\"textarea\", {\n        value: this.state.title,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'title');\n        },\n        placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        className: \"add-form__txt\"\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"modal-window__buttons\"\n      }, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this2.saveCategoryItem();\n        },\n        className: \"button_modal-window\"\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this2.openConfirmDeleteWindow();\n        },\n        className: \"button_modal-window\"\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")))), this.state.isOpenConfirmDelete && /*#__PURE__*/react.createElement(components_ConfirmDeleteWindow, {\n        key: \"dw\".concat(this.props.id),\n        cancelCallback: function cancelCallback() {\n          return _this2.closeWindows();\n        },\n        deleteCallback: function deleteCallback() {\n          return _this2.deleteCategoryItem();\n        },\n        title: this.props.title\n      })];\n    }\n  }]);\n\n  return CategoryItemSetupComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/CategoryItem_Setup/container.js\n\n\n\n\n\nvar CategoryItem_Setup_container_mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar CategoryItem_Setup_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updCategory: function updCategory(category) {\n      return dispatch(updCategoryAction(category));\n    },\n    delCategory: function delCategory(category) {\n      return dispatch(delCategoryAction(category));\n    }\n  };\n};\n\nvar CategoryItemSetup = (0,es/* connect */.$j)(CategoryItem_Setup_container_mapStateToProps, CategoryItem_Setup_container_mapDispatchToProps)(CategoryItemSetupComponent);\n;// CONCATENATED MODULE: ./src/components/CategoryItem_Setup/index.js\n\n/* harmony default export */ const CategoryItem_Setup = (CategoryItemSetup);\n;// CONCATENATED MODULE: ./src/components/Category_Setup/component.js\n\n\n\n\n\n\nfunction Category_Setup_component_createSuper(Derived) { var hasNativeReflectConstruct = Category_Setup_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Category_Setup_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar CategorySetupComponent = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(CategorySetupComponent, _React$Component);\n\n  var _super = Category_Setup_component_createSuper(CategorySetupComponent);\n\n  function CategorySetupComponent(props) {\n    classCallCheck_default()(this, CategorySetupComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(CategorySetupComponent, [{\n    key: \"returnClassName\",\n    value: function returnClassName() {\n      if (this.props.type !== this.props.toggleCategory) {\n        return \"details-setup__block_hide\";\n      }\n\n      return '';\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this = this;\n\n      return this.props.categorysIdArr.map(function (categoryId) {\n        var category = _this.props.categorys[categoryId];\n\n        if (category.type === _this.props.type) {\n          return /*#__PURE__*/react.createElement(CategoryItem_Setup, {\n            key: category.id,\n            id: category.id,\n            title: category.title,\n            type: category.type,\n            visible: category.visible\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if ('categorys' in this.props) {\n        return /*#__PURE__*/react.createElement(\"div\", {\n          className: \"details-setup__block \".concat(this.returnClassName())\n        }, this.renderItems());\n      }\n\n      return [];\n    }\n  }]);\n\n  return CategorySetupComponent;\n}(react.Component);\n\n\n;// CONCATENATED MODULE: ./src/components/Category_Setup/container.js\n\n\n\n\nvar Category_Setup_container_mapStateToProps = function mapStateToProps(state) {\n  if (state.data === null) return {};\n  return {\n    categorys: state.data.entities.categorys,\n    categorysIdArr: state.data.result.categorys,\n    toggleCategory: state.toggleCategory\n  };\n};\n\nvar Category_Setup_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar CategorySetup = (0,es/* connect */.$j)(Category_Setup_container_mapStateToProps, Category_Setup_container_mapDispatchToProps)(CategorySetupComponent);\n;// CONCATENATED MODULE: ./src/components/Category_Setup/index.js\n\n/* harmony default export */ const Category_Setup = (CategorySetup);\n;// CONCATENATED MODULE: ./src/components/Categorys_Setup/component.js\n\n\n\n\n\n\nfunction Categorys_Setup_component_createSuper(Derived) { var hasNativeReflectConstruct = Categorys_Setup_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Categorys_Setup_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\nvar component_CategorysComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CategorysComponent, _React$PureComponent);\n\n  var _super = Categorys_Setup_component_createSuper(CategorysComponent);\n\n  function CategorysComponent(props) {\n    classCallCheck_default()(this, CategorysComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(CategorysComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAllCategorys(this.props.user.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return [/*#__PURE__*/react.createElement(components_ToggleCategory, {\n        key: \"ct01\"\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        key: \"ct02\",\n        className: \"details-setup details-setup_categorys\"\n      }, /*#__PURE__*/react.createElement(Category_Setup, {\n        type: \"expense\"\n      }), /*#__PURE__*/react.createElement(Category_Setup, {\n        type: \"income\"\n      }))];\n    }\n  }]);\n\n  return CategorysComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/Categorys_Setup/container.js\n\n\n\n\n\nvar Categorys_Setup_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar Categorys_Setup_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getAllCategorys: function getAllCategorys(userId) {\n      return dispatch(getAllCategorysAction(userId));\n    }\n  };\n};\n\nvar CategorysSetup = (0,es/* connect */.$j)(Categorys_Setup_container_mapStateToProps, Categorys_Setup_container_mapDispatchToProps)(component_CategorysComponent);\n;// CONCATENATED MODULE: ./src/components/Categorys_Setup/index.js\n\n/* harmony default export */ const Categorys_Setup = (CategorysSetup);\n;// CONCATENATED MODULE: ./src/pages/setup/index.js\n\n\n\n\n\n\nfunction setup_createSuper(Derived) { var hasNativeReflectConstruct = setup_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction setup_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar Setup = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(Setup, _React$Component);\n\n  var _super = setup_createSuper(Setup);\n\n  function Setup() {\n    classCallCheck_default()(this, Setup);\n\n    return _super.apply(this, arguments);\n  }\n\n  createClass_default()(Setup, [{\n    key: \"render\",\n    value: function render() {\n      return [/*#__PURE__*/react.createElement(Header, {\n        key: 'ac01'\n      }), /*#__PURE__*/react.createElement(components_AddCategory, {\n        key: 'ac02'\n      }), /*#__PURE__*/react.createElement(Categorys_Setup, {\n        key: 'ac03'\n      })];\n    }\n  }]);\n\n  return Setup;\n}(react.Component);\n\n\n;// CONCATENATED MODULE: ./src/components/LoginForm/component.js\n\n\n\n\n\n\n\nfunction LoginForm_component_createSuper(Derived) { var hasNativeReflectConstruct = LoginForm_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction LoginForm_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar LoginFormComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(LoginFormComponent, _React$PureComponent);\n\n  var _super = LoginForm_component_createSuper(LoginFormComponent);\n\n  function LoginFormComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, LoginFormComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      login: '',\n      pass: ''\n    };\n    return _this;\n  }\n\n  createClass_default()(LoginFormComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(e, val) {\n      this.setState(defineProperty_default()({}, val, e.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/react.createElement(\"div\", null, this.props.user.loginErrorMes && /*#__PURE__*/react.createElement(\"div\", {\n        className: \"login-error-mes\"\n      }, this.props.user.loginErrorMes), /*#__PURE__*/react.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return e.preventDefault();\n        }\n      }, /*#__PURE__*/react.createElement(\"input\", {\n        value: this.state.login,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'login');\n        },\n        placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n        type: \"text\",\n        className: \"add-form__sum\"\n      }), /*#__PURE__*/react.createElement(\"input\", {\n        value: this.state.pass,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'pass');\n        },\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        type: \"password\",\n        className: \"add-form__sum\"\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"login-form-submit-wrap\"\n      }, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        className: 'button_login-form',\n        callback: function callback() {\n          return _this2.props.loginRequest({\n            login: _this2.state.login,\n            pass: _this2.state.pass\n          });\n        }\n      }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"))));\n    }\n  }]);\n\n  return LoginFormComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/LoginForm/container.js\n\n\n\n\n\nvar LoginForm_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar LoginForm_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginRequest: function loginRequest(data) {\n      return dispatch(loginRequestAction(data));\n    }\n  };\n};\n\nvar LoginForm = (0,es/* connect */.$j)(LoginForm_container_mapStateToProps, LoginForm_container_mapDispatchToProps)(LoginFormComponent);\n;// CONCATENATED MODULE: ./src/components/LoginForm/index.js\n\n/* harmony default export */ const components_LoginForm = (LoginForm);\n;// CONCATENATED MODULE: ./src/pages/login/index.js\n\n\n\n\n\n\nfunction login_createSuper(Derived) { var hasNativeReflectConstruct = login_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction login_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar LoginPage = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(LoginPage, _React$Component);\n\n  var _super = login_createSuper(LoginPage);\n\n  function LoginPage(props) {\n    classCallCheck_default()(this, LoginPage);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(LoginPage, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"login-form-wrap\"\n      }, /*#__PURE__*/react.createElement(components_LoginForm, null));\n    }\n  }]);\n\n  return LoginPage;\n}(react.Component);\n\nvar RedirectRoute = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(RedirectRoute, _React$PureComponent);\n\n  var _super2 = login_createSuper(RedirectRoute);\n\n  function RedirectRoute(props) {\n    var _this;\n\n    classCallCheck_default()(this, RedirectRoute);\n\n    _this = _super2.call(this, props);\n    _this.location = props.location;\n    _this.from = \"/\";\n    if (props.location.state !== undefined) _this.from = props.location.state.from.pathname;\n    return _this;\n  }\n\n  createClass_default()(RedirectRoute, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        render: function render() {\n          return !_this2.props.user.isLogin ? /*#__PURE__*/react.createElement(LoginPage, null) : /*#__PURE__*/react.createElement(react_router/* Redirect */.l_, {\n            to: {\n              pathname: _this2.from //state: {from: this.location}\n\n            }\n          });\n        }\n      });\n    }\n  }]);\n\n  return RedirectRoute;\n}(react.PureComponent);\n\nvar Login = (0,es/* connect */.$j)(function (state) {\n  return {\n    user: state.user\n  };\n})(RedirectRoute);\n/* harmony default export */ const login = (Login);\n;// CONCATENATED MODULE: ./src/pages/404/index.js\n\n\n\n\n\n\nfunction _404_createSuper(Derived) { var hasNativeReflectConstruct = _404_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction _404_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar Page404 = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(Page404, _React$Component);\n\n  var _super = _404_createSuper(Page404);\n\n  function Page404(props) {\n    classCallCheck_default()(this, Page404);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(Page404, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", null, \"404 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430\");\n    }\n  }]);\n\n  return Page404;\n}(react.Component);\n\n\n;// CONCATENATED MODULE: ./src/components/PrivateRoute/component.js\n\n\n\n\n\n\nfunction PrivateRoute_component_createSuper(Derived) { var hasNativeReflectConstruct = PrivateRoute_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction PrivateRoute_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar PrivateRouteComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(PrivateRouteComponent, _React$PureComponent);\n\n  var _super = PrivateRoute_component_createSuper(PrivateRouteComponent);\n\n  function PrivateRouteComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, PrivateRouteComponent);\n\n    _this = _super.call(this, props);\n    _this.children = props.children;\n    _this.urlParams = props.computedMatch.params;\n    _this.location = props.location;\n    return _this;\n  }\n\n  createClass_default()(PrivateRouteComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.user.isLogin !== true && this.props.user.isLogin !== false) {\n        this.props.authRequest(); //авторизация\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.user.isLogin !== true && this.props.user.isLogin !== false) {\n        return []; //заглушка\n      }\n\n      return /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        render: function render() {\n          return _this2.props.user.isLogin ? /*#__PURE__*/react.cloneElement(_this2.children, {\n            urlParams: _this2.urlParams\n          }) : /*#__PURE__*/react.createElement(react_router/* Redirect */.l_, {\n            to: {\n              pathname: \"/login\",\n              state: {\n                from: _this2.location\n              }\n            }\n          });\n        }\n      });\n    }\n  }]);\n\n  return PrivateRouteComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/PrivateRoute/container.js\n\n\n\n\n\nvar PrivateRoute_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar PrivateRoute_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    authRequest: function authRequest() {\n      return dispatch(authRequestAction());\n    }\n  };\n};\n\nvar PrivateRoute = (0,es/* connect */.$j)(PrivateRoute_container_mapStateToProps, PrivateRoute_container_mapDispatchToProps)(PrivateRouteComponent);\n;// CONCATENATED MODULE: ./src/components/PrivateRoute/index.js\n\n/* harmony default export */ const components_PrivateRoute = (PrivateRoute);\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\nfunction src_createSuper(Derived) { var hasNativeReflectConstruct = src_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction src_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(App, _React$Component);\n\n  var _super = src_createSuper(App);\n\n  function App() {\n    classCallCheck_default()(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  createClass_default()(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(es/* Provider */.zt, {\n        store: store\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"max-width\"\n      }, /*#__PURE__*/react.createElement(react_router_dom/* BrowserRouter */.VK, null, /*#__PURE__*/react.createElement(react_router/* Switch */.rs, null, /*#__PURE__*/react.createElement(components_PrivateRoute, {\n        exact: true,\n        path: \"/\"\n      }, /*#__PURE__*/react.createElement(Home, null)), /*#__PURE__*/react.createElement(components_PrivateRoute, {\n        exact: true,\n        path: \"/setup\"\n      }, /*#__PURE__*/react.createElement(Setup, null)), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: \"/login/\",\n        component: login\n      }), /*#__PURE__*/react.createElement(components_PrivateRoute, {\n        exact: true,\n        path: \"/:period\"\n      }, /*#__PURE__*/react.createElement(Home, null)), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: \"*\",\n        component: Page404\n      })))));\n    }\n  }]);\n\n  return App;\n}(react.Component);\n\nreact_dom.render( /*#__PURE__*/react.createElement(App, null), document.getElementById(\"app\"));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///e+/uGl/8\n");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, [953,296], () => (__webpack_exec__("e+/uGl/8")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);