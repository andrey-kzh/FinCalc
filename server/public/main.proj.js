"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkReact_project"] = self["webpackChunkReact_project"] || []).push([[179],{

/***/ "vAhzLcGh":
/***/ ((__unused_webpack_module, __unused_webpack___webpack_exports__, __webpack_require__) => {

eval("\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/classCallCheck.js\nvar classCallCheck = __webpack_require__(\"lwsEjDFy\");\nvar classCallCheck_default = /*#__PURE__*/__webpack_require__.n(classCallCheck);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/createClass.js\nvar createClass = __webpack_require__(\"W8MJtME8\");\nvar createClass_default = /*#__PURE__*/__webpack_require__.n(createClass);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/inherits.js\nvar inherits = __webpack_require__(\"7W2iVumU\");\nvar inherits_default = /*#__PURE__*/__webpack_require__.n(inherits);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js\nvar possibleConstructorReturn = __webpack_require__(\"a1gurjc+\");\nvar possibleConstructorReturn_default = /*#__PURE__*/__webpack_require__.n(possibleConstructorReturn);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/getPrototypeOf.js\nvar getPrototypeOf = __webpack_require__(\"NsbkXAeW\");\nvar getPrototypeOf_default = /*#__PURE__*/__webpack_require__.n(getPrototypeOf);\n// EXTERNAL MODULE: ./node_modules/react/index.js\nvar react = __webpack_require__(\"q1tIBJhx\");\n// EXTERNAL MODULE: ./node_modules/react-dom/index.js\nvar react_dom = __webpack_require__(\"i8i4LrFt\");\n// EXTERNAL MODULE: ./node_modules/react-redux/es/index.js + 19 modules\nvar es = __webpack_require__(\"SNoJyrEz\");\n// EXTERNAL MODULE: ./node_modules/react-router-dom/esm/react-router-dom.js\nvar react_router_dom = __webpack_require__(\"55IpiCAJ\");\n// EXTERNAL MODULE: ./node_modules/react-router/esm/react-router.js + 1 modules\nvar react_router = __webpack_require__(\"4qXz/kfb\");\n// EXTERNAL MODULE: ./node_modules/redux/es/redux.js + 2 modules\nvar redux = __webpack_require__(\"ofL3qLP6\");\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-core-npm-proxy.esm.js + 2 modules\nvar redux_saga_core_npm_proxy_esm = __webpack_require__(\"mM01Bdt2\");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/regenerator/index.js\nvar regenerator = __webpack_require__(\"o0o1ebC6\");\nvar regenerator_default = /*#__PURE__*/__webpack_require__.n(regenerator);\n// EXTERNAL MODULE: ./node_modules/redux-saga/dist/redux-saga-effects-npm-proxy.esm.js + 1 modules\nvar redux_saga_effects_npm_proxy_esm = __webpack_require__(\"IihTIhwn\");\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/defineProperty.js\nvar defineProperty = __webpack_require__(\"lSNAPYH/\");\nvar defineProperty_default = /*#__PURE__*/__webpack_require__.n(defineProperty);\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/asyncToGenerator.js\nvar asyncToGenerator = __webpack_require__(\"yXPUfTdm\");\nvar asyncToGenerator_default = /*#__PURE__*/__webpack_require__.n(asyncToGenerator);\n;// CONCATENATED MODULE: ./src/utils/tokens.js\nfunction saveTokensToStorage(tokens) {\n  localStorage.setItem('tokens', JSON.stringify(tokens));\n}\nfunction clearTokensFromStorage() {\n  localStorage.removeItem('tokens');\n}\nfunction getRefreshTokenFromStorage() {\n  if (!localStorage.tokens) return null;\n  return JSON.parse(localStorage.tokens).refreshToken;\n}\nfunction getAccessTokenFromStorage() {\n  if (!localStorage.tokens) return null;\n  return JSON.parse(localStorage.tokens).accessToken;\n}\n;// CONCATENATED MODULE: ./src/api/index.js\n\n\n\n\n\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n\n\nvar Api = /*#__PURE__*/function () {\n  function Api() {\n    classCallCheck_default()(this, Api);\n\n    this.urlRoot = '/api';\n    this.optionsDefault = {\n      mode: \"cors\"\n    };\n    this.getRefreshTokenFromStorage = getRefreshTokenFromStorage;\n    this.getAccessTokenFromStorage = getAccessTokenFromStorage;\n    this.loginRequest = this.loginRequest.bind(this);\n    this.logoutRequest = this.logoutRequest.bind(this);\n    this.requestWithAccessToken = this.requestWithAccessToken.bind(this);\n    this.refreshTokens = this.refreshTokens.bind(this);\n    this.getAuthDataBySession = this.getAuthDataBySession.bind(this);\n    this.addCategoryRequest = this.addCategoryRequest.bind(this);\n    this.updCategoryRequest = this.updCategoryRequest.bind(this);\n    this.delCategoryRequest = this.delCategoryRequest.bind(this);\n    this.getAllCategorys = this.getAllCategorys.bind(this);\n    this.getAllListsWithCategorys = this.getAllListsWithCategorys.bind(this);\n    this.addListItemRequest = this.addListItemRequest.bind(this);\n    this.updListItemRequest = this.updListItemRequest.bind(this);\n    this.delListItemRequest = this.delListItemRequest.bind(this);\n  }\n\n  createClass_default()(Api, [{\n    key: \"requestWithAccessToken\",\n    value: function () {\n      var _requestWithAccessToken = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee(url, options) {\n        var fullUrl, accessToken;\n        return regenerator_default().wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                fullUrl = \"\".concat(this.urlRoot).concat(url);\n                accessToken = this.getAccessTokenFromStorage();\n                if (!options.headers) options.headers = {};\n                options.headers = {\n                  'Content-Type': 'application/json'\n                };\n                if (accessToken) options.headers.Authorization = \"Bearer \".concat(accessToken);\n                _context.next = 8;\n                return fetch(fullUrl, _objectSpread(_objectSpread({}, this.optionsDefault), options));\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0.message);\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n\n      function requestWithAccessToken(_x, _x2) {\n        return _requestWithAccessToken.apply(this, arguments);\n      }\n\n      return requestWithAccessToken;\n    }()\n  }, {\n    key: \"refreshTokens\",\n    value: function () {\n      var _refreshTokens = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee2() {\n        var refreshToken, fullUrl, options, response;\n        return regenerator_default().wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                refreshToken = this.getRefreshTokenFromStorage();\n                fullUrl = \"\".concat(this.urlRoot, \"/auth/refresh\");\n                options = {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    refreshToken: refreshToken\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                };\n                _context2.next = 6;\n                return fetch(fullUrl, _objectSpread(_objectSpread({}, this.optionsDefault), options));\n\n              case 6:\n                response = _context2.sent;\n                return _context2.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 10:\n                _context2.prev = 10;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0.message);\n\n              case 13:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 10]]);\n      }));\n\n      function refreshTokens() {\n        return _refreshTokens.apply(this, arguments);\n      }\n\n      return refreshTokens;\n    }()\n  }, {\n    key: \"loginRequest\",\n    value: function () {\n      var _loginRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee3(data) {\n        var fullUrl, options, response;\n        return regenerator_default().wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                fullUrl = \"\".concat(this.urlRoot, \"/auth/login\");\n                options = {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    login: data.login,\n                    password: data.pass\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                };\n                _context3.prev = 2;\n                _context3.next = 5;\n                return fetch(fullUrl, _objectSpread(_objectSpread({}, this.optionsDefault), options));\n\n              case 5:\n                response = _context3.sent;\n                return _context3.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](2);\n                console.log(_context3.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 9]]);\n      }));\n\n      function loginRequest(_x3) {\n        return _loginRequest.apply(this, arguments);\n      }\n\n      return loginRequest;\n    }()\n  }, {\n    key: \"logoutRequest\",\n    value: function () {\n      var _logoutRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee4() {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                url = \"/auth/logout\";\n                options = {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    refreshToken: this.getRefreshTokenFromStorage()\n                  }),\n                  headers: {\n                    'Content-Type': 'application/json'\n                  }\n                };\n                _context4.prev = 2;\n                _context4.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context4.sent;\n                return _context4.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context4.prev = 9;\n                _context4.t0 = _context4[\"catch\"](2);\n                console.log(_context4.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[2, 9]]);\n      }));\n\n      function logoutRequest() {\n        return _logoutRequest.apply(this, arguments);\n      }\n\n      return logoutRequest;\n    }()\n  }, {\n    key: \"getAuthDataBySession\",\n    value: function () {\n      var _getAuthDataBySession = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee5() {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                url = \"/auth/user\";\n                options = {\n                  method: \"GET\"\n                };\n                _context5.prev = 2;\n                _context5.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context5.sent;\n                return _context5.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context5.prev = 9;\n                _context5.t0 = _context5[\"catch\"](2);\n                console.log(_context5.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this, [[2, 9]]);\n      }));\n\n      function getAuthDataBySession() {\n        return _getAuthDataBySession.apply(this, arguments);\n      }\n\n      return getAuthDataBySession;\n    }()\n  }, {\n    key: \"addCategoryRequest\",\n    value: function () {\n      var _addCategoryRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee6(category) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                url = \"/categorys\";\n                options = {\n                  method: \"POST\",\n                  body: JSON.stringify({\n                    title: category.title,\n                    userId: category.userId,\n                    type: category.type\n                  })\n                };\n                _context6.prev = 2;\n                _context6.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context6.sent;\n                return _context6.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context6.prev = 9;\n                _context6.t0 = _context6[\"catch\"](2);\n                console.log(_context6.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this, [[2, 9]]);\n      }));\n\n      function addCategoryRequest(_x4) {\n        return _addCategoryRequest.apply(this, arguments);\n      }\n\n      return addCategoryRequest;\n    }()\n  }, {\n    key: \"updCategoryRequest\",\n    value: function () {\n      var _updCategoryRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee7(category) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                url = \"/categorys\";\n                options = {\n                  method: \"PUT\",\n                  body: JSON.stringify(category)\n                };\n                _context7.prev = 2;\n                _context7.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context7.sent;\n                return _context7.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context7.prev = 9;\n                _context7.t0 = _context7[\"catch\"](2);\n                console.log(_context7.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this, [[2, 9]]);\n      }));\n\n      function updCategoryRequest(_x5) {\n        return _updCategoryRequest.apply(this, arguments);\n      }\n\n      return updCategoryRequest;\n    }()\n  }, {\n    key: \"updListItemRequest\",\n    value: function () {\n      var _updListItemRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee8(listItem) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                url = \"/lists\";\n                options = {\n                  method: \"PUT\",\n                  body: JSON.stringify(listItem)\n                };\n                _context8.prev = 2;\n                _context8.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context8.sent;\n                return _context8.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context8.prev = 9;\n                _context8.t0 = _context8[\"catch\"](2);\n                console.log(_context8.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this, [[2, 9]]);\n      }));\n\n      function updListItemRequest(_x6) {\n        return _updListItemRequest.apply(this, arguments);\n      }\n\n      return updListItemRequest;\n    }()\n  }, {\n    key: \"delListItemRequest\",\n    value: function () {\n      var _delListItemRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee9(listItem) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee9$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                url = \"/lists\";\n                options = {\n                  method: \"DELETE\",\n                  body: JSON.stringify(listItem)\n                };\n                _context9.prev = 2;\n                _context9.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context9.sent;\n                return _context9.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context9.prev = 9;\n                _context9.t0 = _context9[\"catch\"](2);\n                console.log(_context9.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, _callee9, this, [[2, 9]]);\n      }));\n\n      function delListItemRequest(_x7) {\n        return _delListItemRequest.apply(this, arguments);\n      }\n\n      return delListItemRequest;\n    }()\n  }, {\n    key: \"delCategoryRequest\",\n    value: function () {\n      var _delCategoryRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee10(category) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee10$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                url = \"/categorys\";\n                options = {\n                  method: \"DELETE\",\n                  body: JSON.stringify(category)\n                };\n                _context10.prev = 2;\n                _context10.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context10.sent;\n                return _context10.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context10.prev = 9;\n                _context10.t0 = _context10[\"catch\"](2);\n                console.log(_context10.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, _callee10, this, [[2, 9]]);\n      }));\n\n      function delCategoryRequest(_x8) {\n        return _delCategoryRequest.apply(this, arguments);\n      }\n\n      return delCategoryRequest;\n    }()\n  }, {\n    key: \"getAllCategorys\",\n    value: function () {\n      var _getAllCategorys = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee11(userId) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee11$(_context11) {\n          while (1) {\n            switch (_context11.prev = _context11.next) {\n              case 0:\n                url = \"/categorys?userId=\".concat(userId);\n                options = {\n                  method: \"GET\"\n                };\n                _context11.prev = 2;\n                _context11.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context11.sent;\n                return _context11.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context11.prev = 9;\n                _context11.t0 = _context11[\"catch\"](2);\n                console.log(_context11.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context11.stop();\n            }\n          }\n        }, _callee11, this, [[2, 9]]);\n      }));\n\n      function getAllCategorys(_x9) {\n        return _getAllCategorys.apply(this, arguments);\n      }\n\n      return getAllCategorys;\n    }()\n  }, {\n    key: \"getAllListsWithCategorys\",\n    value: function () {\n      var _getAllListsWithCategorys = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee12(_ref) {\n        var userId, dateMin, dateMax, url, options, response;\n        return regenerator_default().wrap(function _callee12$(_context12) {\n          while (1) {\n            switch (_context12.prev = _context12.next) {\n              case 0:\n                userId = _ref.userId, dateMin = _ref.dateMin, dateMax = _ref.dateMax;\n                url = \"/lists?userId=\".concat(userId, \"&dateMin=\").concat(dateMin, \"&dateMax=\").concat(dateMax);\n                options = {\n                  method: \"GET\"\n                };\n                _context12.prev = 3;\n                _context12.next = 6;\n                return this.requestWithAccessToken(url, options);\n\n              case 6:\n                response = _context12.sent;\n                return _context12.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 10:\n                _context12.prev = 10;\n                _context12.t0 = _context12[\"catch\"](3);\n                console.log(_context12.t0.message);\n\n              case 13:\n              case \"end\":\n                return _context12.stop();\n            }\n          }\n        }, _callee12, this, [[3, 10]]);\n      }));\n\n      function getAllListsWithCategorys(_x10) {\n        return _getAllListsWithCategorys.apply(this, arguments);\n      }\n\n      return getAllListsWithCategorys;\n    }()\n  }, {\n    key: \"addListItemRequest\",\n    value: function () {\n      var _addListItemRequest = asyncToGenerator_default()( /*#__PURE__*/regenerator_default().mark(function _callee13(listItem) {\n        var url, options, response;\n        return regenerator_default().wrap(function _callee13$(_context13) {\n          while (1) {\n            switch (_context13.prev = _context13.next) {\n              case 0:\n                url = \"/lists\";\n                options = {\n                  method: \"POST\",\n                  body: JSON.stringify(listItem)\n                };\n                _context13.prev = 2;\n                _context13.next = 5;\n                return this.requestWithAccessToken(url, options);\n\n              case 5:\n                response = _context13.sent;\n                return _context13.abrupt(\"return\", response.json().then(function (data) {\n                  return data;\n                }));\n\n              case 9:\n                _context13.prev = 9;\n                _context13.t0 = _context13[\"catch\"](2);\n                console.log(_context13.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context13.stop();\n            }\n          }\n        }, _callee13, this, [[2, 9]]);\n      }));\n\n      function addListItemRequest(_x11) {\n        return _addListItemRequest.apply(this, arguments);\n      }\n\n      return addListItemRequest;\n    }()\n  }]);\n\n  return Api;\n}();\n\n\n// EXTERNAL MODULE: ./node_modules/normalizr/dist/normalizr.es.js\nvar normalizr_es = __webpack_require__(\"XiPHYwkG\");\n;// CONCATENATED MODULE: ./src/utils/normalize.js\n\nfunction normalizeLists(data) {\n  var category = new normalizr_es/* schema.Entity */.fK.Entity('categorys', {\n    list: [new normalizr_es/* schema.Entity */.fK.Entity('list')]\n  });\n  var listsSchema = {\n    categorys: [category]\n  };\n  return (0,normalizr_es/* normalize */.Fv)(data, listsSchema);\n}\nfunction normalizeCategorys(data) {\n  var category = new normalizr_es/* schema.Entity */.fK.Entity('categorys');\n  var categorySchema = {\n    categorys: [category]\n  };\n  return (0,normalizr_es/* normalize */.Fv)(data, categorySchema);\n}\n;// CONCATENATED MODULE: ./src/store/actions.js\nvar loginRequestAction = function loginRequestAction(data) {\n  return {\n    type: \"LOGIN_REQUEST\",\n    payload: data\n  };\n};\nvar loginUserAction = function loginUserAction(user) {\n  return {\n    type: \"LOGIN_STORE\",\n    payload: user\n  };\n};\nvar logoutUserAction = function logoutUserAction() {\n  return {\n    type: \"LOGOUT_STORE\",\n    payload: {}\n  };\n};\nvar loginErrorAction = function loginErrorAction(error) {\n  return {\n    type: \"LOGIN_ERROR_STORE\",\n    payload: {\n      error: error\n    }\n  };\n};\nvar authRequestAction = function authRequestAction() {\n  return {\n    type: \"AUTH_REQUEST\",\n    payload: {}\n  };\n};\nvar logoutAction = function logoutAction() {\n  return {\n    type: \"LOGOUT_REQUEST\",\n    payload: {}\n  };\n};\nvar refreshTokensAction = function refreshTokensAction(nextAction) {\n  return {\n    type: \"REFRESH_TOKENS_REQUEST\",\n    payload: nextAction\n  };\n};\nvar toggleCategoryAction = function toggleCategoryAction(categoryType) {\n  return {\n    type: \"TOGGLE_CATEGORYS_TYPE_STORE\",\n    payload: {\n      categoryType: categoryType\n    }\n  };\n};\nvar addCategoryAction = function addCategoryAction(category) {\n  return {\n    type: \"ADD_CATEGORY_REQUEST\",\n    payload: category\n  };\n};\nvar updCategoryAction = function updCategoryAction(category) {\n  return {\n    type: \"UPD_ONE_CATEGORY_REQUEST\",\n    payload: {\n      category: category\n    }\n  };\n};\nvar delCategoryAction = function delCategoryAction(category) {\n  return {\n    type: \"DEL_ONE_CATEGORY_REQUEST\",\n    payload: {\n      category: category\n    }\n  };\n};\nvar getAllCategorysAction = function getAllCategorysAction(userId) {\n  return {\n    type: \"GET_CATEGORYS_REQUEST\",\n    payload: {\n      userId: userId\n    }\n  };\n};\nvar getAllListsWithCategorysAction = function getAllListsWithCategorysAction(obj) {\n  return {\n    type: \"GET_LISTS_REQUEST\",\n    payload: {\n      userIdAndDateRange: obj\n    }\n  };\n};\nvar updDataInStoreAction = function updDataInStoreAction(categorys) {\n  return {\n    type: \"UPD_DATA_STORE\",\n    payload: {\n      categorys: categorys\n    }\n  };\n};\nvar addCategoryInStoreAction = function addCategoryInStoreAction(category) {\n  return {\n    type: \"ADD_NEW_CATEGORY_STORE\",\n    payload: {\n      category: category\n    }\n  };\n};\nvar updOneCategoryInStoreAction = function updOneCategoryInStoreAction(category) {\n  return {\n    type: \"UPD_ONE_CATEGORY_STORE\",\n    payload: {\n      category: category\n    }\n  };\n};\nvar updOneListItemInStoreAction = function updOneListItemInStoreAction(listItem) {\n  return {\n    type: \"UPD_ONE_LIST_ITEM_STORE\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\nvar delOneCategoryInStoreAction = function delOneCategoryInStoreAction(category) {\n  return {\n    type: \"DEL_ONE_CATEGORY_STORE\",\n    payload: {\n      category: category\n    }\n  };\n};\nvar delOneListItemInStoreAction = function delOneListItemInStoreAction(listItem) {\n  return {\n    type: \"DEL_ONE_LIST_ITEM_STORE\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\nvar addListItemAction = function addListItemAction(listItem) {\n  return {\n    type: \"ADD_LIST_ITEM_REQUEST\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\nvar updListItemAction = function updListItemAction(listItem) {\n  return {\n    type: \"UPD_ONE_LIST_ITEM_REQUEST\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\nvar delListItemAction = function delListItemAction(listItem) {\n  return {\n    type: \"DEL_ONE_LIST_ITEM_REQUEST\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\nvar addListItemInStoreAction = function addListItemInStoreAction(listItem) {\n  return {\n    type: \"ADD_NEW_LIST_ITEM_STORE\",\n    payload: {\n      listItem: listItem\n    }\n  };\n};\n;// CONCATENATED MODULE: ./src/store/sagas.js\n\n\nvar _marked = /*#__PURE__*/regenerator_default().mark(fetchLogin),\n    _marked2 = /*#__PURE__*/regenerator_default().mark(fetchAuth),\n    _marked3 = /*#__PURE__*/regenerator_default().mark(fetchLogout),\n    _marked4 = /*#__PURE__*/regenerator_default().mark(fetchRefreshTokens),\n    _marked5 = /*#__PURE__*/regenerator_default().mark(fetchAddCategory),\n    _marked6 = /*#__PURE__*/regenerator_default().mark(fetchAllCategorys),\n    _marked7 = /*#__PURE__*/regenerator_default().mark(fetchUpdateCategory),\n    _marked8 = /*#__PURE__*/regenerator_default().mark(fetchDeleteCategory),\n    _marked9 = /*#__PURE__*/regenerator_default().mark(fetchAllListsWithCategorys),\n    _marked10 = /*#__PURE__*/regenerator_default().mark(fetchAddListItem),\n    _marked11 = /*#__PURE__*/regenerator_default().mark(fetchUpdateListItem),\n    _marked12 = /*#__PURE__*/regenerator_default().mark(fetchDeleteListItem),\n    _marked13 = /*#__PURE__*/regenerator_default().mark(sagas);\n\n\n\n\n\n\nvar api = new Api();\n\nfunction fetchLogin(action) {\n  var user;\n  return regenerator_default().wrap(function fetchLogin$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.prev = 0;\n          _context.next = 3;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.loginRequest, action.payload);\n\n        case 3:\n          user = _context.sent;\n\n          if (user.error) {\n            _context.next = 12;\n            break;\n          }\n\n          if (!user.tokens) {\n            _context.next = 8;\n            break;\n          }\n\n          _context.next = 8;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(saveTokensToStorage, user.tokens);\n\n        case 8:\n          _context.next = 10;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(loginUserAction(user));\n\n        case 10:\n          _context.next = 14;\n          break;\n\n        case 12:\n          _context.next = 14;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(loginErrorAction(user.error));\n\n        case 14:\n          _context.next = 19;\n          break;\n\n        case 16:\n          _context.prev = 16;\n          _context.t0 = _context[\"catch\"](0);\n          console.log(_context.t0.message);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[0, 16]]);\n}\n\nfunction fetchAuth() {\n  var user;\n  return regenerator_default().wrap(function fetchAuth$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.prev = 0;\n          _context2.next = 3;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.getAuthDataBySession);\n\n        case 3:\n          user = _context2.sent;\n\n          if (user.error) {\n            _context2.next = 9;\n            break;\n          }\n\n          _context2.next = 7;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(loginUserAction(user));\n\n        case 7:\n          _context2.next = 16;\n          break;\n\n        case 9:\n          if (!(user.error.code === 'l03')) {\n            _context2.next = 14;\n            break;\n          }\n\n          _context2.next = 12;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(refreshTokensAction(authRequestAction()));\n\n        case 12:\n          _context2.next = 16;\n          break;\n\n        case 14:\n          _context2.next = 16;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(loginUserAction({\n            userName: null,\n            isLogin: false\n          }));\n\n        case 16:\n          _context2.next = 21;\n          break;\n\n        case 18:\n          _context2.prev = 18;\n          _context2.t0 = _context2[\"catch\"](0);\n          console.log(_context2.t0.message);\n\n        case 21:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2, null, [[0, 18]]);\n}\n\nfunction fetchLogout() {\n  var response;\n  return regenerator_default().wrap(function fetchLogout$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.prev = 0;\n          _context3.next = 3;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.logoutRequest);\n\n        case 3:\n          response = _context3.sent;\n\n          if (response.error) {\n            _context3.next = 11;\n            break;\n          }\n\n          _context3.next = 7;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(clearTokensFromStorage);\n\n        case 7:\n          _context3.next = 9;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(logoutUserAction());\n\n        case 9:\n          _context3.next = 12;\n          break;\n\n        case 11:\n          console.log(response.error);\n\n        case 12:\n          _context3.next = 17;\n          break;\n\n        case 14:\n          _context3.prev = 14;\n          _context3.t0 = _context3[\"catch\"](0);\n          console.log(_context3.t0.message);\n\n        case 17:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3, null, [[0, 14]]);\n}\n\nfunction fetchRefreshTokens(nextAction) {\n  var response;\n  return regenerator_default().wrap(function fetchRefreshTokens$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.refreshTokens);\n\n        case 2:\n          response = _context4.sent;\n\n          if (!response.error) {\n            _context4.next = 8;\n            break;\n          }\n\n          _context4.next = 6;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(loginUserAction({\n            userName: null,\n            isLogin: false\n          }));\n\n        case 6:\n          _context4.next = 12;\n          break;\n\n        case 8:\n          _context4.next = 10;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(saveTokensToStorage, response.tokens);\n\n        case 10:\n          _context4.next = 12;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(nextAction.payload);\n\n        case 12:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, _marked4);\n}\n\nfunction fetchAddCategory(action) {\n  var response;\n  return regenerator_default().wrap(function fetchAddCategory$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.addCategoryRequest, action.payload);\n\n        case 2:\n          response = _context5.sent;\n          _context5.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(addCategoryInStoreAction(response.category));\n\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, _marked5);\n}\n\nfunction fetchAllCategorys(action) {\n  var response;\n  return regenerator_default().wrap(function fetchAllCategorys$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.getAllCategorys, action.payload.userId);\n\n        case 2:\n          response = _context6.sent;\n          _context6.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(updDataInStoreAction(normalizeCategorys(response)));\n\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, _marked6);\n}\n\nfunction fetchUpdateCategory(action) {\n  var response;\n  return regenerator_default().wrap(function fetchUpdateCategory$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.updCategoryRequest, action.payload.category);\n\n        case 2:\n          response = _context7.sent;\n          _context7.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(updOneCategoryInStoreAction(response.category));\n\n        case 5:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, _marked7);\n}\n\nfunction fetchDeleteCategory(action) {\n  var response;\n  return regenerator_default().wrap(function fetchDeleteCategory$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.delCategoryRequest, action.payload.category);\n\n        case 2:\n          response = _context8.sent;\n          _context8.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(delOneCategoryInStoreAction(response.category));\n\n        case 5:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, _marked8);\n}\n\nfunction fetchAllListsWithCategorys(action) {\n  var response, data;\n  return regenerator_default().wrap(function fetchAllListsWithCategorys$(_context9) {\n    while (1) {\n      switch (_context9.prev = _context9.next) {\n        case 0:\n          _context9.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.getAllListsWithCategorys, action.payload.userIdAndDateRange);\n\n        case 2:\n          response = _context9.sent;\n          data = normalizeLists(response);\n          _context9.next = 6;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(updDataInStoreAction(data));\n\n        case 6:\n        case \"end\":\n          return _context9.stop();\n      }\n    }\n  }, _marked9);\n}\n\nfunction fetchAddListItem(action) {\n  var response;\n  return regenerator_default().wrap(function fetchAddListItem$(_context10) {\n    while (1) {\n      switch (_context10.prev = _context10.next) {\n        case 0:\n          _context10.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.addListItemRequest, action.payload.listItem);\n\n        case 2:\n          response = _context10.sent;\n          _context10.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(addListItemInStoreAction(response.listItem));\n\n        case 5:\n        case \"end\":\n          return _context10.stop();\n      }\n    }\n  }, _marked10);\n}\n\nfunction fetchUpdateListItem(action) {\n  var response;\n  return regenerator_default().wrap(function fetchUpdateListItem$(_context11) {\n    while (1) {\n      switch (_context11.prev = _context11.next) {\n        case 0:\n          _context11.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.updListItemRequest, action.payload.listItem);\n\n        case 2:\n          response = _context11.sent;\n          _context11.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(updOneListItemInStoreAction(response.listItem));\n\n        case 5:\n        case \"end\":\n          return _context11.stop();\n      }\n    }\n  }, _marked11);\n}\n\nfunction fetchDeleteListItem(action) {\n  var response;\n  return regenerator_default().wrap(function fetchDeleteListItem$(_context12) {\n    while (1) {\n      switch (_context12.prev = _context12.next) {\n        case 0:\n          _context12.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* call */.RE)(api.delListItemRequest, action.payload.listItem);\n\n        case 2:\n          response = _context12.sent;\n          _context12.next = 5;\n          return (0,redux_saga_effects_npm_proxy_esm/* put */.gz)(delOneListItemInStoreAction(response.listItem));\n\n        case 5:\n        case \"end\":\n          return _context12.stop();\n      }\n    }\n  }, _marked12);\n}\n\nfunction sagas() {\n  return regenerator_default().wrap(function sagas$(_context13) {\n    while (1) {\n      switch (_context13.prev = _context13.next) {\n        case 0:\n          _context13.next = 2;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"LOGIN_REQUEST\", fetchLogin);\n\n        case 2:\n          _context13.next = 4;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"AUTH_REQUEST\", fetchAuth);\n\n        case 4:\n          _context13.next = 6;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"REFRESH_TOKENS_REQUEST\", fetchRefreshTokens);\n\n        case 6:\n          _context13.next = 8;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"LOGOUT_REQUEST\", fetchLogout);\n\n        case 8:\n          _context13.next = 10;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"ADD_CATEGORY_REQUEST\", fetchAddCategory);\n\n        case 10:\n          _context13.next = 12;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"GET_CATEGORYS_REQUEST\", fetchAllCategorys);\n\n        case 12:\n          _context13.next = 14;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"UPD_ONE_CATEGORY_REQUEST\", fetchUpdateCategory);\n\n        case 14:\n          _context13.next = 16;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"GET_LISTS_REQUEST\", fetchAllListsWithCategorys);\n\n        case 16:\n          _context13.next = 18;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"ADD_LIST_ITEM_REQUEST\", fetchAddListItem);\n\n        case 18:\n          _context13.next = 20;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"DEL_ONE_CATEGORY_REQUEST\", fetchDeleteCategory);\n\n        case 20:\n          _context13.next = 22;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"UPD_ONE_LIST_ITEM_REQUEST\", fetchUpdateListItem);\n\n        case 22:\n          _context13.next = 24;\n          return (0,redux_saga_effects_npm_proxy_esm/* takeEvery */.ib)(\"DEL_ONE_LIST_ITEM_REQUEST\", fetchDeleteListItem);\n\n        case 24:\n        case \"end\":\n          return _context13.stop();\n      }\n    }\n  }, _marked13);\n}\n\n/* harmony default export */ const store_sagas = (sagas);\n// EXTERNAL MODULE: ./node_modules/ramda/es/clone.js + 5 modules\nvar clone = __webpack_require__(\"Wjd+fjFr\");\n;// CONCATENATED MODULE: ./src/store/reducers.js\n\n\nfunction returnStateReducer() {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  return prevState;\n}\nfunction userReducer() {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"LOGIN_STORE\":\n      {\n        return {\n          id: action.payload.id,\n          name: action.payload.userName,\n          isLogin: action.payload.isLogin\n        };\n      }\n\n    case \"LOGOUT_STORE\":\n      {\n        return {\n          id: null,\n          name: null,\n          isLogin: false,\n          loginErrorMes: null\n        };\n      }\n\n    case \"LOGIN_ERROR_STORE\":\n      {\n        return {\n          loginErrorMes: action.payload.error.mes\n        };\n      }\n  }\n\n  return prevState;\n}\nfunction toogleCategoryReducer() {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"TOGGLE_CATEGORYS_TYPE_STORE\":\n      {\n        return action.payload.categoryType;\n      }\n  }\n\n  return prevState;\n}\nfunction dataReducer() {\n  var prevState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"UPD_DATA_STORE\":\n      {\n        return action.payload.categorys;\n      }\n\n    case \"ADD_NEW_CATEGORY_STORE\":\n      {\n        var data = (0,clone/* default */.Z)(prevState);\n        if (!data.entities.categorys) data.entities.categorys = {};\n        data.entities.categorys[action.payload.category.id] = action.payload.category;\n        data.result.categorys.push(action.payload.category.id);\n        return data;\n      }\n\n    case \"ADD_NEW_LIST_ITEM_STORE\":\n      {\n        var _data = (0,clone/* default */.Z)(prevState);\n\n        if (!_data.entities.list) _data.entities.list = {};\n        _data.entities.list[action.payload.listItem.id] = action.payload.listItem;\n\n        _data.entities.categorys[action.payload.listItem.categoryId].list.unshift(action.payload.listItem.id);\n\n        _data.entities.categorys[action.payload.listItem.categoryId].totalSum += action.payload.listItem.sum;\n        return _data;\n      }\n\n    case \"UPD_ONE_CATEGORY_STORE\":\n      {\n        var _data2 = (0,clone/* default */.Z)(prevState);\n\n        _data2.entities.categorys[action.payload.category.id] = action.payload.category;\n        return _data2;\n      }\n\n    case \"UPD_ONE_LIST_ITEM_STORE\":\n      {\n        var _data3 = (0,clone/* default */.Z)(prevState);\n\n        var listItem = action.payload.listItem;\n        var prevSum = prevState.entities.list[listItem.id].sum;\n        _data3.entities.list[listItem.id] = listItem;\n        _data3.entities.categorys[listItem.categoryId].totalSum -= prevSum;\n        _data3.entities.categorys[listItem.categoryId].totalSum += listItem.sum;\n        return _data3;\n      }\n\n    case \"DEL_ONE_CATEGORY_STORE\":\n      {\n        var _data4 = (0,clone/* default */.Z)(prevState);\n\n        delete _data4.entities.categorys[action.payload.category.id];\n        _data4.result.categorys = _data4.result.categorys.filter(function (categoryId) {\n          return categoryId !== action.payload.category.id;\n        });\n        return _data4;\n      }\n\n    case \"DEL_ONE_LIST_ITEM_STORE\":\n      {\n        var _data5 = (0,clone/* default */.Z)(prevState);\n\n        var _listItem = action.payload.listItem;\n\n        var newListArr = _data5.entities.categorys[_listItem.categoryId].list.filter(function (listId) {\n          return listId !== _listItem.id;\n        });\n\n        _data5.entities.categorys[_listItem.categoryId].list = newListArr;\n        _data5.entities.categorys[_listItem.categoryId].totalSum -= _listItem.sum;\n        delete _data5.entities.list[_listItem.id];\n        return _data5;\n      }\n  }\n\n  return prevState;\n}\n;// CONCATENATED MODULE: ./src/store/index.js\n\n\n\n\nvar sagaMiddleware = (0,redux_saga_core_npm_proxy_esm/* default */.ZP)();\nvar initialState = {\n  user: {\n    id: null,\n    name: null,\n    isLogin: null,\n    loginErrorMes: null\n  },\n  toggleCategory: 'expense',\n  menu: [{\n    title: 'Этот месяц',\n    link: 'month'\n  }, {\n    title: 'Прошлый месяц',\n    link: 'last-month'\n  }, {\n    title: 'Шесть месяцев',\n    link: 'half-year'\n  }, {\n    title: 'Этот год',\n    link: 'year'\n  }],\n  data: null\n};\nvar reducer = (0,redux/* combineReducers */.UY)({\n  user: userReducer,\n  menu: returnStateReducer,\n  data: dataReducer,\n  toggleCategory: toogleCategoryReducer\n});\nvar store = (0,redux/* createStore */.MT)(reducer, initialState, (0,redux/* applyMiddleware */.md)(sagaMiddleware));\nsagaMiddleware.run(store_sagas);\n;// CONCATENATED MODULE: ./src/components/MenuItem/component.js\n\n\n\n\n\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar MenuItem = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(MenuItem, _React$PureComponent);\n\n  var _super = _createSuper(MenuItem);\n\n  function MenuItem(props) {\n    classCallCheck_default()(this, MenuItem);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(MenuItem, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"li\", null, /*#__PURE__*/react.createElement(\"a\", {\n        href: \"/\".concat(this.props.link),\n        className: \"button button_period\"\n      }, this.props.title));\n    }\n  }]);\n\n  return MenuItem;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/MenuItem/index.js\n\n/* harmony default export */ const components_MenuItem = (MenuItem);\n;// CONCATENATED MODULE: ./src/components/Menu/component.js\n\n\n\n\n\n\nfunction component_createSuper(Derived) { var hasNativeReflectConstruct = component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar MenuComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(MenuComponent, _React$PureComponent);\n\n  var _super = component_createSuper(MenuComponent);\n\n  function MenuComponent(props) {\n    classCallCheck_default()(this, MenuComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(MenuComponent, [{\n    key: \"renderItems\",\n    value: function renderItems() {\n      return this.props.menu.map(function (menuItem, i) {\n        return /*#__PURE__*/react.createElement(components_MenuItem, {\n          key: i,\n          title: menuItem.title,\n          link: menuItem.link\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"nav\", null, /*#__PURE__*/react.createElement(\"ul\", {\n        className: \"menu\"\n      }, this.renderItems()));\n    }\n  }]);\n\n  return MenuComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/Menu/container.js\n\n\n\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    menu: state.menu\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar Menu = (0,es/* connect */.$j)(mapStateToProps, mapDispatchToProps)(MenuComponent);\n;// CONCATENATED MODULE: ./src/components/Menu/index.js\n\n/* harmony default export */ const components_Menu = (Menu);\n;// CONCATENATED MODULE: ./src/components/UserLogoutLink/component.js\n\n\n\n\n\n\nfunction UserLogoutLink_component_createSuper(Derived) { var hasNativeReflectConstruct = UserLogoutLink_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction UserLogoutLink_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar UserLogoutLinkComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(UserLogoutLinkComponent, _React$PureComponent);\n\n  var _super = UserLogoutLink_component_createSuper(UserLogoutLinkComponent);\n\n  function UserLogoutLinkComponent(props) {\n    classCallCheck_default()(this, UserLogoutLinkComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(UserLogoutLinkComponent, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"user\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"user-name\"\n      }, this.props.userName), /*#__PURE__*/react.createElement(\"button\", {\n        onClick: this.props.logout,\n        className: \"user-logout\"\n      }, \"\\u0412\\u044B\\u0445\\u043E\\u0434\"));\n    }\n  }]);\n\n  return UserLogoutLinkComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/UserLogoutLink/container.js\n\n\n\n\n\nvar container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    userName: state.user.name\n  };\n};\n\nvar container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    logout: function logout() {\n      return dispatch(logoutAction());\n    }\n  };\n};\n\nvar UserLogoutLink = (0,es/* connect */.$j)(container_mapStateToProps, container_mapDispatchToProps)(UserLogoutLinkComponent);\n;// CONCATENATED MODULE: ./src/components/UserLogoutLink/index.js\n\n/* harmony default export */ const components_UserLogoutLink = (UserLogoutLink);\n;// CONCATENATED MODULE: ./src/components/SetupLink/component.js\n\n\nfunction SetupLink() {\n  return /*#__PURE__*/react.createElement(\"a\", {\n    href: \"/setup/\",\n    className: \"button-setup\"\n  }, \"\\u041D\\u0430\\u0441\\u0442\\u0440\\u043E\\u0439\\u043A\\u0438\");\n}\n;// CONCATENATED MODULE: ./src/components/SetupLink/index.js\n\n/* harmony default export */ const components_SetupLink = (SetupLink);\n;// CONCATENATED MODULE: ./src/pages/header/index.js\n\n\n\n\n\n\nfunction header_createSuper(Derived) { var hasNativeReflectConstruct = header_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction header_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar Header = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(Header, _React$Component);\n\n  var _super = header_createSuper(Header);\n\n  function Header() {\n    classCallCheck_default()(this, Header);\n\n    return _super.apply(this, arguments);\n  }\n\n  createClass_default()(Header, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"header\", {\n        className: \"top\"\n      }, /*#__PURE__*/react.createElement(components_Menu, null), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"menu-setup\"\n      }, /*#__PURE__*/react.createElement(components_SetupLink, null), /*#__PURE__*/react.createElement(components_UserLogoutLink, null)));\n    }\n  }]);\n\n  return Header;\n}(react.Component);\n\n\n// EXTERNAL MODULE: ./node_modules/@babel/runtime/helpers/assertThisInitialized.js\nvar assertThisInitialized = __webpack_require__(\"PJYZgaOA\");\nvar assertThisInitialized_default = /*#__PURE__*/__webpack_require__.n(assertThisInitialized);\n;// CONCATENATED MODULE: ./src/components/ChartsItem/component.js\n\n\n\n\n\n\n\n\nfunction ChartsItem_component_createSuper(Derived) { var hasNativeReflectConstruct = ChartsItem_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction ChartsItem_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar ChartsItem = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ChartsItem, _React$PureComponent);\n\n  var _super = ChartsItem_component_createSuper(ChartsItem);\n\n  function ChartsItem(props) {\n    var _this;\n\n    classCallCheck_default()(this, ChartsItem);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      chartStyleName: \"width\"\n    };\n    _this.updateChartDimension = _this.updateChartDimension.bind(assertThisInitialized_default()(_this));\n    return _this;\n  }\n\n  createClass_default()(ChartsItem, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateChartDimension();\n      window.addEventListener(\"resize\", this.updateChartDimension);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener(\"resize\", this.updateChartDimension);\n    }\n  }, {\n    key: \"updateChartDimension\",\n    value: function updateChartDimension() {\n      if (window.innerWidth <= 480) {\n        this.setState({\n          chartStyleName: \"height\"\n        });\n      } else {\n        this.setState({\n          chartStyleName: \"width\"\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"chart\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        style: defineProperty_default()({}, this.state.chartStyleName, \"\".concat(this.props.persent, \"%\")),\n        className: \"chart-line chart-line_\".concat(this.props.type)\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"chart-txt\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"chart-txt_title\"\n      }, this.props.title), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"chart-txt_val\"\n      }, this.props.sum, \" \\u20BD\")));\n    }\n  }]);\n\n  return ChartsItem;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/ChartsItem/index.js\n\n/* harmony default export */ const components_ChartsItem = (ChartsItem);\n;// CONCATENATED MODULE: ./src/components/Charts/component.js\n\n\n\n\n\n\nfunction Charts_component_createSuper(Derived) { var hasNativeReflectConstruct = Charts_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Charts_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar ChartsComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ChartsComponent, _React$PureComponent);\n\n  var _super = Charts_component_createSuper(ChartsComponent);\n\n  function ChartsComponent(props) {\n    classCallCheck_default()(this, ChartsComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(ChartsComponent, [{\n    key: \"renderItems\",\n    value: function renderItems() {\n      return this.props.charts.map(function (chartsItem, i) {\n        return /*#__PURE__*/react.createElement(components_ChartsItem, {\n          key: i,\n          title: chartsItem.title,\n          sum: chartsItem.sum,\n          persent: chartsItem.persent,\n          type: chartsItem.type\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if ('charts' in this.props) {\n        return /*#__PURE__*/react.createElement(\"div\", {\n          className: \"charts\"\n        }, this.renderItems());\n      }\n\n      return [];\n    }\n  }]);\n\n  return ChartsComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/utils/calcCharts.js\nfunction calcCharts(data) {\n  var income = 0;\n  var expense = 0;\n  data.result.categorys.map(function (categoryId) {\n    if (data.entities.categorys[categoryId].type === \"income\") {\n      income += data.entities.categorys[categoryId].totalSum;\n    } else {\n      expense += data.entities.categorys[categoryId].totalSum;\n    }\n  });\n  var persents = calcChartsPersents(income, expense);\n  return [{\n    title: \"\\u0414\\u043E\\u0445\\u043E\\u0434\",\n    type: \"income\",\n    sum: income,\n    persent: persents.incomePersents\n  }, {\n    title: \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\",\n    type: \"expense\",\n    sum: expense,\n    persent: persents.expensePersents\n  }, {\n    title: \"\\u041D\\u0430\\u043A\\u043E\\u043F\\u043B\\u0435\\u043D\\u0438\\u044F\",\n    type: \"savings\",\n    sum: income - expense,\n    persent: persents.savingsPersents\n  }];\n}\nfunction calcChartsPersents(income, expense) {\n  var onePersent = 0;\n  if (income !== 0 && expense !== 0) onePersent = income > expense ? 100 / income : 100 / expense;\n  var incomePersents = Math.ceil(income > expense ? 100 : income * onePersent);\n  var expensePersents = Math.ceil(income < expense ? 100 : expense * onePersent);\n  var savingsPersents = Math.ceil((income - expense) * onePersent);\n  if (incomePersents < 1) incomePersents = 1;\n  if (expensePersents < 1) expensePersents = 1;\n  if (savingsPersents < 1) savingsPersents = 1;\n  return {\n    incomePersents: incomePersents,\n    expensePersents: expensePersents,\n    savingsPersents: savingsPersents\n  };\n}\n;// CONCATENATED MODULE: ./src/components/Charts/container.js\n\n\n\n\n\nvar Charts_container_mapStateToProps = function mapStateToProps(state) {\n  if (state.data === null) return {};\n  return {\n    charts: calcCharts(state.data)\n  };\n};\n\nvar Charts = (0,es/* connect */.$j)(Charts_container_mapStateToProps)(ChartsComponent);\n;// CONCATENATED MODULE: ./src/components/Charts/index.js\n\n/* harmony default export */ const components_Charts = (Charts);\n;// CONCATENATED MODULE: ./src/components/PlusButton/component.js\n\n\n\n\n\n\nfunction PlusButton_component_createSuper(Derived) { var hasNativeReflectConstruct = PlusButton_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction PlusButton_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar PlusButton = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(PlusButton, _React$PureComponent);\n\n  var _super = PlusButton_component_createSuper(PlusButton);\n\n  function PlusButton(props) {\n    classCallCheck_default()(this, PlusButton);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(PlusButton, [{\n    key: \"returnClassName\",\n    value: function returnClassName() {\n      if (this.props.isOpen) {\n        return 'minus';\n      }\n\n      return 'plus';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"button\", {\n        onClick: this.props.toggleCallback,\n        className: this.returnClassName()\n      });\n    }\n  }]);\n\n  return PlusButton;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/PlusButton/index.js\n\n/* harmony default export */ const components_PlusButton = (PlusButton);\n;// CONCATENATED MODULE: ./src/components/SubmitButton/component.js\n\n\n\n\n\n\nfunction SubmitButton_component_createSuper(Derived) { var hasNativeReflectConstruct = SubmitButton_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction SubmitButton_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar SubmitButton = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(SubmitButton, _React$PureComponent);\n\n  var _super = SubmitButton_component_createSuper(SubmitButton);\n\n  function SubmitButton(props) {\n    classCallCheck_default()(this, SubmitButton);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(SubmitButton, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"button\", {\n        className: \"button \".concat(this.props.className),\n        onClick: this.props.callback\n      }, this.props.children);\n    }\n  }]);\n\n  return SubmitButton;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/SubmitButton/index.js\n\n/* harmony default export */ const components_SubmitButton = (SubmitButton);\n;// CONCATENATED MODULE: ./src/components/AddForm/component.js\n\n\n\n\n\n\n\nfunction component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { component_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction AddForm_component_createSuper(Derived) { var hasNativeReflectConstruct = AddForm_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction AddForm_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar AddFormComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(AddFormComponent, _React$PureComponent);\n\n  var _super = AddForm_component_createSuper(AddFormComponent);\n\n  function AddFormComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, AddFormComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      sum: '',\n      title: ''\n    };\n    return _this;\n  }\n\n  createClass_default()(AddFormComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(e, val) {\n      var fieldValue = val === \"sum\" ? e.target.value.replace(/\\D/, '') : e.target.value;\n      this.setState(defineProperty_default()({}, val, fieldValue));\n    }\n  }, {\n    key: \"checkAndAddListItem\",\n    value: function checkAndAddListItem() {\n      if (this.state.sum && this.state.title) {\n        this.props.addListItem(component_objectSpread(component_objectSpread({}, {\n          categoryId: this.props.categoryId\n        }), this.state));\n        this.setState({\n          sum: '',\n          title: ''\n        });\n        this.props.toggleCallback();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.isOpen === true) {\n        return /*#__PURE__*/react.createElement(\"div\", {\n          className: \"add-form\"\n        }, /*#__PURE__*/react.createElement(\"input\", {\n          value: this.state.sum,\n          onChange: function onChange(e) {\n            return _this2.handleChange(e, 'sum');\n          },\n          placeholder: \"\\u0421\\u0443\\u043C\\u043C\\u0430\",\n          type: \"text\",\n          className: \"add-form__sum\"\n        }), /*#__PURE__*/react.createElement(\"textarea\", {\n          value: this.state.comment,\n          onChange: function onChange(e) {\n            return _this2.handleChange(e, 'title');\n          },\n          placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n          className: \"add-form__txt\"\n        }), /*#__PURE__*/react.createElement(components_SubmitButton, {\n          className: 'button_add-form',\n          callback: function callback() {\n            return _this2.checkAndAddListItem();\n          }\n        }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n      }\n\n      return null;\n    }\n  }]);\n\n  return AddFormComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/AddForm/container.js\n\n\n\n\n\nvar AddForm_container_mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar AddForm_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addListItem: function addListItem(listItem) {\n      return dispatch(addListItemAction(listItem));\n    }\n  };\n};\n\nvar AddForm = (0,es/* connect */.$j)(AddForm_container_mapStateToProps, AddForm_container_mapDispatchToProps)(AddFormComponent);\n;// CONCATENATED MODULE: ./src/components/AddForm/index.js\n\n/* harmony default export */ const components_AddForm = (AddForm);\n;// CONCATENATED MODULE: ./src/components/ModalWindow/component.js\n\n\n\n\n\n\nfunction ModalWindow_component_createSuper(Derived) { var hasNativeReflectConstruct = ModalWindow_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction ModalWindow_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar ModalWindowComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ModalWindowComponent, _React$PureComponent);\n\n  var _super = ModalWindow_component_createSuper(ModalWindowComponent);\n\n  function ModalWindowComponent(props) {\n    classCallCheck_default()(this, ModalWindowComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(ModalWindowComponent, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"modal-window-container\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"modal-window\"\n      }, this.props.children));\n    }\n  }]);\n\n  return ModalWindowComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/ModalWindow/container.js\n\n\n\n\nvar ModalWindow_container_mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar ModalWindow_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar ModalWindow = (0,es/* connect */.$j)(ModalWindow_container_mapStateToProps, ModalWindow_container_mapDispatchToProps)(ModalWindowComponent);\n;// CONCATENATED MODULE: ./src/components/ModalWindow/index.js\n\n/* harmony default export */ const components_ModalWindow = (ModalWindow);\n;// CONCATENATED MODULE: ./src/components/CloseWindowButton/component.js\n\n\n\n\n\n\nfunction CloseWindowButton_component_createSuper(Derived) { var hasNativeReflectConstruct = CloseWindowButton_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction CloseWindowButton_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar CloseWindowButton = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CloseWindowButton, _React$PureComponent);\n\n  var _super = CloseWindowButton_component_createSuper(CloseWindowButton);\n\n  function CloseWindowButton(props) {\n    classCallCheck_default()(this, CloseWindowButton);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(CloseWindowButton, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"close-window-container\"\n      }, /*#__PURE__*/react.createElement(\"button\", {\n        onClick: this.props.closeCallback,\n        className: \"close-window\"\n      }));\n    }\n  }]);\n\n  return CloseWindowButton;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/CloseWindowButton/index.js\n\n/* harmony default export */ const components_CloseWindowButton = (CloseWindowButton);\n;// CONCATENATED MODULE: ./src/components/ConfirmDeleteWindow/component.js\n\n\n\n\n\n\nfunction ConfirmDeleteWindow_component_createSuper(Derived) { var hasNativeReflectConstruct = ConfirmDeleteWindow_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction ConfirmDeleteWindow_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar ConfirmDeleteWindow = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ConfirmDeleteWindow, _React$PureComponent);\n\n  var _super = ConfirmDeleteWindow_component_createSuper(ConfirmDeleteWindow);\n\n  function ConfirmDeleteWindow(props) {\n    classCallCheck_default()(this, ConfirmDeleteWindow);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(ConfirmDeleteWindow, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(components_ModalWindow, null, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(components_CloseWindowButton, {\n        closeCallback: this.props.cancelCallback\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"delete-window-text\"\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C \", this.props.title, \"?\"), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"modal-window__buttons\"\n      }, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: this.props.deleteCallback,\n        className: \"button_modal-window\"\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\"), /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: this.props.cancelCallback,\n        className: \"button_modal-window\"\n      }, \"\\u041E\\u0442\\u043C\\u0435\\u043D\\u0430\"))));\n    }\n  }]);\n\n  return ConfirmDeleteWindow;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/ConfirmDeleteWindow/index.js\n\n/* harmony default export */ const components_ConfirmDeleteWindow = (ConfirmDeleteWindow);\n;// CONCATENATED MODULE: ./src/components/ListItem/component.js\n\n\n\n\n\n\n\n\nfunction ListItem_component_createSuper(Derived) { var hasNativeReflectConstruct = ListItem_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction ListItem_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\nvar ListItemComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ListItemComponent, _React$PureComponent);\n\n  var _super = ListItem_component_createSuper(ListItemComponent);\n\n  function ListItemComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, ListItemComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isOpenEditWindow: false,\n      isOpenConfirmDelete: false,\n      title: _this.props.title,\n      sum: _this.props.sum\n    };\n    _this.openEditWindow = _this.openEditWindow.bind(assertThisInitialized_default()(_this));\n    _this.closeWindows = _this.closeWindows.bind(assertThisInitialized_default()(_this));\n    _this.openConfirmDeleteWindow = _this.openConfirmDeleteWindow.bind(assertThisInitialized_default()(_this));\n    _this.saveListItem = _this.saveListItem.bind(assertThisInitialized_default()(_this));\n    _this.deleteListItem = _this.deleteListItem.bind(assertThisInitialized_default()(_this));\n    return _this;\n  }\n\n  createClass_default()(ListItemComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(e, val) {\n      var fieldValue = val === \"sum\" ? e.target.value.replace(/\\D/, '') : e.target.value;\n      this.setState(defineProperty_default()({}, val, fieldValue));\n    }\n  }, {\n    key: \"openEditWindow\",\n    value: function openEditWindow() {\n      this.setState({\n        isOpenEditWindow: true,\n        isOpenConfirmDelete: false\n      });\n    }\n  }, {\n    key: \"openConfirmDeleteWindow\",\n    value: function openConfirmDeleteWindow() {\n      this.setState({\n        isOpenEditWindow: false,\n        isOpenConfirmDelete: true\n      });\n    }\n  }, {\n    key: \"closeWindows\",\n    value: function closeWindows() {\n      this.setState({\n        isOpenEditWindow: false,\n        isOpenConfirmDelete: false\n      });\n    }\n  }, {\n    key: \"saveListItem\",\n    value: function saveListItem() {\n      this.props.updListItem({\n        id: this.props.id,\n        title: this.state.title,\n        sum: this.state.sum\n      });\n      this.closeWindows();\n    }\n  }, {\n    key: \"deleteListItem\",\n    value: function deleteListItem() {\n      this.props.delListItem({\n        id: this.props.id,\n        sum: this.props.sum\n      });\n      this.closeWindows();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return [/*#__PURE__*/react.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.openEditWindow();\n        },\n        key: this.props.id,\n        className: \"category-item\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-item__txt\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-item__date\"\n      }, \"20-01-2020\"), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-item__descr\"\n      }, this.props.title)), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-item__sum\"\n      }, this.props.sum, \" \\u20BD\")), this.state.isOpenEditWindow && /*#__PURE__*/react.createElement(components_ModalWindow, {\n        key: \"ew\".concat(this.props.id)\n      }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(components_CloseWindowButton, {\n        closeCallback: this.closeWindows\n      }), /*#__PURE__*/react.createElement(\"input\", {\n        value: this.state.sum,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'sum');\n        },\n        placeholder: \"\\u0421\\u0443\\u043C\\u043C\\u0430\",\n        type: \"text\",\n        className: \"add-form__sum\"\n      }), /*#__PURE__*/react.createElement(\"textarea\", {\n        value: this.state.title,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'title');\n        },\n        placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        className: \"add-form__txt\"\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"modal-window__buttons\"\n      }, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this2.saveListItem();\n        },\n        className: \"button_modal-window\"\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this2.openConfirmDeleteWindow();\n        },\n        className: \"button_modal-window\"\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")))), this.state.isOpenConfirmDelete && /*#__PURE__*/react.createElement(components_ConfirmDeleteWindow, {\n        key: \"dw\".concat(this.props.id),\n        cancelCallback: function cancelCallback() {\n          return _this2.closeWindows();\n        },\n        deleteCallback: function deleteCallback() {\n          return _this2.deleteListItem();\n        },\n        title: this.props.title\n      })];\n    }\n  }]);\n\n  return ListItemComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/ListItem/container.js\n\n\n\n\n\nvar ListItem_container_mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar ListItem_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updListItem: function updListItem(listItem) {\n      return dispatch(updListItemAction(listItem));\n    },\n    delListItem: function delListItem(listItem) {\n      return dispatch(delListItemAction(listItem));\n    }\n  };\n};\n\nvar ListItem = (0,es/* connect */.$j)(ListItem_container_mapStateToProps, ListItem_container_mapDispatchToProps)(ListItemComponent);\n;// CONCATENATED MODULE: ./src/components/ListItem/index.js\n\n/* harmony default export */ const components_ListItem = (ListItem);\n;// CONCATENATED MODULE: ./src/components/List/component.js\n\n\n\n\n\n\nfunction List_component_createSuper(Derived) { var hasNativeReflectConstruct = List_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction List_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar ListComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ListComponent, _React$PureComponent);\n\n  var _super = List_component_createSuper(ListComponent);\n\n  function ListComponent(props) {\n    classCallCheck_default()(this, ListComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(ListComponent, [{\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this = this;\n\n      if (this.props.listIdArr.length > 0) {\n        return this.props.listIdArr.map(function (listItemId) {\n          var listItem = _this.props.list[listItemId];\n          return /*#__PURE__*/react.createElement(components_ListItem, {\n            id: listItem.id,\n            key: listItem.id,\n            title: listItem.title,\n            sum: listItem.sum\n          });\n        });\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.isOpen === true) {\n        return /*#__PURE__*/react.createElement(\"div\", {\n          className: \"category-list\"\n        }, this.renderItems());\n      }\n\n      return null;\n    }\n  }]);\n\n  return ListComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/List/container.js\n\n\n\n\nvar List_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    list: state.data.entities.list\n  };\n};\n\nvar List_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar List = (0,es/* connect */.$j)(List_container_mapStateToProps, List_container_mapDispatchToProps)(ListComponent);\n;// CONCATENATED MODULE: ./src/components/List/index.js\n\n/* harmony default export */ const components_List = (List);\n;// CONCATENATED MODULE: ./src/components/CategoryItem/component.js\n\n\n\n\n\n\nfunction CategoryItem_component_createSuper(Derived) { var hasNativeReflectConstruct = CategoryItem_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction CategoryItem_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar CategoryItem = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CategoryItem, _React$PureComponent);\n\n  var _super = CategoryItem_component_createSuper(CategoryItem);\n\n  function CategoryItem(props) {\n    var _this;\n\n    classCallCheck_default()(this, CategoryItem);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isOpenList: false,\n      isOpenForm: false\n    };\n    return _this;\n  }\n\n  createClass_default()(CategoryItem, [{\n    key: \"toggleList\",\n    value: function toggleList() {\n      this.setState({\n        isOpenList: !this.state.isOpenList\n      });\n    }\n  }, {\n    key: \"toggleForm\",\n    value: function toggleForm() {\n      this.setState({\n        isOpenForm: !this.state.isOpenForm\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category__header\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.toggleList();\n        },\n        className: \"category-txt \".concat(this.state.isOpenList ? \"category-txt_rotate90\" : \"category-txt_rotate0\")\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-txt__title\"\n      }, this.props.title), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-txt__sum\"\n      }, this.props.sum > 0 ? this.props.sum : 0, \" \\u20BD\")), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"add-button\"\n      }, /*#__PURE__*/react.createElement(components_PlusButton, {\n        isOpen: this.state.isOpenForm,\n        toggleCallback: function toggleCallback() {\n          return _this2.toggleForm();\n        }\n      }))), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-content\"\n      }, /*#__PURE__*/react.createElement(components_AddForm, {\n        categoryType: this.props.type,\n        categoryId: this.props.id,\n        isOpen: this.state.isOpenForm,\n        toggleCallback: function toggleCallback() {\n          return _this2.toggleForm();\n        }\n      }), /*#__PURE__*/react.createElement(components_List, {\n        listIdArr: this.props.listIdArr,\n        isOpen: this.state.isOpenList\n      })));\n    }\n  }]);\n\n  return CategoryItem;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/CategoryItem/index.js\n\n/* harmony default export */ const components_CategoryItem = (CategoryItem);\n;// CONCATENATED MODULE: ./src/components/Category/component.js\n\n\n\n\n\n\nfunction Category_component_createSuper(Derived) { var hasNativeReflectConstruct = Category_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Category_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar CategoryComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CategoryComponent, _React$PureComponent);\n\n  var _super = Category_component_createSuper(CategoryComponent);\n\n  function CategoryComponent(props) {\n    classCallCheck_default()(this, CategoryComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(CategoryComponent, [{\n    key: \"returnClassName\",\n    value: function returnClassName() {\n      if (this.props.type !== this.props.toggleCategory) {\n        return 'details__block_hide';\n      }\n\n      return '';\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this = this;\n\n      return this.props.categorysIdArr.map(function (categoryId) {\n        var category = _this.props.categorys[categoryId];\n\n        if (category.type === _this.props.type) {\n          return /*#__PURE__*/react.createElement(components_CategoryItem, {\n            key: category.id,\n            id: category.id,\n            title: category.title,\n            type: category.type,\n            sum: category.totalSum,\n            listIdArr: category.list\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if ('categorys' in this.props) {\n        return /*#__PURE__*/react.createElement(\"div\", {\n          className: \"details__block \".concat(this.returnClassName())\n        }, this.renderItems());\n      }\n\n      return [];\n    }\n  }]);\n\n  return CategoryComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/Category/container.js\n\n\n\n\nvar Category_container_mapStateToProps = function mapStateToProps(state) {\n  if (state.data === null) return {};\n  return {\n    categorys: state.data.entities.categorys,\n    categorysIdArr: state.data.result.categorys,\n    toggleCategory: state.toggleCategory\n  };\n};\n\nvar Category_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar Category = (0,es/* connect */.$j)(Category_container_mapStateToProps, Category_container_mapDispatchToProps)(CategoryComponent);\n;// CONCATENATED MODULE: ./src/components/Category/index.js\n\n/* harmony default export */ const components_Category = (Category);\n;// CONCATENATED MODULE: ./src/components/ToggleCategory/component.js\n\n\n\n\n\n\nfunction ToggleCategory_component_createSuper(Derived) { var hasNativeReflectConstruct = ToggleCategory_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction ToggleCategory_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar ToggleCategoryComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(ToggleCategoryComponent, _React$PureComponent);\n\n  var _super = ToggleCategory_component_createSuper(ToggleCategoryComponent);\n\n  function ToggleCategoryComponent(props) {\n    classCallCheck_default()(this, ToggleCategoryComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(ToggleCategoryComponent, [{\n    key: \"returnClassName\",\n    value: function returnClassName(type) {\n      if (type === this.props.toggleCategory) {\n        return 'button_active';\n      }\n\n      return '';\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      return /*#__PURE__*/react.createElement(\"ul\", {\n        className: \"menu__details menu__details_search\"\n      }, /*#__PURE__*/react.createElement(\"li\", null, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this.props.toggle('expense');\n        },\n        className: \"button_details \".concat(this.returnClassName('expense'))\n      }, \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\\u044B\")), /*#__PURE__*/react.createElement(\"li\", null, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this.props.toggle('income');\n        },\n        className: \"button_details \".concat(this.returnClassName('income'))\n      }, \"\\u0414\\u043E\\u0445\\u043E\\u0434\\u044B\")));\n    }\n  }]);\n\n  return ToggleCategoryComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/ToggleCategory/container.js\n\n\n\n\n\nvar ToggleCategory_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    toggleCategory: state.toggleCategory\n  };\n};\n\nvar ToggleCategory_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    toggle: function toggle(categoryType) {\n      return dispatch(toggleCategoryAction(categoryType));\n    }\n  };\n};\n\nvar ToggleCategory = (0,es/* connect */.$j)(ToggleCategory_container_mapStateToProps, ToggleCategory_container_mapDispatchToProps)(ToggleCategoryComponent);\n;// CONCATENATED MODULE: ./src/components/ToggleCategory/index.js\n\n/* harmony default export */ const components_ToggleCategory = (ToggleCategory);\n;// CONCATENATED MODULE: ./src/utils/calcDateRange.js\nfunction calcDateRange(period) {\n  var date = new Date();\n  var dateMin;\n  var dateMax;\n  var yearMin;\n  var monthMin;\n\n  switch (period) {\n    case 'month':\n      dateMin = new Date(date.getFullYear(), date.getMonth(), 1);\n      dateMax = new Date();\n      break;\n\n    case 'last-month':\n      yearMin = date.getFullYear();\n      monthMin = date.getMonth() - 1;\n\n      if (monthMin < 0) {\n        --yearMin;\n        monthMin = 11;\n      }\n\n      dateMin = new Date(yearMin, monthMin, 1);\n      dateMax = new Date(date.getFullYear(), date.getMonth(), 1);\n      break;\n\n    case 'half-year':\n      yearMin = date.getFullYear();\n      monthMin = date.getMonth() - 6;\n\n      if (monthMin < 0) {\n        --yearMin;\n        monthMin = 11 - -monthMin;\n      }\n\n      dateMin = new Date(yearMin, monthMin, 1);\n      dateMax = new Date(date.getFullYear(), date.getMonth(), 1);\n      break;\n\n    case 'year':\n      dateMin = new Date(date.getFullYear(), 0, 1);\n      dateMax = new Date();\n      break;\n\n    default:\n      dateMin = new Date(date.getFullYear(), date.getMonth(), 1);\n      dateMax = new Date();\n  }\n\n  return {\n    dateMin: dateMin,\n    dateMax: dateMax\n  };\n}\n;// CONCATENATED MODULE: ./src/components/Categorys/component.js\n\n\n\n\n\n\n\nfunction Categorys_component_ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction Categorys_component_objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { Categorys_component_ownKeys(Object(source), true).forEach(function (key) { defineProperty_default()(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { Categorys_component_ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction Categorys_component_createSuper(Derived) { var hasNativeReflectConstruct = Categorys_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Categorys_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar CategorysComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CategorysComponent, _React$PureComponent);\n\n  var _super = Categorys_component_createSuper(CategorysComponent);\n\n  function CategorysComponent(props) {\n    classCallCheck_default()(this, CategorysComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(CategorysComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var dateRange = calcDateRange(this.props.datePeriod);\n      this.props.getAllListsWithCategorys(Categorys_component_objectSpread(Categorys_component_objectSpread({}, {\n        userId: this.props.user.id\n      }), dateRange));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return [/*#__PURE__*/react.createElement(components_ToggleCategory, {\n        key: \"ct01\"\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        key: \"ct02\",\n        className: \"details details_categorys\"\n      }, /*#__PURE__*/react.createElement(components_Category, {\n        type: \"expense\"\n      }), /*#__PURE__*/react.createElement(components_Category, {\n        type: \"income\"\n      }))];\n    }\n  }]);\n\n  return CategorysComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/Categorys/container.js\n\n\n\n\n\nvar Categorys_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar Categorys_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getAllListsWithCategorys: function getAllListsWithCategorys(userIdAndDateRange) {\n      return dispatch(getAllListsWithCategorysAction(userIdAndDateRange));\n    }\n  };\n};\n\nvar Categorys = (0,es/* connect */.$j)(Categorys_container_mapStateToProps, Categorys_container_mapDispatchToProps)(CategorysComponent);\n;// CONCATENATED MODULE: ./src/components/Categorys/index.js\n\n/* harmony default export */ const components_Categorys = (Categorys);\n;// CONCATENATED MODULE: ./src/pages/home/index.js\n\n\n\n\n\n\nfunction home_createSuper(Derived) { var hasNativeReflectConstruct = home_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction home_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar Home = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(Home, _React$Component);\n\n  var _super = home_createSuper(Home);\n\n  function Home() {\n    classCallCheck_default()(this, Home);\n\n    return _super.apply(this, arguments);\n  }\n\n  createClass_default()(Home, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(Header, null), /*#__PURE__*/react.createElement(\"section\", null, /*#__PURE__*/react.createElement(components_Charts, null)), /*#__PURE__*/react.createElement(\"section\", null, /*#__PURE__*/react.createElement(components_Categorys, {\n        datePeriod: this.props.urlParams.period\n      })));\n    }\n  }]);\n\n  return Home;\n}(react.Component);\n\n\n;// CONCATENATED MODULE: ./src/components/RadioButton/component.js\n\n\n\n\n\n\nfunction RadioButton_component_createSuper(Derived) { var hasNativeReflectConstruct = RadioButton_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction RadioButton_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar RadioButton = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(RadioButton, _React$PureComponent);\n\n  var _super = RadioButton_component_createSuper(RadioButton);\n\n  function RadioButton(props) {\n    var _this;\n\n    classCallCheck_default()(this, RadioButton);\n\n    _this = _super.call(this, props);\n    _this.defaultChecked = _this.props.defaultChecked || false;\n    return _this;\n  }\n\n  createClass_default()(RadioButton, [{\n    key: \"render\",\n    value: function render() {\n      return [/*#__PURE__*/react.createElement(\"input\", {\n        key: 'rb01',\n        className: \"radio-button\",\n        type: \"radio\",\n        id: this.props.id,\n        name: this.props.name,\n        value: this.props.value,\n        defaultChecked: this.defaultChecked,\n        onClick: this.props.callback\n      }), /*#__PURE__*/react.createElement(\"label\", {\n        key: 'rb02',\n        className: \"\".concat(this.props.className, \" radio-button-lable\"),\n        htmlFor: this.props.id\n      }, this.props.children)];\n    }\n  }]);\n\n  return RadioButton;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/RadioButton/index.js\n\n/* harmony default export */ const components_RadioButton = (RadioButton);\n;// CONCATENATED MODULE: ./src/components/AddCategory/component.js\n\n\n\n\n\n\n\n\nfunction AddCategory_component_createSuper(Derived) { var hasNativeReflectConstruct = AddCategory_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction AddCategory_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\nvar AddCategoryComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(AddCategoryComponent, _React$PureComponent);\n\n  var _super = AddCategory_component_createSuper(AddCategoryComponent);\n\n  function AddCategoryComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, AddCategoryComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      type: 'expense',\n      title: '',\n      userId: props.user.id\n    };\n    _this.handleChange = _this.handleChange.bind(assertThisInitialized_default()(_this));\n    _this.addCategoryAndResetState = _this.addCategoryAndResetState.bind(assertThisInitialized_default()(_this));\n    return _this;\n  }\n\n  createClass_default()(AddCategoryComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(e, val) {\n      this.setState(defineProperty_default()({}, val, e.target.value));\n    }\n  }, {\n    key: \"addCategoryAndResetState\",\n    value: function addCategoryAndResetState(category) {\n      if (this.state.title !== '') {\n        this.props.addCategory(category);\n        this.setState({\n          title: ''\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/react.createElement(\"form\", {\n        className: \"setup-form\",\n        onSubmit: function onSubmit(e) {\n          return e.preventDefault();\n        }\n      }, /*#__PURE__*/react.createElement(components_RadioButton, {\n        className: 'radio-setup-lable',\n        id: 'radio-expense',\n        name: 'category-type',\n        value: 'expense',\n        defaultChecked: true,\n        callback: function callback(e) {\n          return _this2.handleChange(e, 'type');\n        }\n      }, \"\\u0420\\u0430\\u0441\\u0445\\u043E\\u0434\"), /*#__PURE__*/react.createElement(components_RadioButton, {\n        className: 'radio-setup-lable',\n        id: 'radio-income',\n        name: 'category-type',\n        value: 'income',\n        callback: function callback(e) {\n          return _this2.handleChange(e, 'type');\n        }\n      }, \"\\u0414\\u043E\\u0445\\u043E\\u0434\"), /*#__PURE__*/react.createElement(\"input\", {\n        value: this.state.title,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'title');\n        },\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        type: \"text\",\n        className: \"setup-input-field\"\n      }), /*#__PURE__*/react.createElement(components_SubmitButton, {\n        className: 'button_setup-form',\n        callback: function callback() {\n          return _this2.addCategoryAndResetState(_this2.state);\n        }\n      }, \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"));\n    }\n  }]);\n\n  return AddCategoryComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/AddCategory/container.js\n\n\n\n\n\nvar AddCategory_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar AddCategory_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    addCategory: function addCategory(category) {\n      return dispatch(addCategoryAction(category));\n    }\n  };\n};\n\nvar AddCategory = (0,es/* connect */.$j)(AddCategory_container_mapStateToProps, AddCategory_container_mapDispatchToProps)(AddCategoryComponent);\n;// CONCATENATED MODULE: ./src/components/AddCategory/index.js\n\n/* harmony default export */ const components_AddCategory = (AddCategory);\n;// CONCATENATED MODULE: ./src/components/CategoryItem_Setup/component.js\n\n\n\n\n\n\n\n\nfunction CategoryItem_Setup_component_createSuper(Derived) { var hasNativeReflectConstruct = CategoryItem_Setup_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction CategoryItem_Setup_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\nvar CategoryItemSetupComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CategoryItemSetupComponent, _React$PureComponent);\n\n  var _super = CategoryItem_Setup_component_createSuper(CategoryItemSetupComponent);\n\n  function CategoryItemSetupComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, CategoryItemSetupComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      isOpenEditWindow: false,\n      isOpenConfirmDelete: false,\n      title: _this.props.title\n    };\n    _this.openEditWindow = _this.openEditWindow.bind(assertThisInitialized_default()(_this));\n    _this.closeWindows = _this.closeWindows.bind(assertThisInitialized_default()(_this));\n    _this.openConfirmDeleteWindow = _this.openConfirmDeleteWindow.bind(assertThisInitialized_default()(_this));\n    _this.saveCategoryItem = _this.saveCategoryItem.bind(assertThisInitialized_default()(_this));\n    _this.deleteCategoryItem = _this.deleteCategoryItem.bind(assertThisInitialized_default()(_this));\n    _this.toggleVisibleAndUpdate = _this.toggleVisibleAndUpdate.bind(assertThisInitialized_default()(_this));\n    return _this;\n  }\n\n  createClass_default()(CategoryItemSetupComponent, [{\n    key: \"toggleVisibleAndUpdate\",\n    value: function toggleVisibleAndUpdate() {\n      var category = {\n        id: this.props.id,\n        visible: !this.props.visible\n      };\n      this.props.updCategory(category);\n    }\n  }, {\n    key: \"handleChange\",\n    value: function handleChange(e, val) {\n      var fieldValue = val === \"sum\" ? e.target.value.replace(/\\D/, '') : e.target.value;\n      this.setState(defineProperty_default()({}, val, fieldValue));\n    }\n  }, {\n    key: \"openEditWindow\",\n    value: function openEditWindow() {\n      this.setState({\n        isOpenEditWindow: true,\n        isOpenConfirmDelete: false\n      });\n    }\n  }, {\n    key: \"openConfirmDeleteWindow\",\n    value: function openConfirmDeleteWindow() {\n      this.setState({\n        isOpenEditWindow: false,\n        isOpenConfirmDelete: true\n      });\n    }\n  }, {\n    key: \"closeWindows\",\n    value: function closeWindows() {\n      this.setState({\n        isOpenEditWindow: false,\n        isOpenConfirmDelete: false\n      });\n    }\n  }, {\n    key: \"saveCategoryItem\",\n    value: function saveCategoryItem() {\n      this.props.updCategory({\n        id: this.props.id,\n        title: this.state.title\n      });\n      this.closeWindows();\n    }\n  }, {\n    key: \"deleteCategoryItem\",\n    value: function deleteCategoryItem() {\n      this.props.delCategory({\n        id: this.props.id\n      });\n      this.closeWindows();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return [/*#__PURE__*/react.createElement(\"div\", {\n        key: this.props.id,\n        className: \"category__setup\"\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        onClick: function onClick() {\n          return _this2.openEditWindow();\n        },\n        className: \"category-setup__item \".concat(!this.props.visible && \"category-setup__item_hidden\")\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"category-setup__title\"\n      }, this.props.title)), /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this2.toggleVisibleAndUpdate();\n        },\n        className: \"button button_hide\"\n      }, this.props.visible ? \"\\u0421\\u043A\\u0440\\u044B\\u0442\\u044C\" : \"\\u041F\\u043E\\u043A\\u0430\\u0437\\u0430\\u0442\\u044C\")), this.state.isOpenEditWindow && /*#__PURE__*/react.createElement(components_ModalWindow, {\n        key: \"ew\".concat(this.props.id)\n      }, /*#__PURE__*/react.createElement(\"div\", null, /*#__PURE__*/react.createElement(components_CloseWindowButton, {\n        closeCallback: this.closeWindows\n      }), /*#__PURE__*/react.createElement(\"textarea\", {\n        value: this.state.title,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'title');\n        },\n        placeholder: \"\\u041A\\u043E\\u043C\\u043C\\u0435\\u043D\\u0442\\u0430\\u0440\\u0438\\u0439\",\n        className: \"add-form__txt\"\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"modal-window__buttons\"\n      }, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this2.saveCategoryItem();\n        },\n        className: \"button_modal-window\"\n      }, \"\\u0421\\u043E\\u0445\\u0440\\u0430\\u043D\\u0438\\u0442\\u044C\"), /*#__PURE__*/react.createElement(components_SubmitButton, {\n        callback: function callback() {\n          return _this2.openConfirmDeleteWindow();\n        },\n        className: \"button_modal-window\"\n      }, \"\\u0423\\u0434\\u0430\\u043B\\u0438\\u0442\\u044C\")))), this.state.isOpenConfirmDelete && /*#__PURE__*/react.createElement(components_ConfirmDeleteWindow, {\n        key: \"dw\".concat(this.props.id),\n        cancelCallback: function cancelCallback() {\n          return _this2.closeWindows();\n        },\n        deleteCallback: function deleteCallback() {\n          return _this2.deleteCategoryItem();\n        },\n        title: this.props.title\n      })];\n    }\n  }]);\n\n  return CategoryItemSetupComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/CategoryItem_Setup/container.js\n\n\n\n\n\nvar CategoryItem_Setup_container_mapStateToProps = function mapStateToProps(state) {\n  return {};\n};\n\nvar CategoryItem_Setup_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updCategory: function updCategory(category) {\n      return dispatch(updCategoryAction(category));\n    },\n    delCategory: function delCategory(category) {\n      return dispatch(delCategoryAction(category));\n    }\n  };\n};\n\nvar CategoryItemSetup = (0,es/* connect */.$j)(CategoryItem_Setup_container_mapStateToProps, CategoryItem_Setup_container_mapDispatchToProps)(CategoryItemSetupComponent);\n;// CONCATENATED MODULE: ./src/components/CategoryItem_Setup/index.js\n\n/* harmony default export */ const CategoryItem_Setup = (CategoryItemSetup);\n;// CONCATENATED MODULE: ./src/components/Category_Setup/component.js\n\n\n\n\n\n\nfunction Category_Setup_component_createSuper(Derived) { var hasNativeReflectConstruct = Category_Setup_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Category_Setup_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar CategorySetupComponent = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(CategorySetupComponent, _React$Component);\n\n  var _super = Category_Setup_component_createSuper(CategorySetupComponent);\n\n  function CategorySetupComponent(props) {\n    classCallCheck_default()(this, CategorySetupComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(CategorySetupComponent, [{\n    key: \"returnClassName\",\n    value: function returnClassName() {\n      if (this.props.type !== this.props.toggleCategory) {\n        return \"details-setup__block_hide\";\n      }\n\n      return '';\n    }\n  }, {\n    key: \"renderItems\",\n    value: function renderItems() {\n      var _this = this;\n\n      return this.props.categorysIdArr.map(function (categoryId) {\n        var category = _this.props.categorys[categoryId];\n\n        if (category.type === _this.props.type) {\n          return /*#__PURE__*/react.createElement(CategoryItem_Setup, {\n            key: category.id,\n            id: category.id,\n            title: category.title,\n            type: category.type,\n            visible: category.visible\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if ('categorys' in this.props) {\n        return /*#__PURE__*/react.createElement(\"div\", {\n          className: \"details-setup__block \".concat(this.returnClassName())\n        }, this.renderItems());\n      }\n\n      return [];\n    }\n  }]);\n\n  return CategorySetupComponent;\n}(react.Component);\n\n\n;// CONCATENATED MODULE: ./src/components/Category_Setup/container.js\n\n\n\n\nvar Category_Setup_container_mapStateToProps = function mapStateToProps(state) {\n  if (state.data === null) return {};\n  return {\n    categorys: state.data.entities.categorys,\n    categorysIdArr: state.data.result.categorys,\n    toggleCategory: state.toggleCategory\n  };\n};\n\nvar Category_Setup_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {};\n};\n\nvar CategorySetup = (0,es/* connect */.$j)(Category_Setup_container_mapStateToProps, Category_Setup_container_mapDispatchToProps)(CategorySetupComponent);\n;// CONCATENATED MODULE: ./src/components/Category_Setup/index.js\n\n/* harmony default export */ const Category_Setup = (CategorySetup);\n;// CONCATENATED MODULE: ./src/components/Categorys_Setup/component.js\n\n\n\n\n\n\nfunction Categorys_Setup_component_createSuper(Derived) { var hasNativeReflectConstruct = Categorys_Setup_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction Categorys_Setup_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\nvar component_CategorysComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(CategorysComponent, _React$PureComponent);\n\n  var _super = Categorys_Setup_component_createSuper(CategorysComponent);\n\n  function CategorysComponent(props) {\n    classCallCheck_default()(this, CategorysComponent);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(CategorysComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAllCategorys(this.props.user.id);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return [/*#__PURE__*/react.createElement(components_ToggleCategory, {\n        key: \"ct01\"\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        key: \"ct02\",\n        className: \"details-setup details-setup_categorys\"\n      }, /*#__PURE__*/react.createElement(Category_Setup, {\n        type: \"expense\"\n      }), /*#__PURE__*/react.createElement(Category_Setup, {\n        type: \"income\"\n      }))];\n    }\n  }]);\n\n  return CategorysComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/Categorys_Setup/container.js\n\n\n\n\n\nvar Categorys_Setup_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar Categorys_Setup_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    getAllCategorys: function getAllCategorys(userId) {\n      return dispatch(getAllCategorysAction(userId));\n    }\n  };\n};\n\nvar CategorysSetup = (0,es/* connect */.$j)(Categorys_Setup_container_mapStateToProps, Categorys_Setup_container_mapDispatchToProps)(component_CategorysComponent);\n;// CONCATENATED MODULE: ./src/components/Categorys_Setup/index.js\n\n/* harmony default export */ const Categorys_Setup = (CategorysSetup);\n;// CONCATENATED MODULE: ./src/pages/setup/index.js\n\n\n\n\n\n\nfunction setup_createSuper(Derived) { var hasNativeReflectConstruct = setup_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction setup_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar Setup = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(Setup, _React$Component);\n\n  var _super = setup_createSuper(Setup);\n\n  function Setup() {\n    classCallCheck_default()(this, Setup);\n\n    return _super.apply(this, arguments);\n  }\n\n  createClass_default()(Setup, [{\n    key: \"render\",\n    value: function render() {\n      return [/*#__PURE__*/react.createElement(Header, {\n        key: 'ac01'\n      }), /*#__PURE__*/react.createElement(components_AddCategory, {\n        key: 'ac02'\n      }), /*#__PURE__*/react.createElement(Categorys_Setup, {\n        key: 'ac03'\n      })];\n    }\n  }]);\n\n  return Setup;\n}(react.Component);\n\n\n;// CONCATENATED MODULE: ./src/components/LoginForm/component.js\n\n\n\n\n\n\n\nfunction LoginForm_component_createSuper(Derived) { var hasNativeReflectConstruct = LoginForm_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction LoginForm_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\nvar LoginFormComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(LoginFormComponent, _React$PureComponent);\n\n  var _super = LoginForm_component_createSuper(LoginFormComponent);\n\n  function LoginFormComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, LoginFormComponent);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      login: '',\n      pass: ''\n    };\n    return _this;\n  }\n\n  createClass_default()(LoginFormComponent, [{\n    key: \"handleChange\",\n    value: function handleChange(e, val) {\n      this.setState(defineProperty_default()({}, val, e.target.value));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/react.createElement(\"div\", null, this.props.user.loginErrorMes && /*#__PURE__*/react.createElement(\"div\", {\n        className: \"login-error-mes\"\n      }, this.props.user.loginErrorMes), /*#__PURE__*/react.createElement(\"form\", {\n        onSubmit: function onSubmit(e) {\n          return e.preventDefault();\n        }\n      }, /*#__PURE__*/react.createElement(\"input\", {\n        value: this.state.login,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'login');\n        },\n        placeholder: \"\\u041B\\u043E\\u0433\\u0438\\u043D\",\n        type: \"text\",\n        className: \"add-form__sum\"\n      }), /*#__PURE__*/react.createElement(\"input\", {\n        value: this.state.pass,\n        onChange: function onChange(e) {\n          return _this2.handleChange(e, 'pass');\n        },\n        placeholder: \"\\u041F\\u0430\\u0440\\u043E\\u043B\\u044C\",\n        type: \"password\",\n        className: \"add-form__sum\"\n      }), /*#__PURE__*/react.createElement(\"div\", {\n        className: \"login-form-submit-wrap\"\n      }, /*#__PURE__*/react.createElement(components_SubmitButton, {\n        className: 'button_login-form',\n        callback: function callback() {\n          return _this2.props.loginRequest({\n            login: _this2.state.login,\n            pass: _this2.state.pass\n          });\n        }\n      }, \"\\u0412\\u043E\\u0439\\u0442\\u0438\"))));\n    }\n  }]);\n\n  return LoginFormComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/LoginForm/container.js\n\n\n\n\n\nvar LoginForm_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar LoginForm_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    loginRequest: function loginRequest(data) {\n      return dispatch(loginRequestAction(data));\n    }\n  };\n};\n\nvar LoginForm = (0,es/* connect */.$j)(LoginForm_container_mapStateToProps, LoginForm_container_mapDispatchToProps)(LoginFormComponent);\n;// CONCATENATED MODULE: ./src/components/LoginForm/index.js\n\n/* harmony default export */ const components_LoginForm = (LoginForm);\n;// CONCATENATED MODULE: ./src/pages/login/index.js\n\n\n\n\n\n\nfunction login_createSuper(Derived) { var hasNativeReflectConstruct = login_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction login_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\nvar LoginPage = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(LoginPage, _React$Component);\n\n  var _super = login_createSuper(LoginPage);\n\n  function LoginPage(props) {\n    classCallCheck_default()(this, LoginPage);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(LoginPage, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", {\n        className: \"login-form-wrap\"\n      }, /*#__PURE__*/react.createElement(components_LoginForm, null));\n    }\n  }]);\n\n  return LoginPage;\n}(react.Component);\n\nvar RedirectRoute = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(RedirectRoute, _React$PureComponent);\n\n  var _super2 = login_createSuper(RedirectRoute);\n\n  function RedirectRoute(props) {\n    var _this;\n\n    classCallCheck_default()(this, RedirectRoute);\n\n    _this = _super2.call(this, props);\n    _this.location = props.location;\n    _this.from = \"/\";\n    if (props.location.state !== undefined) _this.from = props.location.state.from.pathname;\n    return _this;\n  }\n\n  createClass_default()(RedirectRoute, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        render: function render() {\n          return !_this2.props.user.isLogin ? /*#__PURE__*/react.createElement(LoginPage, null) : /*#__PURE__*/react.createElement(react_router/* Redirect */.l_, {\n            to: {\n              pathname: _this2.from //state: {from: this.location}\n\n            }\n          });\n        }\n      });\n    }\n  }]);\n\n  return RedirectRoute;\n}(react.PureComponent);\n\nvar Login = (0,es/* connect */.$j)(function (state) {\n  return {\n    user: state.user\n  };\n})(RedirectRoute);\n/* harmony default export */ const login = (Login);\n;// CONCATENATED MODULE: ./src/pages/404/index.js\n\n\n\n\n\n\nfunction _404_createSuper(Derived) { var hasNativeReflectConstruct = _404_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction _404_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar Page404 = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(Page404, _React$Component);\n\n  var _super = _404_createSuper(Page404);\n\n  function Page404(props) {\n    classCallCheck_default()(this, Page404);\n\n    return _super.call(this, props);\n  }\n\n  createClass_default()(Page404, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(\"div\", null, \"404 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0430 \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u0430\");\n    }\n  }]);\n\n  return Page404;\n}(react.Component);\n\n\n;// CONCATENATED MODULE: ./src/components/PrivateRoute/component.js\n\n\n\n\n\n\nfunction PrivateRoute_component_createSuper(Derived) { var hasNativeReflectConstruct = PrivateRoute_component_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction PrivateRoute_component_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\nvar PrivateRouteComponent = /*#__PURE__*/function (_React$PureComponent) {\n  inherits_default()(PrivateRouteComponent, _React$PureComponent);\n\n  var _super = PrivateRoute_component_createSuper(PrivateRouteComponent);\n\n  function PrivateRouteComponent(props) {\n    var _this;\n\n    classCallCheck_default()(this, PrivateRouteComponent);\n\n    _this = _super.call(this, props);\n    _this.children = props.children;\n    _this.urlParams = props.computedMatch.params;\n    _this.location = props.location;\n    return _this;\n  }\n\n  createClass_default()(PrivateRouteComponent, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.user.isLogin !== true && this.props.user.isLogin !== false) {\n        this.props.authRequest(); //авторизация\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.user.isLogin !== true && this.props.user.isLogin !== false) {\n        return []; //заглушка\n      }\n\n      return /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        render: function render() {\n          return _this2.props.user.isLogin ? /*#__PURE__*/react.cloneElement(_this2.children, {\n            urlParams: _this2.urlParams\n          }) : /*#__PURE__*/react.createElement(react_router/* Redirect */.l_, {\n            to: {\n              pathname: \"/login\",\n              state: {\n                from: _this2.location\n              }\n            }\n          });\n        }\n      });\n    }\n  }]);\n\n  return PrivateRouteComponent;\n}(react.PureComponent);\n\n\n;// CONCATENATED MODULE: ./src/components/PrivateRoute/container.js\n\n\n\n\n\nvar PrivateRoute_container_mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user\n  };\n};\n\nvar PrivateRoute_container_mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    authRequest: function authRequest() {\n      return dispatch(authRequestAction());\n    }\n  };\n};\n\nvar PrivateRoute = (0,es/* connect */.$j)(PrivateRoute_container_mapStateToProps, PrivateRoute_container_mapDispatchToProps)(PrivateRouteComponent);\n;// CONCATENATED MODULE: ./src/components/PrivateRoute/index.js\n\n/* harmony default export */ const components_PrivateRoute = (PrivateRoute);\n;// CONCATENATED MODULE: ./src/index.js\n\n\n\n\n\n\nfunction src_createSuper(Derived) { var hasNativeReflectConstruct = src_isNativeReflectConstruct(); return function _createSuperInternal() { var Super = getPrototypeOf_default()(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = getPrototypeOf_default()(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return possibleConstructorReturn_default()(this, result); }; }\n\nfunction src_isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar App = /*#__PURE__*/function (_React$Component) {\n  inherits_default()(App, _React$Component);\n\n  var _super = src_createSuper(App);\n\n  function App() {\n    classCallCheck_default()(this, App);\n\n    return _super.apply(this, arguments);\n  }\n\n  createClass_default()(App, [{\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/react.createElement(es/* Provider */.zt, {\n        store: store\n      }, /*#__PURE__*/react.createElement(\"div\", {\n        className: \"max-width\"\n      }, /*#__PURE__*/react.createElement(react_router_dom/* BrowserRouter */.VK, null, /*#__PURE__*/react.createElement(react_router/* Switch */.rs, null, /*#__PURE__*/react.createElement(components_PrivateRoute, {\n        exact: true,\n        path: \"/\"\n      }, /*#__PURE__*/react.createElement(Home, null)), /*#__PURE__*/react.createElement(components_PrivateRoute, {\n        exact: true,\n        path: \"/setup\"\n      }, /*#__PURE__*/react.createElement(Setup, null)), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: \"/login/\",\n        component: login\n      }), /*#__PURE__*/react.createElement(components_PrivateRoute, {\n        exact: true,\n        path: \"/:period\"\n      }, /*#__PURE__*/react.createElement(Home, null)), /*#__PURE__*/react.createElement(react_router/* Route */.AW, {\n        path: \"*\",\n        component: Page404\n      })))));\n    }\n  }]);\n\n  return App;\n}(react.Component);\n\nreact_dom.render( /*#__PURE__*/react.createElement(App, null), document.getElementById(\"app\"));//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidkFoekxjR2guanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNiQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7QUMxbUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDaEJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDektBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7Ozs7QUNyZEE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3RJQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbkNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNwQ0E7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQy9DQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZEE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUN4Q0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuQkE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1BBO0FBQ0E7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7Ozs7O0FDeENBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDN0VBO0FBQ0E7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNyREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDMUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ1pBO0FBQ0E7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzdDQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNwQ0E7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUM5RkE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2pCQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3JDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNaQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDdENBO0FBQ0E7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2hEQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDOUpBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNwQkE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDZEE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMzRkE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDckVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNqQkE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FDekRBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbkJBO0FBQ0E7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ3JEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMxREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuQkE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ3RDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2xEQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNuR0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuQkE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQzlKQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDcEJBO0FBQ0E7O0FDREE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNwRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ2pCQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25CQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUMxQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ2pGQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQ25CQTtBQUNBOztBQ0RBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FDbEZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNqQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7QUNqRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUNuQkE7QUFDQTs7QUNEQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL3V0aWxzL3Rva2Vucy5qcz9hMjY5Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvYXBpL2luZGV4LmpzPzY4N2EiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy91dGlscy9ub3JtYWxpemUuanM/MDdiNyIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL3N0b3JlL2FjdGlvbnMuanM/ZDllMCIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL3N0b3JlL3NhZ2FzLmpzPzc3ZWUiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9zdG9yZS9yZWR1Y2Vycy5qcz9mZjQ4Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvc3RvcmUvaW5kZXguanM/MjJiZSIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvTWVudUl0ZW0vY29tcG9uZW50LmpzP2E2MjUiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL01lbnVJdGVtL2luZGV4LmpzP2VhMjQiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL01lbnUvY29tcG9uZW50LmpzPzdkN2QiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL01lbnUvY29udGFpbmVyLmpzPzFhNzciLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL01lbnUvaW5kZXguanM/Yzk5ZCIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvVXNlckxvZ291dExpbmsvY29tcG9uZW50LmpzPzZjZjciLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1VzZXJMb2dvdXRMaW5rL2NvbnRhaW5lci5qcz9jMWE4Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9Vc2VyTG9nb3V0TGluay9pbmRleC5qcz9lMzhmIiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9TZXR1cExpbmsvY29tcG9uZW50LmpzPzkxNzIiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1NldHVwTGluay9pbmRleC5qcz8wMGI0Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvcGFnZXMvaGVhZGVyL2luZGV4LmpzPzAxNjAiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0NoYXJ0c0l0ZW0vY29tcG9uZW50LmpzP2NhNjUiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0NoYXJ0c0l0ZW0vaW5kZXguanM/ODhmOSIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ2hhcnRzL2NvbXBvbmVudC5qcz9lOTQ0Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvdXRpbHMvY2FsY0NoYXJ0cy5qcz9iYjZiIiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9DaGFydHMvY29udGFpbmVyLmpzPzY0YzIiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0NoYXJ0cy9pbmRleC5qcz9jNjg1Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9QbHVzQnV0dG9uL2NvbXBvbmVudC5qcz82N2MxIiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9QbHVzQnV0dG9uL2luZGV4LmpzPzY2NTQiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1N1Ym1pdEJ1dHRvbi9jb21wb25lbnQuanM/MmI2NiIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvU3VibWl0QnV0dG9uL2luZGV4LmpzP2I5ZjgiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0FkZEZvcm0vY29tcG9uZW50LmpzP2VlM2YiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0FkZEZvcm0vY29udGFpbmVyLmpzP2FlNWYiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0FkZEZvcm0vaW5kZXguanM/YjQyZiIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvTW9kYWxXaW5kb3cvY29tcG9uZW50LmpzP2VmY2IiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL01vZGFsV2luZG93L2NvbnRhaW5lci5qcz81MGY1Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9Nb2RhbFdpbmRvdy9pbmRleC5qcz83MzhjIiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9DbG9zZVdpbmRvd0J1dHRvbi9jb21wb25lbnQuanM/MmEwNSIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ2xvc2VXaW5kb3dCdXR0b24vaW5kZXguanM/MmZjNyIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ29uZmlybURlbGV0ZVdpbmRvdy9jb21wb25lbnQuanM/YThlYiIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ29uZmlybURlbGV0ZVdpbmRvdy9pbmRleC5qcz9mYTNhIiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9MaXN0SXRlbS9jb21wb25lbnQuanM/YjAxOSIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvTGlzdEl0ZW0vY29udGFpbmVyLmpzPzgwZTIiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0xpc3RJdGVtL2luZGV4LmpzPzQ0ODAiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0xpc3QvY29tcG9uZW50LmpzPzZlNTAiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0xpc3QvY29udGFpbmVyLmpzPzQwMGQiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0xpc3QvaW5kZXguanM/ZmY4MCIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ2F0ZWdvcnlJdGVtL2NvbXBvbmVudC5qcz84MDdhIiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9DYXRlZ29yeUl0ZW0vaW5kZXguanM/NmVlYiIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ2F0ZWdvcnkvY29tcG9uZW50LmpzP2M1YTkiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0NhdGVnb3J5L2NvbnRhaW5lci5qcz9hMjAyIiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9DYXRlZ29yeS9pbmRleC5qcz82NTlkIiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9Ub2dnbGVDYXRlZ29yeS9jb21wb25lbnQuanM/NmMwMyIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvVG9nZ2xlQ2F0ZWdvcnkvY29udGFpbmVyLmpzPzU1YmQiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1RvZ2dsZUNhdGVnb3J5L2luZGV4LmpzPzQzMDciLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy91dGlscy9jYWxjRGF0ZVJhbmdlLmpzPzc3MWQiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0NhdGVnb3J5cy9jb21wb25lbnQuanM/MmJhNiIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ2F0ZWdvcnlzL2NvbnRhaW5lci5qcz8wYTI1Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9DYXRlZ29yeXMvaW5kZXguanM/MTRlOSIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL3BhZ2VzL2hvbWUvaW5kZXguanM/ZTBlYSIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvUmFkaW9CdXR0b24vY29tcG9uZW50LmpzP2ZmZjMiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1JhZGlvQnV0dG9uL2luZGV4LmpzPzRhNjEiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0FkZENhdGVnb3J5L2NvbXBvbmVudC5qcz9iMTY0Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9BZGRDYXRlZ29yeS9jb250YWluZXIuanM/OWJlMCIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQWRkQ2F0ZWdvcnkvaW5kZXguanM/ZjdkZCIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ2F0ZWdvcnlJdGVtX1NldHVwL2NvbXBvbmVudC5qcz85YTUxIiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9DYXRlZ29yeUl0ZW1fU2V0dXAvY29udGFpbmVyLmpzPzgxZmQiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0NhdGVnb3J5SXRlbV9TZXR1cC9pbmRleC5qcz9hNWJjIiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9DYXRlZ29yeV9TZXR1cC9jb21wb25lbnQuanM/YzRiYSIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ2F0ZWdvcnlfU2V0dXAvY29udGFpbmVyLmpzP2Q3OTAiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0NhdGVnb3J5X1NldHVwL2luZGV4LmpzP2IyNmEiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0NhdGVnb3J5c19TZXR1cC9jb21wb25lbnQuanM/OGMyNiIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvQ2F0ZWdvcnlzX1NldHVwL2NvbnRhaW5lci5qcz83NjVjIiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9DYXRlZ29yeXNfU2V0dXAvaW5kZXguanM/OTNkZCIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL3BhZ2VzL3NldHVwL2luZGV4LmpzP2FiMzgiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL0xvZ2luRm9ybS9jb21wb25lbnQuanM/MzgwZCIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvTG9naW5Gb3JtL2NvbnRhaW5lci5qcz9lYzc5Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9Mb2dpbkZvcm0vaW5kZXguanM/YWNlNSIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL3BhZ2VzL2xvZ2luL2luZGV4LmpzPzE5NjUiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9wYWdlcy80MDQvaW5kZXguanM/YTVlYyIsIndlYnBhY2s6Ly9SZWFjdF9wcm9qZWN0Ly4vc3JjL2NvbXBvbmVudHMvUHJpdmF0ZVJvdXRlL2NvbXBvbmVudC5qcz8zM2Q5Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvY29tcG9uZW50cy9Qcml2YXRlUm91dGUvY29udGFpbmVyLmpzP2NkMmYiLCJ3ZWJwYWNrOi8vUmVhY3RfcHJvamVjdC8uL3NyYy9jb21wb25lbnRzL1ByaXZhdGVSb3V0ZS9pbmRleC5qcz83MmQ4Iiwid2VicGFjazovL1JlYWN0X3Byb2plY3QvLi9zcmMvaW5kZXguanM/MmRlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZnVuY3Rpb24gc2F2ZVRva2Vuc1RvU3RvcmFnZSh0b2tlbnMpIHtcbiAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ3Rva2VucycsIEpTT04uc3RyaW5naWZ5KHRva2VucykpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNsZWFyVG9rZW5zRnJvbVN0b3JhZ2UoKSB7XG4gIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbnMnKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRSZWZyZXNoVG9rZW5Gcm9tU3RvcmFnZSgpIHtcbiAgaWYgKCFsb2NhbFN0b3JhZ2UudG9rZW5zKSByZXR1cm4gbnVsbDtcbiAgcmV0dXJuIEpTT04ucGFyc2UobG9jYWxTdG9yYWdlLnRva2VucykucmVmcmVzaFRva2VuO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldEFjY2Vzc1Rva2VuRnJvbVN0b3JhZ2UoKSB7XG4gIGlmICghbG9jYWxTdG9yYWdlLnRva2VucykgcmV0dXJuIG51bGw7XG4gIHJldHVybiBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZS50b2tlbnMpLmFjY2Vzc1Rva2VuO1xufSIsImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHlcIjtcbmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3luY1RvR2VuZXJhdG9yXCI7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3JcIjtcblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgeyBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IH0ga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5pbXBvcnQgeyBnZXRSZWZyZXNoVG9rZW5Gcm9tU3RvcmFnZSwgZ2V0QWNjZXNzVG9rZW5Gcm9tU3RvcmFnZSB9IGZyb20gJy4uL3V0aWxzL3Rva2Vucyc7XG5cbnZhciBBcGkgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBBcGkoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIEFwaSk7XG5cbiAgICB0aGlzLnVybFJvb3QgPSAnL2FwaSc7XG4gICAgdGhpcy5vcHRpb25zRGVmYXVsdCA9IHtcbiAgICAgIG1vZGU6IFwiY29yc1wiXG4gICAgfTtcbiAgICB0aGlzLmdldFJlZnJlc2hUb2tlbkZyb21TdG9yYWdlID0gZ2V0UmVmcmVzaFRva2VuRnJvbVN0b3JhZ2U7XG4gICAgdGhpcy5nZXRBY2Nlc3NUb2tlbkZyb21TdG9yYWdlID0gZ2V0QWNjZXNzVG9rZW5Gcm9tU3RvcmFnZTtcbiAgICB0aGlzLmxvZ2luUmVxdWVzdCA9IHRoaXMubG9naW5SZXF1ZXN0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5sb2dvdXRSZXF1ZXN0ID0gdGhpcy5sb2dvdXRSZXF1ZXN0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5yZXF1ZXN0V2l0aEFjY2Vzc1Rva2VuID0gdGhpcy5yZXF1ZXN0V2l0aEFjY2Vzc1Rva2VuLmJpbmQodGhpcyk7XG4gICAgdGhpcy5yZWZyZXNoVG9rZW5zID0gdGhpcy5yZWZyZXNoVG9rZW5zLmJpbmQodGhpcyk7XG4gICAgdGhpcy5nZXRBdXRoRGF0YUJ5U2Vzc2lvbiA9IHRoaXMuZ2V0QXV0aERhdGFCeVNlc3Npb24uYmluZCh0aGlzKTtcbiAgICB0aGlzLmFkZENhdGVnb3J5UmVxdWVzdCA9IHRoaXMuYWRkQ2F0ZWdvcnlSZXF1ZXN0LmJpbmQodGhpcyk7XG4gICAgdGhpcy51cGRDYXRlZ29yeVJlcXVlc3QgPSB0aGlzLnVwZENhdGVnb3J5UmVxdWVzdC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuZGVsQ2F0ZWdvcnlSZXF1ZXN0ID0gdGhpcy5kZWxDYXRlZ29yeVJlcXVlc3QuYmluZCh0aGlzKTtcbiAgICB0aGlzLmdldEFsbENhdGVnb3J5cyA9IHRoaXMuZ2V0QWxsQ2F0ZWdvcnlzLmJpbmQodGhpcyk7XG4gICAgdGhpcy5nZXRBbGxMaXN0c1dpdGhDYXRlZ29yeXMgPSB0aGlzLmdldEFsbExpc3RzV2l0aENhdGVnb3J5cy5iaW5kKHRoaXMpO1xuICAgIHRoaXMuYWRkTGlzdEl0ZW1SZXF1ZXN0ID0gdGhpcy5hZGRMaXN0SXRlbVJlcXVlc3QuYmluZCh0aGlzKTtcbiAgICB0aGlzLnVwZExpc3RJdGVtUmVxdWVzdCA9IHRoaXMudXBkTGlzdEl0ZW1SZXF1ZXN0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5kZWxMaXN0SXRlbVJlcXVlc3QgPSB0aGlzLmRlbExpc3RJdGVtUmVxdWVzdC5iaW5kKHRoaXMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEFwaSwgW3tcbiAgICBrZXk6IFwicmVxdWVzdFdpdGhBY2Nlc3NUb2tlblwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX3JlcXVlc3RXaXRoQWNjZXNzVG9rZW4gPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHVybCwgb3B0aW9ucykge1xuICAgICAgICB2YXIgZnVsbFVybCwgYWNjZXNzVG9rZW47XG4gICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHtcbiAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7XG4gICAgICAgICAgICAgICAgZnVsbFVybCA9IFwiXCIuY29uY2F0KHRoaXMudXJsUm9vdCkuY29uY2F0KHVybCk7XG4gICAgICAgICAgICAgICAgYWNjZXNzVG9rZW4gPSB0aGlzLmdldEFjY2Vzc1Rva2VuRnJvbVN0b3JhZ2UoKTtcbiAgICAgICAgICAgICAgICBpZiAoIW9wdGlvbnMuaGVhZGVycykgb3B0aW9ucy5oZWFkZXJzID0ge307XG4gICAgICAgICAgICAgICAgb3B0aW9ucy5oZWFkZXJzID0ge1xuICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgaWYgKGFjY2Vzc1Rva2VuKSBvcHRpb25zLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9IFwiQmVhcmVyIFwiLmNvbmNhdChhY2Nlc3NUb2tlbik7XG4gICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDg7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKGZ1bGxVcmwsIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGhpcy5vcHRpb25zRGVmYXVsdCksIG9wdGlvbnMpKTtcblxuICAgICAgICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdChcInJldHVyblwiLCBfY29udGV4dC5zZW50KTtcblxuICAgICAgICAgICAgICBjYXNlIDExOlxuICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAxMTtcbiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0W1wiY2F0Y2hcIl0oMCk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQudDAubWVzc2FnZSk7XG5cbiAgICAgICAgICAgICAgY2FzZSAxNDpcbiAgICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCBfY2FsbGVlLCB0aGlzLCBbWzAsIDExXV0pO1xuICAgICAgfSkpO1xuXG4gICAgICBmdW5jdGlvbiByZXF1ZXN0V2l0aEFjY2Vzc1Rva2VuKF94LCBfeDIpIHtcbiAgICAgICAgcmV0dXJuIF9yZXF1ZXN0V2l0aEFjY2Vzc1Rva2VuLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXF1ZXN0V2l0aEFjY2Vzc1Rva2VuO1xuICAgIH0oKVxuICB9LCB7XG4gICAga2V5OiBcInJlZnJlc2hUb2tlbnNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF9yZWZyZXNoVG9rZW5zID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7XG4gICAgICAgIHZhciByZWZyZXNoVG9rZW4sIGZ1bGxVcmwsIG9wdGlvbnMsIHJlc3BvbnNlO1xuICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHtcbiAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7XG4gICAgICAgICAgICAgICAgcmVmcmVzaFRva2VuID0gdGhpcy5nZXRSZWZyZXNoVG9rZW5Gcm9tU3RvcmFnZSgpO1xuICAgICAgICAgICAgICAgIGZ1bGxVcmwgPSBcIlwiLmNvbmNhdCh0aGlzLnVybFJvb3QsIFwiL2F1dGgvcmVmcmVzaFwiKTtcbiAgICAgICAgICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICAgICAgcmVmcmVzaFRva2VuOiByZWZyZXNoVG9rZW5cbiAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDY7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGZldGNoKGZ1bGxVcmwsIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgdGhpcy5vcHRpb25zRGVmYXVsdCksIG9wdGlvbnMpKTtcblxuICAgICAgICAgICAgICBjYXNlIDY6XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDIuc2VudDtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdChcInJldHVyblwiLCByZXNwb25zZS5qc29uKCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMDtcbiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbXCJjYXRjaFwiXSgwKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDIudDAubWVzc2FnZSk7XG5cbiAgICAgICAgICAgICAgY2FzZSAxMzpcbiAgICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZTIsIHRoaXMsIFtbMCwgMTBdXSk7XG4gICAgICB9KSk7XG5cbiAgICAgIGZ1bmN0aW9uIHJlZnJlc2hUb2tlbnMoKSB7XG4gICAgICAgIHJldHVybiBfcmVmcmVzaFRva2Vucy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gcmVmcmVzaFRva2VucztcbiAgICB9KClcbiAgfSwge1xuICAgIGtleTogXCJsb2dpblJlcXVlc3RcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF9sb2dpblJlcXVlc3QgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhkYXRhKSB7XG4gICAgICAgIHZhciBmdWxsVXJsLCBvcHRpb25zLCByZXNwb25zZTtcbiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7XG4gICAgICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgZnVsbFVybCA9IFwiXCIuY29uY2F0KHRoaXMudXJsUm9vdCwgXCIvYXV0aC9sb2dpblwiKTtcbiAgICAgICAgICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgICAgICAgICAgICAgbG9naW46IGRhdGEubG9naW4sXG4gICAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBkYXRhLnBhc3NcbiAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgaGVhZGVyczoge1xuICAgICAgICAgICAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nXG4gICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDI7XG4gICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA1O1xuICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaChmdWxsVXJsLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHRoaXMub3B0aW9uc0RlZmF1bHQpLCBvcHRpb25zKSk7XG5cbiAgICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQzLnNlbnQ7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5hYnJ1cHQoXCJyZXR1cm5cIiwgcmVzcG9uc2UuanNvbigpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgIH0pKTtcblxuICAgICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA5O1xuICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1tcImNhdGNoXCJdKDIpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0My50MC5tZXNzYWdlKTtcblxuICAgICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCBfY2FsbGVlMywgdGhpcywgW1syLCA5XV0pO1xuICAgICAgfSkpO1xuXG4gICAgICBmdW5jdGlvbiBsb2dpblJlcXVlc3QoX3gzKSB7XG4gICAgICAgIHJldHVybiBfbG9naW5SZXF1ZXN0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBsb2dpblJlcXVlc3Q7XG4gICAgfSgpXG4gIH0sIHtcbiAgICBrZXk6IFwibG9nb3V0UmVxdWVzdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX2xvZ291dFJlcXVlc3QgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlNCgpIHtcbiAgICAgICAgdmFyIHVybCwgb3B0aW9ucywgcmVzcG9uc2U7XG4gICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkge1xuICAgICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0NC5wcmV2ID0gX2NvbnRleHQ0Lm5leHQpIHtcbiAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIHVybCA9IFwiL2F1dGgvbG9nb3V0XCI7XG4gICAgICAgICAgICAgICAgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgICAgICAgICAgICAgIHJlZnJlc2hUb2tlbjogdGhpcy5nZXRSZWZyZXNoVG9rZW5Gcm9tU3RvcmFnZSgpXG4gICAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAgICAgICAgICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJ1xuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSAyO1xuICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V2l0aEFjY2Vzc1Rva2VuKHVybCwgb3B0aW9ucyk7XG5cbiAgICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ0LnNlbnQ7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5hYnJ1cHQoXCJyZXR1cm5cIiwgcmVzcG9uc2UuanNvbigpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgIH0pKTtcblxuICAgICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICAgICAgX2NvbnRleHQ0LnByZXYgPSA5O1xuICAgICAgICAgICAgICAgIF9jb250ZXh0NC50MCA9IF9jb250ZXh0NFtcImNhdGNoXCJdKDIpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0NC50MC5tZXNzYWdlKTtcblxuICAgICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NC5zdG9wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCBfY2FsbGVlNCwgdGhpcywgW1syLCA5XV0pO1xuICAgICAgfSkpO1xuXG4gICAgICBmdW5jdGlvbiBsb2dvdXRSZXF1ZXN0KCkge1xuICAgICAgICByZXR1cm4gX2xvZ291dFJlcXVlc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGxvZ291dFJlcXVlc3Q7XG4gICAgfSgpXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0QXV0aERhdGFCeVNlc3Npb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF9nZXRBdXRoRGF0YUJ5U2Vzc2lvbiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU1KCkge1xuICAgICAgICB2YXIgdXJsLCBvcHRpb25zLCByZXNwb25zZTtcbiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlNSQoX2NvbnRleHQ1KSB7XG4gICAgICAgICAgd2hpbGUgKDEpIHtcbiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQ1LnByZXYgPSBfY29udGV4dDUubmV4dCkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgdXJsID0gXCIvYXV0aC91c2VyXCI7XG4gICAgICAgICAgICAgICAgb3B0aW9ucyA9IHtcbiAgICAgICAgICAgICAgICAgIG1ldGhvZDogXCJHRVRcIlxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSAyO1xuICAgICAgICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gNTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V2l0aEFjY2Vzc1Rva2VuKHVybCwgb3B0aW9ucyk7XG5cbiAgICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ1LnNlbnQ7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5hYnJ1cHQoXCJyZXR1cm5cIiwgcmVzcG9uc2UuanNvbigpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgIH0pKTtcblxuICAgICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICAgICAgX2NvbnRleHQ1LnByZXYgPSA5O1xuICAgICAgICAgICAgICAgIF9jb250ZXh0NS50MCA9IF9jb250ZXh0NVtcImNhdGNoXCJdKDIpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0NS50MC5tZXNzYWdlKTtcblxuICAgICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCBfY2FsbGVlNSwgdGhpcywgW1syLCA5XV0pO1xuICAgICAgfSkpO1xuXG4gICAgICBmdW5jdGlvbiBnZXRBdXRoRGF0YUJ5U2Vzc2lvbigpIHtcbiAgICAgICAgcmV0dXJuIF9nZXRBdXRoRGF0YUJ5U2Vzc2lvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZ2V0QXV0aERhdGFCeVNlc3Npb247XG4gICAgfSgpXG4gIH0sIHtcbiAgICBrZXk6IFwiYWRkQ2F0ZWdvcnlSZXF1ZXN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBfYWRkQ2F0ZWdvcnlSZXF1ZXN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTYoY2F0ZWdvcnkpIHtcbiAgICAgICAgdmFyIHVybCwgb3B0aW9ucywgcmVzcG9uc2U7XG4gICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTYkKF9jb250ZXh0Nikge1xuICAgICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHtcbiAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIHVybCA9IFwiL2NhdGVnb3J5c1wiO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICBtZXRob2Q6IFwiUE9TVFwiLFxuICAgICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICAgICAgICAgICAgICB0aXRsZTogY2F0ZWdvcnkudGl0bGUsXG4gICAgICAgICAgICAgICAgICAgIHVzZXJJZDogY2F0ZWdvcnkudXNlcklkLFxuICAgICAgICAgICAgICAgICAgICB0eXBlOiBjYXRlZ29yeS50eXBlXG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgX2NvbnRleHQ2LnByZXYgPSAyO1xuICAgICAgICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gNTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V2l0aEFjY2Vzc1Rva2VuKHVybCwgb3B0aW9ucyk7XG5cbiAgICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ2LnNlbnQ7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5hYnJ1cHQoXCJyZXR1cm5cIiwgcmVzcG9uc2UuanNvbigpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgIH0pKTtcblxuICAgICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICAgICAgX2NvbnRleHQ2LnByZXYgPSA5O1xuICAgICAgICAgICAgICAgIF9jb250ZXh0Ni50MCA9IF9jb250ZXh0NltcImNhdGNoXCJdKDIpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0Ni50MC5tZXNzYWdlKTtcblxuICAgICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ni5zdG9wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCBfY2FsbGVlNiwgdGhpcywgW1syLCA5XV0pO1xuICAgICAgfSkpO1xuXG4gICAgICBmdW5jdGlvbiBhZGRDYXRlZ29yeVJlcXVlc3QoX3g0KSB7XG4gICAgICAgIHJldHVybiBfYWRkQ2F0ZWdvcnlSZXF1ZXN0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBhZGRDYXRlZ29yeVJlcXVlc3Q7XG4gICAgfSgpXG4gIH0sIHtcbiAgICBrZXk6IFwidXBkQ2F0ZWdvcnlSZXF1ZXN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBfdXBkQ2F0ZWdvcnlSZXF1ZXN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTcoY2F0ZWdvcnkpIHtcbiAgICAgICAgdmFyIHVybCwgb3B0aW9ucywgcmVzcG9uc2U7XG4gICAgICAgIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTckKF9jb250ZXh0Nykge1xuICAgICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Ny5wcmV2ID0gX2NvbnRleHQ3Lm5leHQpIHtcbiAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIHVybCA9IFwiL2NhdGVnb3J5c1wiO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShjYXRlZ29yeSlcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIF9jb250ZXh0Ny5wcmV2ID0gMjtcbiAgICAgICAgICAgICAgICBfY29udGV4dDcubmV4dCA9IDU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVxdWVzdFdpdGhBY2Nlc3NUb2tlbih1cmwsIG9wdGlvbnMpO1xuXG4gICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Ny5zZW50O1xuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDcuYWJydXB0KFwicmV0dXJuXCIsIHJlc3BvbnNlLmpzb24oKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICB9KSk7XG5cbiAgICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgICAgIF9jb250ZXh0Ny5wcmV2ID0gOTtcbiAgICAgICAgICAgICAgICBfY29udGV4dDcudDAgPSBfY29udGV4dDdbXCJjYXRjaFwiXSgyKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDcudDAubWVzc2FnZSk7XG5cbiAgICAgICAgICAgICAgY2FzZSAxMjpcbiAgICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDcuc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZTcsIHRoaXMsIFtbMiwgOV1dKTtcbiAgICAgIH0pKTtcblxuICAgICAgZnVuY3Rpb24gdXBkQ2F0ZWdvcnlSZXF1ZXN0KF94NSkge1xuICAgICAgICByZXR1cm4gX3VwZENhdGVnb3J5UmVxdWVzdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdXBkQ2F0ZWdvcnlSZXF1ZXN0O1xuICAgIH0oKVxuICB9LCB7XG4gICAga2V5OiBcInVwZExpc3RJdGVtUmVxdWVzdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX3VwZExpc3RJdGVtUmVxdWVzdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU4KGxpc3RJdGVtKSB7XG4gICAgICAgIHZhciB1cmwsIG9wdGlvbnMsIHJlc3BvbnNlO1xuICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU4JChfY29udGV4dDgpIHtcbiAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDgucHJldiA9IF9jb250ZXh0OC5uZXh0KSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICB1cmwgPSBcIi9saXN0c1wiO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICBtZXRob2Q6IFwiUFVUXCIsXG4gICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShsaXN0SXRlbSlcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIF9jb250ZXh0OC5wcmV2ID0gMjtcbiAgICAgICAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVxdWVzdFdpdGhBY2Nlc3NUb2tlbih1cmwsIG9wdGlvbnMpO1xuXG4gICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0OC5zZW50O1xuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDguYWJydXB0KFwicmV0dXJuXCIsIHJlc3BvbnNlLmpzb24oKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICB9KSk7XG5cbiAgICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgICAgIF9jb250ZXh0OC5wcmV2ID0gOTtcbiAgICAgICAgICAgICAgICBfY29udGV4dDgudDAgPSBfY29udGV4dDhbXCJjYXRjaFwiXSgyKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDgudDAubWVzc2FnZSk7XG5cbiAgICAgICAgICAgICAgY2FzZSAxMjpcbiAgICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDguc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZTgsIHRoaXMsIFtbMiwgOV1dKTtcbiAgICAgIH0pKTtcblxuICAgICAgZnVuY3Rpb24gdXBkTGlzdEl0ZW1SZXF1ZXN0KF94Nikge1xuICAgICAgICByZXR1cm4gX3VwZExpc3RJdGVtUmVxdWVzdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gdXBkTGlzdEl0ZW1SZXF1ZXN0O1xuICAgIH0oKVxuICB9LCB7XG4gICAga2V5OiBcImRlbExpc3RJdGVtUmVxdWVzdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX2RlbExpc3RJdGVtUmVxdWVzdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWU5KGxpc3RJdGVtKSB7XG4gICAgICAgIHZhciB1cmwsIG9wdGlvbnMsIHJlc3BvbnNlO1xuICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWU5JChfY29udGV4dDkpIHtcbiAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDkucHJldiA9IF9jb250ZXh0OS5uZXh0KSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICB1cmwgPSBcIi9saXN0c1wiO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShsaXN0SXRlbSlcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIF9jb250ZXh0OS5wcmV2ID0gMjtcbiAgICAgICAgICAgICAgICBfY29udGV4dDkubmV4dCA9IDU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVxdWVzdFdpdGhBY2Nlc3NUb2tlbih1cmwsIG9wdGlvbnMpO1xuXG4gICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0OS5zZW50O1xuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDkuYWJydXB0KFwicmV0dXJuXCIsIHJlc3BvbnNlLmpzb24oKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICB9KSk7XG5cbiAgICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgICAgIF9jb250ZXh0OS5wcmV2ID0gOTtcbiAgICAgICAgICAgICAgICBfY29udGV4dDkudDAgPSBfY29udGV4dDlbXCJjYXRjaFwiXSgyKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDkudDAubWVzc2FnZSk7XG5cbiAgICAgICAgICAgICAgY2FzZSAxMjpcbiAgICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDkuc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZTksIHRoaXMsIFtbMiwgOV1dKTtcbiAgICAgIH0pKTtcblxuICAgICAgZnVuY3Rpb24gZGVsTGlzdEl0ZW1SZXF1ZXN0KF94Nykge1xuICAgICAgICByZXR1cm4gX2RlbExpc3RJdGVtUmVxdWVzdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZGVsTGlzdEl0ZW1SZXF1ZXN0O1xuICAgIH0oKVxuICB9LCB7XG4gICAga2V5OiBcImRlbENhdGVnb3J5UmVxdWVzdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiAoKSB7XG4gICAgICB2YXIgX2RlbENhdGVnb3J5UmVxdWVzdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUxMChjYXRlZ29yeSkge1xuICAgICAgICB2YXIgdXJsLCBvcHRpb25zLCByZXNwb25zZTtcbiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTAkKF9jb250ZXh0MTApIHtcbiAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDEwLnByZXYgPSBfY29udGV4dDEwLm5leHQpIHtcbiAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIHVybCA9IFwiL2NhdGVnb3J5c1wiO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICAgICAgICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShjYXRlZ29yeSlcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIF9jb250ZXh0MTAucHJldiA9IDI7XG4gICAgICAgICAgICAgICAgX2NvbnRleHQxMC5uZXh0ID0gNTtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V2l0aEFjY2Vzc1Rva2VuKHVybCwgb3B0aW9ucyk7XG5cbiAgICAgICAgICAgICAgY2FzZSA1OlxuICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQxMC5zZW50O1xuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEwLmFicnVwdChcInJldHVyblwiLCByZXNwb25zZS5qc29uKCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICAgIGNhc2UgOTpcbiAgICAgICAgICAgICAgICBfY29udGV4dDEwLnByZXYgPSA5O1xuICAgICAgICAgICAgICAgIF9jb250ZXh0MTAudDAgPSBfY29udGV4dDEwW1wiY2F0Y2hcIl0oMik7XG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQxMC50MC5tZXNzYWdlKTtcblxuICAgICAgICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTAuc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZTEwLCB0aGlzLCBbWzIsIDldXSk7XG4gICAgICB9KSk7XG5cbiAgICAgIGZ1bmN0aW9uIGRlbENhdGVnb3J5UmVxdWVzdChfeDgpIHtcbiAgICAgICAgcmV0dXJuIF9kZWxDYXRlZ29yeVJlcXVlc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGRlbENhdGVnb3J5UmVxdWVzdDtcbiAgICB9KClcbiAgfSwge1xuICAgIGtleTogXCJnZXRBbGxDYXRlZ29yeXNcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF9nZXRBbGxDYXRlZ29yeXMgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMTEodXNlcklkKSB7XG4gICAgICAgIHZhciB1cmwsIG9wdGlvbnMsIHJlc3BvbnNlO1xuICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMSQoX2NvbnRleHQxMSkge1xuICAgICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTEucHJldiA9IF9jb250ZXh0MTEubmV4dCkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgdXJsID0gXCIvY2F0ZWdvcnlzP3VzZXJJZD1cIi5jb25jYXQodXNlcklkKTtcbiAgICAgICAgICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgbWV0aG9kOiBcIkdFVFwiXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgICAgICBfY29udGV4dDExLnByZXYgPSAyO1xuICAgICAgICAgICAgICAgIF9jb250ZXh0MTEubmV4dCA9IDU7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMucmVxdWVzdFdpdGhBY2Nlc3NUb2tlbih1cmwsIG9wdGlvbnMpO1xuXG4gICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0MTEuc2VudDtcbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMS5hYnJ1cHQoXCJyZXR1cm5cIiwgcmVzcG9uc2UuanNvbigpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgICAgICAgIHJldHVybiBkYXRhO1xuICAgICAgICAgICAgICAgIH0pKTtcblxuICAgICAgICAgICAgICBjYXNlIDk6XG4gICAgICAgICAgICAgICAgX2NvbnRleHQxMS5wcmV2ID0gOTtcbiAgICAgICAgICAgICAgICBfY29udGV4dDExLnQwID0gX2NvbnRleHQxMVtcImNhdGNoXCJdKDIpO1xuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKF9jb250ZXh0MTEudDAubWVzc2FnZSk7XG5cbiAgICAgICAgICAgICAgY2FzZSAxMjpcbiAgICAgICAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDExLnN0b3AoKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH0sIF9jYWxsZWUxMSwgdGhpcywgW1syLCA5XV0pO1xuICAgICAgfSkpO1xuXG4gICAgICBmdW5jdGlvbiBnZXRBbGxDYXRlZ29yeXMoX3g5KSB7XG4gICAgICAgIHJldHVybiBfZ2V0QWxsQ2F0ZWdvcnlzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBnZXRBbGxDYXRlZ29yeXM7XG4gICAgfSgpXG4gIH0sIHtcbiAgICBrZXk6IFwiZ2V0QWxsTGlzdHNXaXRoQ2F0ZWdvcnlzXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBfZ2V0QWxsTGlzdHNXaXRoQ2F0ZWdvcnlzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTEyKF9yZWYpIHtcbiAgICAgICAgdmFyIHVzZXJJZCwgZGF0ZU1pbiwgZGF0ZU1heCwgdXJsLCBvcHRpb25zLCByZXNwb25zZTtcbiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMTIkKF9jb250ZXh0MTIpIHtcbiAgICAgICAgICB3aGlsZSAoMSkge1xuICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDEyLnByZXYgPSBfY29udGV4dDEyLm5leHQpIHtcbiAgICAgICAgICAgICAgY2FzZSAwOlxuICAgICAgICAgICAgICAgIHVzZXJJZCA9IF9yZWYudXNlcklkLCBkYXRlTWluID0gX3JlZi5kYXRlTWluLCBkYXRlTWF4ID0gX3JlZi5kYXRlTWF4O1xuICAgICAgICAgICAgICAgIHVybCA9IFwiL2xpc3RzP3VzZXJJZD1cIi5jb25jYXQodXNlcklkLCBcIiZkYXRlTWluPVwiKS5jb25jYXQoZGF0ZU1pbiwgXCImZGF0ZU1heD1cIikuY29uY2F0KGRhdGVNYXgpO1xuICAgICAgICAgICAgICAgIG9wdGlvbnMgPSB7XG4gICAgICAgICAgICAgICAgICBtZXRob2Q6IFwiR0VUXCJcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgIF9jb250ZXh0MTIucHJldiA9IDM7XG4gICAgICAgICAgICAgICAgX2NvbnRleHQxMi5uZXh0ID0gNjtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5yZXF1ZXN0V2l0aEFjY2Vzc1Rva2VuKHVybCwgb3B0aW9ucyk7XG5cbiAgICAgICAgICAgICAgY2FzZSA2OlxuICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQxMi5zZW50O1xuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDEyLmFicnVwdChcInJldHVyblwiLCByZXNwb25zZS5qc29uKCkudGhlbihmdW5jdGlvbiAoZGF0YSkge1xuICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGE7XG4gICAgICAgICAgICAgICAgfSkpO1xuXG4gICAgICAgICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgICAgICAgX2NvbnRleHQxMi5wcmV2ID0gMTA7XG4gICAgICAgICAgICAgICAgX2NvbnRleHQxMi50MCA9IF9jb250ZXh0MTJbXCJjYXRjaFwiXSgzKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDEyLnQwLm1lc3NhZ2UpO1xuXG4gICAgICAgICAgICAgIGNhc2UgMTM6XG4gICAgICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMi5zdG9wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCBfY2FsbGVlMTIsIHRoaXMsIFtbMywgMTBdXSk7XG4gICAgICB9KSk7XG5cbiAgICAgIGZ1bmN0aW9uIGdldEFsbExpc3RzV2l0aENhdGVnb3J5cyhfeDEwKSB7XG4gICAgICAgIHJldHVybiBfZ2V0QWxsTGlzdHNXaXRoQ2F0ZWdvcnlzLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBnZXRBbGxMaXN0c1dpdGhDYXRlZ29yeXM7XG4gICAgfSgpXG4gIH0sIHtcbiAgICBrZXk6IFwiYWRkTGlzdEl0ZW1SZXF1ZXN0XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uICgpIHtcbiAgICAgIHZhciBfYWRkTGlzdEl0ZW1SZXF1ZXN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTEzKGxpc3RJdGVtKSB7XG4gICAgICAgIHZhciB1cmwsIG9wdGlvbnMsIHJlc3BvbnNlO1xuICAgICAgICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUxMyQoX2NvbnRleHQxMykge1xuICAgICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0MTMucHJldiA9IF9jb250ZXh0MTMubmV4dCkge1xuICAgICAgICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgICAgICAgdXJsID0gXCIvbGlzdHNcIjtcbiAgICAgICAgICAgICAgICBvcHRpb25zID0ge1xuICAgICAgICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGxpc3RJdGVtKVxuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgX2NvbnRleHQxMy5wcmV2ID0gMjtcbiAgICAgICAgICAgICAgICBfY29udGV4dDEzLm5leHQgPSA1O1xuICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLnJlcXVlc3RXaXRoQWNjZXNzVG9rZW4odXJsLCBvcHRpb25zKTtcblxuICAgICAgICAgICAgICBjYXNlIDU6XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDEzLnNlbnQ7XG4gICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTMuYWJydXB0KFwicmV0dXJuXCIsIHJlc3BvbnNlLmpzb24oKS50aGVuKGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgICAgICAgICAgICB9KSk7XG5cbiAgICAgICAgICAgICAgY2FzZSA5OlxuICAgICAgICAgICAgICAgIF9jb250ZXh0MTMucHJldiA9IDk7XG4gICAgICAgICAgICAgICAgX2NvbnRleHQxMy50MCA9IF9jb250ZXh0MTNbXCJjYXRjaFwiXSgyKTtcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDEzLnQwLm1lc3NhZ2UpO1xuXG4gICAgICAgICAgICAgIGNhc2UgMTI6XG4gICAgICAgICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQxMy5zdG9wKCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9LCBfY2FsbGVlMTMsIHRoaXMsIFtbMiwgOV1dKTtcbiAgICAgIH0pKTtcblxuICAgICAgZnVuY3Rpb24gYWRkTGlzdEl0ZW1SZXF1ZXN0KF94MTEpIHtcbiAgICAgICAgcmV0dXJuIF9hZGRMaXN0SXRlbVJlcXVlc3QuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGFkZExpc3RJdGVtUmVxdWVzdDtcbiAgICB9KClcbiAgfV0pO1xuXG4gIHJldHVybiBBcGk7XG59KCk7XG5cbmV4cG9ydCB7IEFwaSBhcyBkZWZhdWx0IH07IiwiaW1wb3J0IHsgbm9ybWFsaXplLCBzY2hlbWEgfSBmcm9tICdub3JtYWxpenInO1xuZXhwb3J0IGZ1bmN0aW9uIG5vcm1hbGl6ZUxpc3RzKGRhdGEpIHtcbiAgdmFyIGNhdGVnb3J5ID0gbmV3IHNjaGVtYS5FbnRpdHkoJ2NhdGVnb3J5cycsIHtcbiAgICBsaXN0OiBbbmV3IHNjaGVtYS5FbnRpdHkoJ2xpc3QnKV1cbiAgfSk7XG4gIHZhciBsaXN0c1NjaGVtYSA9IHtcbiAgICBjYXRlZ29yeXM6IFtjYXRlZ29yeV1cbiAgfTtcbiAgcmV0dXJuIG5vcm1hbGl6ZShkYXRhLCBsaXN0c1NjaGVtYSk7XG59XG5leHBvcnQgZnVuY3Rpb24gbm9ybWFsaXplQ2F0ZWdvcnlzKGRhdGEpIHtcbiAgdmFyIGNhdGVnb3J5ID0gbmV3IHNjaGVtYS5FbnRpdHkoJ2NhdGVnb3J5cycpO1xuICB2YXIgY2F0ZWdvcnlTY2hlbWEgPSB7XG4gICAgY2F0ZWdvcnlzOiBbY2F0ZWdvcnldXG4gIH07XG4gIHJldHVybiBub3JtYWxpemUoZGF0YSwgY2F0ZWdvcnlTY2hlbWEpO1xufSIsImV4cG9ydCB2YXIgbG9naW5SZXF1ZXN0QWN0aW9uID0gZnVuY3Rpb24gbG9naW5SZXF1ZXN0QWN0aW9uKGRhdGEpIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcIkxPR0lOX1JFUVVFU1RcIixcbiAgICBwYXlsb2FkOiBkYXRhXG4gIH07XG59O1xuZXhwb3J0IHZhciBsb2dpblVzZXJBY3Rpb24gPSBmdW5jdGlvbiBsb2dpblVzZXJBY3Rpb24odXNlcikge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwiTE9HSU5fU1RPUkVcIixcbiAgICBwYXlsb2FkOiB1c2VyXG4gIH07XG59O1xuZXhwb3J0IHZhciBsb2dvdXRVc2VyQWN0aW9uID0gZnVuY3Rpb24gbG9nb3V0VXNlckFjdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcIkxPR09VVF9TVE9SRVwiLFxuICAgIHBheWxvYWQ6IHt9XG4gIH07XG59O1xuZXhwb3J0IHZhciBsb2dpbkVycm9yQWN0aW9uID0gZnVuY3Rpb24gbG9naW5FcnJvckFjdGlvbihlcnJvcikge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwiTE9HSU5fRVJST1JfU1RPUkVcIixcbiAgICBwYXlsb2FkOiB7XG4gICAgICBlcnJvcjogZXJyb3JcbiAgICB9XG4gIH07XG59O1xuZXhwb3J0IHZhciBhdXRoUmVxdWVzdEFjdGlvbiA9IGZ1bmN0aW9uIGF1dGhSZXF1ZXN0QWN0aW9uKCkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwiQVVUSF9SRVFVRVNUXCIsXG4gICAgcGF5bG9hZDoge31cbiAgfTtcbn07XG5leHBvcnQgdmFyIGxvZ291dEFjdGlvbiA9IGZ1bmN0aW9uIGxvZ291dEFjdGlvbigpIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcIkxPR09VVF9SRVFVRVNUXCIsXG4gICAgcGF5bG9hZDoge31cbiAgfTtcbn07XG5leHBvcnQgdmFyIHJlZnJlc2hUb2tlbnNBY3Rpb24gPSBmdW5jdGlvbiByZWZyZXNoVG9rZW5zQWN0aW9uKG5leHRBY3Rpb24pIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcIlJFRlJFU0hfVE9LRU5TX1JFUVVFU1RcIixcbiAgICBwYXlsb2FkOiBuZXh0QWN0aW9uXG4gIH07XG59O1xuZXhwb3J0IHZhciB0b2dnbGVDYXRlZ29yeUFjdGlvbiA9IGZ1bmN0aW9uIHRvZ2dsZUNhdGVnb3J5QWN0aW9uKGNhdGVnb3J5VHlwZSkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwiVE9HR0xFX0NBVEVHT1JZU19UWVBFX1NUT1JFXCIsXG4gICAgcGF5bG9hZDoge1xuICAgICAgY2F0ZWdvcnlUeXBlOiBjYXRlZ29yeVR5cGVcbiAgICB9XG4gIH07XG59O1xuZXhwb3J0IHZhciBhZGRDYXRlZ29yeUFjdGlvbiA9IGZ1bmN0aW9uIGFkZENhdGVnb3J5QWN0aW9uKGNhdGVnb3J5KSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogXCJBRERfQ0FURUdPUllfUkVRVUVTVFwiLFxuICAgIHBheWxvYWQ6IGNhdGVnb3J5XG4gIH07XG59O1xuZXhwb3J0IHZhciB1cGRDYXRlZ29yeUFjdGlvbiA9IGZ1bmN0aW9uIHVwZENhdGVnb3J5QWN0aW9uKGNhdGVnb3J5KSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogXCJVUERfT05FX0NBVEVHT1JZX1JFUVVFU1RcIixcbiAgICBwYXlsb2FkOiB7XG4gICAgICBjYXRlZ29yeTogY2F0ZWdvcnlcbiAgICB9XG4gIH07XG59O1xuZXhwb3J0IHZhciBkZWxDYXRlZ29yeUFjdGlvbiA9IGZ1bmN0aW9uIGRlbENhdGVnb3J5QWN0aW9uKGNhdGVnb3J5KSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogXCJERUxfT05FX0NBVEVHT1JZX1JFUVVFU1RcIixcbiAgICBwYXlsb2FkOiB7XG4gICAgICBjYXRlZ29yeTogY2F0ZWdvcnlcbiAgICB9XG4gIH07XG59O1xuZXhwb3J0IHZhciBnZXRBbGxDYXRlZ29yeXNBY3Rpb24gPSBmdW5jdGlvbiBnZXRBbGxDYXRlZ29yeXNBY3Rpb24odXNlcklkKSB7XG4gIHJldHVybiB7XG4gICAgdHlwZTogXCJHRVRfQ0FURUdPUllTX1JFUVVFU1RcIixcbiAgICBwYXlsb2FkOiB7XG4gICAgICB1c2VySWQ6IHVzZXJJZFxuICAgIH1cbiAgfTtcbn07XG5leHBvcnQgdmFyIGdldEFsbExpc3RzV2l0aENhdGVnb3J5c0FjdGlvbiA9IGZ1bmN0aW9uIGdldEFsbExpc3RzV2l0aENhdGVnb3J5c0FjdGlvbihvYmopIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcIkdFVF9MSVNUU19SRVFVRVNUXCIsXG4gICAgcGF5bG9hZDoge1xuICAgICAgdXNlcklkQW5kRGF0ZVJhbmdlOiBvYmpcbiAgICB9XG4gIH07XG59O1xuZXhwb3J0IHZhciB1cGREYXRhSW5TdG9yZUFjdGlvbiA9IGZ1bmN0aW9uIHVwZERhdGFJblN0b3JlQWN0aW9uKGNhdGVnb3J5cykge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwiVVBEX0RBVEFfU1RPUkVcIixcbiAgICBwYXlsb2FkOiB7XG4gICAgICBjYXRlZ29yeXM6IGNhdGVnb3J5c1xuICAgIH1cbiAgfTtcbn07XG5leHBvcnQgdmFyIGFkZENhdGVnb3J5SW5TdG9yZUFjdGlvbiA9IGZ1bmN0aW9uIGFkZENhdGVnb3J5SW5TdG9yZUFjdGlvbihjYXRlZ29yeSkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwiQUREX05FV19DQVRFR09SWV9TVE9SRVwiLFxuICAgIHBheWxvYWQ6IHtcbiAgICAgIGNhdGVnb3J5OiBjYXRlZ29yeVxuICAgIH1cbiAgfTtcbn07XG5leHBvcnQgdmFyIHVwZE9uZUNhdGVnb3J5SW5TdG9yZUFjdGlvbiA9IGZ1bmN0aW9uIHVwZE9uZUNhdGVnb3J5SW5TdG9yZUFjdGlvbihjYXRlZ29yeSkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwiVVBEX09ORV9DQVRFR09SWV9TVE9SRVwiLFxuICAgIHBheWxvYWQ6IHtcbiAgICAgIGNhdGVnb3J5OiBjYXRlZ29yeVxuICAgIH1cbiAgfTtcbn07XG5leHBvcnQgdmFyIHVwZE9uZUxpc3RJdGVtSW5TdG9yZUFjdGlvbiA9IGZ1bmN0aW9uIHVwZE9uZUxpc3RJdGVtSW5TdG9yZUFjdGlvbihsaXN0SXRlbSkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwiVVBEX09ORV9MSVNUX0lURU1fU1RPUkVcIixcbiAgICBwYXlsb2FkOiB7XG4gICAgICBsaXN0SXRlbTogbGlzdEl0ZW1cbiAgICB9XG4gIH07XG59O1xuZXhwb3J0IHZhciBkZWxPbmVDYXRlZ29yeUluU3RvcmVBY3Rpb24gPSBmdW5jdGlvbiBkZWxPbmVDYXRlZ29yeUluU3RvcmVBY3Rpb24oY2F0ZWdvcnkpIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcIkRFTF9PTkVfQ0FURUdPUllfU1RPUkVcIixcbiAgICBwYXlsb2FkOiB7XG4gICAgICBjYXRlZ29yeTogY2F0ZWdvcnlcbiAgICB9XG4gIH07XG59O1xuZXhwb3J0IHZhciBkZWxPbmVMaXN0SXRlbUluU3RvcmVBY3Rpb24gPSBmdW5jdGlvbiBkZWxPbmVMaXN0SXRlbUluU3RvcmVBY3Rpb24obGlzdEl0ZW0pIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcIkRFTF9PTkVfTElTVF9JVEVNX1NUT1JFXCIsXG4gICAgcGF5bG9hZDoge1xuICAgICAgbGlzdEl0ZW06IGxpc3RJdGVtXG4gICAgfVxuICB9O1xufTtcbmV4cG9ydCB2YXIgYWRkTGlzdEl0ZW1BY3Rpb24gPSBmdW5jdGlvbiBhZGRMaXN0SXRlbUFjdGlvbihsaXN0SXRlbSkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwiQUREX0xJU1RfSVRFTV9SRVFVRVNUXCIsXG4gICAgcGF5bG9hZDoge1xuICAgICAgbGlzdEl0ZW06IGxpc3RJdGVtXG4gICAgfVxuICB9O1xufTtcbmV4cG9ydCB2YXIgdXBkTGlzdEl0ZW1BY3Rpb24gPSBmdW5jdGlvbiB1cGRMaXN0SXRlbUFjdGlvbihsaXN0SXRlbSkge1xuICByZXR1cm4ge1xuICAgIHR5cGU6IFwiVVBEX09ORV9MSVNUX0lURU1fUkVRVUVTVFwiLFxuICAgIHBheWxvYWQ6IHtcbiAgICAgIGxpc3RJdGVtOiBsaXN0SXRlbVxuICAgIH1cbiAgfTtcbn07XG5leHBvcnQgdmFyIGRlbExpc3RJdGVtQWN0aW9uID0gZnVuY3Rpb24gZGVsTGlzdEl0ZW1BY3Rpb24obGlzdEl0ZW0pIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcIkRFTF9PTkVfTElTVF9JVEVNX1JFUVVFU1RcIixcbiAgICBwYXlsb2FkOiB7XG4gICAgICBsaXN0SXRlbTogbGlzdEl0ZW1cbiAgICB9XG4gIH07XG59O1xuZXhwb3J0IHZhciBhZGRMaXN0SXRlbUluU3RvcmVBY3Rpb24gPSBmdW5jdGlvbiBhZGRMaXN0SXRlbUluU3RvcmVBY3Rpb24obGlzdEl0ZW0pIHtcbiAgcmV0dXJuIHtcbiAgICB0eXBlOiBcIkFERF9ORVdfTElTVF9JVEVNX1NUT1JFXCIsXG4gICAgcGF5bG9hZDoge1xuICAgICAgbGlzdEl0ZW06IGxpc3RJdGVtXG4gICAgfVxuICB9O1xufTsiLCJpbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvcmVnZW5lcmF0b3JcIjtcblxudmFyIF9tYXJrZWQgPSAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZldGNoTG9naW4pLFxuICAgIF9tYXJrZWQyID0gLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmZXRjaEF1dGgpLFxuICAgIF9tYXJrZWQzID0gLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmZXRjaExvZ291dCksXG4gICAgX21hcmtlZDQgPSAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZldGNoUmVmcmVzaFRva2VucyksXG4gICAgX21hcmtlZDUgPSAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZldGNoQWRkQ2F0ZWdvcnkpLFxuICAgIF9tYXJrZWQ2ID0gLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmZXRjaEFsbENhdGVnb3J5cyksXG4gICAgX21hcmtlZDcgPSAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZldGNoVXBkYXRlQ2F0ZWdvcnkpLFxuICAgIF9tYXJrZWQ4ID0gLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmZXRjaERlbGV0ZUNhdGVnb3J5KSxcbiAgICBfbWFya2VkOSA9IC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZmV0Y2hBbGxMaXN0c1dpdGhDYXRlZ29yeXMpLFxuICAgIF9tYXJrZWQxMCA9IC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZmV0Y2hBZGRMaXN0SXRlbSksXG4gICAgX21hcmtlZDExID0gLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmZXRjaFVwZGF0ZUxpc3RJdGVtKSxcbiAgICBfbWFya2VkMTIgPSAvKiNfX1BVUkVfXyovX3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZldGNoRGVsZXRlTGlzdEl0ZW0pLFxuICAgIF9tYXJrZWQxMyA9IC8qI19fUFVSRV9fKi9fcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoc2FnYXMpO1xuXG5pbXBvcnQgeyBjYWxsLCBwdXQsIHRha2VFdmVyeSB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5pbXBvcnQgQXBpIGZyb20gJy4uL2FwaSc7XG5pbXBvcnQgeyBzYXZlVG9rZW5zVG9TdG9yYWdlLCBjbGVhclRva2Vuc0Zyb21TdG9yYWdlIH0gZnJvbSAnLi4vdXRpbHMvdG9rZW5zJztcbmltcG9ydCB7IG5vcm1hbGl6ZUxpc3RzLCBub3JtYWxpemVDYXRlZ29yeXMgfSBmcm9tIFwiLi4vdXRpbHMvbm9ybWFsaXplXCI7XG5pbXBvcnQgeyB1cGREYXRhSW5TdG9yZUFjdGlvbiwgdXBkT25lQ2F0ZWdvcnlJblN0b3JlQWN0aW9uLCBhZGRDYXRlZ29yeUluU3RvcmVBY3Rpb24sIGxvZ2luVXNlckFjdGlvbiwgbG9nb3V0VXNlckFjdGlvbiwgbG9naW5FcnJvckFjdGlvbiwgcmVmcmVzaFRva2Vuc0FjdGlvbiwgYXV0aFJlcXVlc3RBY3Rpb24sIGFkZExpc3RJdGVtSW5TdG9yZUFjdGlvbiwgZGVsT25lQ2F0ZWdvcnlJblN0b3JlQWN0aW9uLCB1cGRPbmVMaXN0SXRlbUluU3RvcmVBY3Rpb24sIGRlbE9uZUxpc3RJdGVtSW5TdG9yZUFjdGlvbiB9IGZyb20gJy4uL3N0b3JlL2FjdGlvbnMnO1xudmFyIGFwaSA9IG5ldyBBcGkoKTtcblxuZnVuY3Rpb24gZmV0Y2hMb2dpbihhY3Rpb24pIHtcbiAgdmFyIHVzZXI7XG4gIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gZmV0Y2hMb2dpbiQoX2NvbnRleHQpIHtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkge1xuICAgICAgICBjYXNlIDA6XG4gICAgICAgICAgX2NvbnRleHQucHJldiA9IDA7XG4gICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7XG4gICAgICAgICAgcmV0dXJuIGNhbGwoYXBpLmxvZ2luUmVxdWVzdCwgYWN0aW9uLnBheWxvYWQpO1xuXG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICB1c2VyID0gX2NvbnRleHQuc2VudDtcblxuICAgICAgICAgIGlmICh1c2VyLmVycm9yKSB7XG4gICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTI7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoIXVzZXIudG9rZW5zKSB7XG4gICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gODtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA4O1xuICAgICAgICAgIHJldHVybiBjYWxsKHNhdmVUb2tlbnNUb1N0b3JhZ2UsIHVzZXIudG9rZW5zKTtcblxuICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgX2NvbnRleHQubmV4dCA9IDEwO1xuICAgICAgICAgIHJldHVybiBwdXQobG9naW5Vc2VyQWN0aW9uKHVzZXIpKTtcblxuICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDtcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDtcbiAgICAgICAgICByZXR1cm4gcHV0KGxvZ2luRXJyb3JBY3Rpb24odXNlci5lcnJvcikpO1xuXG4gICAgICAgIGNhc2UgMTQ6XG4gICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE5O1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgMTY6XG4gICAgICAgICAgX2NvbnRleHQucHJldiA9IDE2O1xuICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbXCJjYXRjaFwiXSgwKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MC5tZXNzYWdlKTtcblxuICAgICAgICBjYXNlIDE5OlxuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIF9tYXJrZWQsIG51bGwsIFtbMCwgMTZdXSk7XG59XG5cbmZ1bmN0aW9uIGZldGNoQXV0aCgpIHtcbiAgdmFyIHVzZXI7XG4gIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gZmV0Y2hBdXRoJChfY29udGV4dDIpIHtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7XG4gICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzO1xuICAgICAgICAgIHJldHVybiBjYWxsKGFwaS5nZXRBdXRoRGF0YUJ5U2Vzc2lvbik7XG5cbiAgICAgICAgY2FzZSAzOlxuICAgICAgICAgIHVzZXIgPSBfY29udGV4dDIuc2VudDtcblxuICAgICAgICAgIGlmICh1c2VyLmVycm9yKSB7XG4gICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDk7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDc7XG4gICAgICAgICAgcmV0dXJuIHB1dChsb2dpblVzZXJBY3Rpb24odXNlcikpO1xuXG4gICAgICAgIGNhc2UgNzpcbiAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE2O1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgOTpcbiAgICAgICAgICBpZiAoISh1c2VyLmVycm9yLmNvZGUgPT09ICdsMDMnKSkge1xuICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cblxuICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTI7XG4gICAgICAgICAgcmV0dXJuIHB1dChyZWZyZXNoVG9rZW5zQWN0aW9uKGF1dGhSZXF1ZXN0QWN0aW9uKCkpKTtcblxuICAgICAgICBjYXNlIDEyOlxuICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTY7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSAxNDpcbiAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDE2O1xuICAgICAgICAgIHJldHVybiBwdXQobG9naW5Vc2VyQWN0aW9uKHtcbiAgICAgICAgICAgIHVzZXJOYW1lOiBudWxsLFxuICAgICAgICAgICAgaXNMb2dpbjogZmFsc2VcbiAgICAgICAgICB9KSk7XG5cbiAgICAgICAgY2FzZSAxNjpcbiAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDIxO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgMTg6XG4gICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxODtcbiAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbXCJjYXRjaFwiXSgwKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDIudDAubWVzc2FnZSk7XG5cbiAgICAgICAgY2FzZSAyMTpcbiAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgX21hcmtlZDIsIG51bGwsIFtbMCwgMThdXSk7XG59XG5cbmZ1bmN0aW9uIGZldGNoTG9nb3V0KCkge1xuICB2YXIgcmVzcG9uc2U7XG4gIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gZmV0Y2hMb2dvdXQkKF9jb250ZXh0Mykge1xuICAgIHdoaWxlICgxKSB7XG4gICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMDtcbiAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7XG4gICAgICAgICAgcmV0dXJuIGNhbGwoYXBpLmxvZ291dFJlcXVlc3QpO1xuXG4gICAgICAgIGNhc2UgMzpcbiAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0My5zZW50O1xuXG4gICAgICAgICAgaWYgKHJlc3BvbnNlLmVycm9yKSB7XG4gICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDExO1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA3O1xuICAgICAgICAgIHJldHVybiBjYWxsKGNsZWFyVG9rZW5zRnJvbVN0b3JhZ2UpO1xuXG4gICAgICAgIGNhc2UgNzpcbiAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDk7XG4gICAgICAgICAgcmV0dXJuIHB1dChsb2dvdXRVc2VyQWN0aW9uKCkpO1xuXG4gICAgICAgIGNhc2UgOTpcbiAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEyO1xuICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgIGNhc2UgMTE6XG4gICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZXJyb3IpO1xuXG4gICAgICAgIGNhc2UgMTI6XG4gICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxNztcbiAgICAgICAgICBicmVhaztcblxuICAgICAgICBjYXNlIDE0OlxuICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTQ7XG4gICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzW1wiY2F0Y2hcIl0oMCk7XG4gICAgICAgICAgY29uc29sZS5sb2coX2NvbnRleHQzLnQwLm1lc3NhZ2UpO1xuXG4gICAgICAgIGNhc2UgMTc6XG4gICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIF9tYXJrZWQzLCBudWxsLCBbWzAsIDE0XV0pO1xufVxuXG5mdW5jdGlvbiBmZXRjaFJlZnJlc2hUb2tlbnMobmV4dEFjdGlvbikge1xuICB2YXIgcmVzcG9uc2U7XG4gIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gZmV0Y2hSZWZyZXNoVG9rZW5zJChfY29udGV4dDQpIHtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDI7XG4gICAgICAgICAgcmV0dXJuIGNhbGwoYXBpLnJlZnJlc2hUb2tlbnMpO1xuXG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0NC5zZW50O1xuXG4gICAgICAgICAgaWYgKCFyZXNwb25zZS5lcnJvcikge1xuICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA4O1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuXG4gICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA2O1xuICAgICAgICAgIHJldHVybiBwdXQobG9naW5Vc2VyQWN0aW9uKHtcbiAgICAgICAgICAgIHVzZXJOYW1lOiBudWxsLFxuICAgICAgICAgICAgaXNMb2dpbjogZmFsc2VcbiAgICAgICAgICB9KSk7XG5cbiAgICAgICAgY2FzZSA2OlxuICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTI7XG4gICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgY2FzZSA4OlxuICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTA7XG4gICAgICAgICAgcmV0dXJuIGNhbGwoc2F2ZVRva2Vuc1RvU3RvcmFnZSwgcmVzcG9uc2UudG9rZW5zKTtcblxuICAgICAgICBjYXNlIDEwOlxuICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gMTI7XG4gICAgICAgICAgcmV0dXJuIHB1dChuZXh0QWN0aW9uLnBheWxvYWQpO1xuXG4gICAgICAgIGNhc2UgMTI6XG4gICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ0LnN0b3AoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIF9tYXJrZWQ0KTtcbn1cblxuZnVuY3Rpb24gZmV0Y2hBZGRDYXRlZ29yeShhY3Rpb24pIHtcbiAgdmFyIHJlc3BvbnNlO1xuICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIGZldGNoQWRkQ2F0ZWdvcnkkKF9jb250ZXh0NSkge1xuICAgIHdoaWxlICgxKSB7XG4gICAgICBzd2l0Y2ggKF9jb250ZXh0NS5wcmV2ID0gX2NvbnRleHQ1Lm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIF9jb250ZXh0NS5uZXh0ID0gMjtcbiAgICAgICAgICByZXR1cm4gY2FsbChhcGkuYWRkQ2F0ZWdvcnlSZXF1ZXN0LCBhY3Rpb24ucGF5bG9hZCk7XG5cbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ1LnNlbnQ7XG4gICAgICAgICAgX2NvbnRleHQ1Lm5leHQgPSA1O1xuICAgICAgICAgIHJldHVybiBwdXQoYWRkQ2F0ZWdvcnlJblN0b3JlQWN0aW9uKHJlc3BvbnNlLmNhdGVnb3J5KSk7XG5cbiAgICAgICAgY2FzZSA1OlxuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0NS5zdG9wKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCBfbWFya2VkNSk7XG59XG5cbmZ1bmN0aW9uIGZldGNoQWxsQ2F0ZWdvcnlzKGFjdGlvbikge1xuICB2YXIgcmVzcG9uc2U7XG4gIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gZmV0Y2hBbGxDYXRlZ29yeXMkKF9jb250ZXh0Nikge1xuICAgIHdoaWxlICgxKSB7XG4gICAgICBzd2l0Y2ggKF9jb250ZXh0Ni5wcmV2ID0gX2NvbnRleHQ2Lm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gMjtcbiAgICAgICAgICByZXR1cm4gY2FsbChhcGkuZ2V0QWxsQ2F0ZWdvcnlzLCBhY3Rpb24ucGF5bG9hZC51c2VySWQpO1xuXG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Ni5zZW50O1xuICAgICAgICAgIF9jb250ZXh0Ni5uZXh0ID0gNTtcbiAgICAgICAgICByZXR1cm4gcHV0KHVwZERhdGFJblN0b3JlQWN0aW9uKG5vcm1hbGl6ZUNhdGVnb3J5cyhyZXNwb25zZSkpKTtcblxuICAgICAgICBjYXNlIDU6XG4gICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ2LnN0b3AoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIF9tYXJrZWQ2KTtcbn1cblxuZnVuY3Rpb24gZmV0Y2hVcGRhdGVDYXRlZ29yeShhY3Rpb24pIHtcbiAgdmFyIHJlc3BvbnNlO1xuICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIGZldGNoVXBkYXRlQ2F0ZWdvcnkkKF9jb250ZXh0Nykge1xuICAgIHdoaWxlICgxKSB7XG4gICAgICBzd2l0Y2ggKF9jb250ZXh0Ny5wcmV2ID0gX2NvbnRleHQ3Lm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIF9jb250ZXh0Ny5uZXh0ID0gMjtcbiAgICAgICAgICByZXR1cm4gY2FsbChhcGkudXBkQ2F0ZWdvcnlSZXF1ZXN0LCBhY3Rpb24ucGF5bG9hZC5jYXRlZ29yeSk7XG5cbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQ3LnNlbnQ7XG4gICAgICAgICAgX2NvbnRleHQ3Lm5leHQgPSA1O1xuICAgICAgICAgIHJldHVybiBwdXQodXBkT25lQ2F0ZWdvcnlJblN0b3JlQWN0aW9uKHJlc3BvbnNlLmNhdGVnb3J5KSk7XG5cbiAgICAgICAgY2FzZSA1OlxuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0Ny5zdG9wKCk7XG4gICAgICB9XG4gICAgfVxuICB9LCBfbWFya2VkNyk7XG59XG5cbmZ1bmN0aW9uIGZldGNoRGVsZXRlQ2F0ZWdvcnkoYWN0aW9uKSB7XG4gIHZhciByZXNwb25zZTtcbiAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBmZXRjaERlbGV0ZUNhdGVnb3J5JChfY29udGV4dDgpIHtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgc3dpdGNoIChfY29udGV4dDgucHJldiA9IF9jb250ZXh0OC5uZXh0KSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICBfY29udGV4dDgubmV4dCA9IDI7XG4gICAgICAgICAgcmV0dXJuIGNhbGwoYXBpLmRlbENhdGVnb3J5UmVxdWVzdCwgYWN0aW9uLnBheWxvYWQuY2F0ZWdvcnkpO1xuXG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0OC5zZW50O1xuICAgICAgICAgIF9jb250ZXh0OC5uZXh0ID0gNTtcbiAgICAgICAgICByZXR1cm4gcHV0KGRlbE9uZUNhdGVnb3J5SW5TdG9yZUFjdGlvbihyZXNwb25zZS5jYXRlZ29yeSkpO1xuXG4gICAgICAgIGNhc2UgNTpcbiAgICAgICAgY2FzZSBcImVuZFwiOlxuICAgICAgICAgIHJldHVybiBfY29udGV4dDguc3RvcCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgX21hcmtlZDgpO1xufVxuXG5mdW5jdGlvbiBmZXRjaEFsbExpc3RzV2l0aENhdGVnb3J5cyhhY3Rpb24pIHtcbiAgdmFyIHJlc3BvbnNlLCBkYXRhO1xuICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIGZldGNoQWxsTGlzdHNXaXRoQ2F0ZWdvcnlzJChfY29udGV4dDkpIHtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgc3dpdGNoIChfY29udGV4dDkucHJldiA9IF9jb250ZXh0OS5uZXh0KSB7XG4gICAgICAgIGNhc2UgMDpcbiAgICAgICAgICBfY29udGV4dDkubmV4dCA9IDI7XG4gICAgICAgICAgcmV0dXJuIGNhbGwoYXBpLmdldEFsbExpc3RzV2l0aENhdGVnb3J5cywgYWN0aW9uLnBheWxvYWQudXNlcklkQW5kRGF0ZVJhbmdlKTtcblxuICAgICAgICBjYXNlIDI6XG4gICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dDkuc2VudDtcbiAgICAgICAgICBkYXRhID0gbm9ybWFsaXplTGlzdHMocmVzcG9uc2UpO1xuICAgICAgICAgIF9jb250ZXh0OS5uZXh0ID0gNjtcbiAgICAgICAgICByZXR1cm4gcHV0KHVwZERhdGFJblN0b3JlQWN0aW9uKGRhdGEpKTtcblxuICAgICAgICBjYXNlIDY6XG4gICAgICAgIGNhc2UgXCJlbmRcIjpcbiAgICAgICAgICByZXR1cm4gX2NvbnRleHQ5LnN0b3AoKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIF9tYXJrZWQ5KTtcbn1cblxuZnVuY3Rpb24gZmV0Y2hBZGRMaXN0SXRlbShhY3Rpb24pIHtcbiAgdmFyIHJlc3BvbnNlO1xuICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIGZldGNoQWRkTGlzdEl0ZW0kKF9jb250ZXh0MTApIHtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgc3dpdGNoIChfY29udGV4dDEwLnByZXYgPSBfY29udGV4dDEwLm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIF9jb250ZXh0MTAubmV4dCA9IDI7XG4gICAgICAgICAgcmV0dXJuIGNhbGwoYXBpLmFkZExpc3RJdGVtUmVxdWVzdCwgYWN0aW9uLnBheWxvYWQubGlzdEl0ZW0pO1xuXG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0MTAuc2VudDtcbiAgICAgICAgICBfY29udGV4dDEwLm5leHQgPSA1O1xuICAgICAgICAgIHJldHVybiBwdXQoYWRkTGlzdEl0ZW1JblN0b3JlQWN0aW9uKHJlc3BvbnNlLmxpc3RJdGVtKSk7XG5cbiAgICAgICAgY2FzZSA1OlxuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTAuc3RvcCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgX21hcmtlZDEwKTtcbn1cblxuZnVuY3Rpb24gZmV0Y2hVcGRhdGVMaXN0SXRlbShhY3Rpb24pIHtcbiAgdmFyIHJlc3BvbnNlO1xuICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIGZldGNoVXBkYXRlTGlzdEl0ZW0kKF9jb250ZXh0MTEpIHtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgc3dpdGNoIChfY29udGV4dDExLnByZXYgPSBfY29udGV4dDExLm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIF9jb250ZXh0MTEubmV4dCA9IDI7XG4gICAgICAgICAgcmV0dXJuIGNhbGwoYXBpLnVwZExpc3RJdGVtUmVxdWVzdCwgYWN0aW9uLnBheWxvYWQubGlzdEl0ZW0pO1xuXG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0MTEuc2VudDtcbiAgICAgICAgICBfY29udGV4dDExLm5leHQgPSA1O1xuICAgICAgICAgIHJldHVybiBwdXQodXBkT25lTGlzdEl0ZW1JblN0b3JlQWN0aW9uKHJlc3BvbnNlLmxpc3RJdGVtKSk7XG5cbiAgICAgICAgY2FzZSA1OlxuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTEuc3RvcCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgX21hcmtlZDExKTtcbn1cblxuZnVuY3Rpb24gZmV0Y2hEZWxldGVMaXN0SXRlbShhY3Rpb24pIHtcbiAgdmFyIHJlc3BvbnNlO1xuICByZXR1cm4gX3JlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIGZldGNoRGVsZXRlTGlzdEl0ZW0kKF9jb250ZXh0MTIpIHtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgc3dpdGNoIChfY29udGV4dDEyLnByZXYgPSBfY29udGV4dDEyLm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIF9jb250ZXh0MTIubmV4dCA9IDI7XG4gICAgICAgICAgcmV0dXJuIGNhbGwoYXBpLmRlbExpc3RJdGVtUmVxdWVzdCwgYWN0aW9uLnBheWxvYWQubGlzdEl0ZW0pO1xuXG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0MTIuc2VudDtcbiAgICAgICAgICBfY29udGV4dDEyLm5leHQgPSA1O1xuICAgICAgICAgIHJldHVybiBwdXQoZGVsT25lTGlzdEl0ZW1JblN0b3JlQWN0aW9uKHJlc3BvbnNlLmxpc3RJdGVtKSk7XG5cbiAgICAgICAgY2FzZSA1OlxuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTIuc3RvcCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgX21hcmtlZDEyKTtcbn1cblxuZnVuY3Rpb24gc2FnYXMoKSB7XG4gIHJldHVybiBfcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gc2FnYXMkKF9jb250ZXh0MTMpIHtcbiAgICB3aGlsZSAoMSkge1xuICAgICAgc3dpdGNoIChfY29udGV4dDEzLnByZXYgPSBfY29udGV4dDEzLm5leHQpIHtcbiAgICAgICAgY2FzZSAwOlxuICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDI7XG4gICAgICAgICAgcmV0dXJuIHRha2VFdmVyeShcIkxPR0lOX1JFUVVFU1RcIiwgZmV0Y2hMb2dpbik7XG5cbiAgICAgICAgY2FzZSAyOlxuICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDQ7XG4gICAgICAgICAgcmV0dXJuIHRha2VFdmVyeShcIkFVVEhfUkVRVUVTVFwiLCBmZXRjaEF1dGgpO1xuXG4gICAgICAgIGNhc2UgNDpcbiAgICAgICAgICBfY29udGV4dDEzLm5leHQgPSA2O1xuICAgICAgICAgIHJldHVybiB0YWtlRXZlcnkoXCJSRUZSRVNIX1RPS0VOU19SRVFVRVNUXCIsIGZldGNoUmVmcmVzaFRva2Vucyk7XG5cbiAgICAgICAgY2FzZSA2OlxuICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDg7XG4gICAgICAgICAgcmV0dXJuIHRha2VFdmVyeShcIkxPR09VVF9SRVFVRVNUXCIsIGZldGNoTG9nb3V0KTtcblxuICAgICAgICBjYXNlIDg6XG4gICAgICAgICAgX2NvbnRleHQxMy5uZXh0ID0gMTA7XG4gICAgICAgICAgcmV0dXJuIHRha2VFdmVyeShcIkFERF9DQVRFR09SWV9SRVFVRVNUXCIsIGZldGNoQWRkQ2F0ZWdvcnkpO1xuXG4gICAgICAgIGNhc2UgMTA6XG4gICAgICAgICAgX2NvbnRleHQxMy5uZXh0ID0gMTI7XG4gICAgICAgICAgcmV0dXJuIHRha2VFdmVyeShcIkdFVF9DQVRFR09SWVNfUkVRVUVTVFwiLCBmZXRjaEFsbENhdGVnb3J5cyk7XG5cbiAgICAgICAgY2FzZSAxMjpcbiAgICAgICAgICBfY29udGV4dDEzLm5leHQgPSAxNDtcbiAgICAgICAgICByZXR1cm4gdGFrZUV2ZXJ5KFwiVVBEX09ORV9DQVRFR09SWV9SRVFVRVNUXCIsIGZldGNoVXBkYXRlQ2F0ZWdvcnkpO1xuXG4gICAgICAgIGNhc2UgMTQ6XG4gICAgICAgICAgX2NvbnRleHQxMy5uZXh0ID0gMTY7XG4gICAgICAgICAgcmV0dXJuIHRha2VFdmVyeShcIkdFVF9MSVNUU19SRVFVRVNUXCIsIGZldGNoQWxsTGlzdHNXaXRoQ2F0ZWdvcnlzKTtcblxuICAgICAgICBjYXNlIDE2OlxuICAgICAgICAgIF9jb250ZXh0MTMubmV4dCA9IDE4O1xuICAgICAgICAgIHJldHVybiB0YWtlRXZlcnkoXCJBRERfTElTVF9JVEVNX1JFUVVFU1RcIiwgZmV0Y2hBZGRMaXN0SXRlbSk7XG5cbiAgICAgICAgY2FzZSAxODpcbiAgICAgICAgICBfY29udGV4dDEzLm5leHQgPSAyMDtcbiAgICAgICAgICByZXR1cm4gdGFrZUV2ZXJ5KFwiREVMX09ORV9DQVRFR09SWV9SRVFVRVNUXCIsIGZldGNoRGVsZXRlQ2F0ZWdvcnkpO1xuXG4gICAgICAgIGNhc2UgMjA6XG4gICAgICAgICAgX2NvbnRleHQxMy5uZXh0ID0gMjI7XG4gICAgICAgICAgcmV0dXJuIHRha2VFdmVyeShcIlVQRF9PTkVfTElTVF9JVEVNX1JFUVVFU1RcIiwgZmV0Y2hVcGRhdGVMaXN0SXRlbSk7XG5cbiAgICAgICAgY2FzZSAyMjpcbiAgICAgICAgICBfY29udGV4dDEzLm5leHQgPSAyNDtcbiAgICAgICAgICByZXR1cm4gdGFrZUV2ZXJ5KFwiREVMX09ORV9MSVNUX0lURU1fUkVRVUVTVFwiLCBmZXRjaERlbGV0ZUxpc3RJdGVtKTtcblxuICAgICAgICBjYXNlIDI0OlxuICAgICAgICBjYXNlIFwiZW5kXCI6XG4gICAgICAgICAgcmV0dXJuIF9jb250ZXh0MTMuc3RvcCgpO1xuICAgICAgfVxuICAgIH1cbiAgfSwgX21hcmtlZDEzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgc2FnYXM7IiwiaW1wb3J0IHsgaW5pdGlhbFN0YXRlIH0gZnJvbSAnLi9pbmRleCc7XG5pbXBvcnQgeyBjbG9uZSB9IGZyb20gJ3JhbWRhJztcbmV4cG9ydCBmdW5jdGlvbiByZXR1cm5TdGF0ZVJlZHVjZXIoKSB7XG4gIHZhciBwcmV2U3RhdGUgPSBhcmd1bWVudHMubGVuZ3RoID4gMCAmJiBhcmd1bWVudHNbMF0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1swXSA6IGluaXRpYWxTdGF0ZTtcbiAgcmV0dXJuIHByZXZTdGF0ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiB1c2VyUmVkdWNlcigpIHtcbiAgdmFyIHByZXZTdGF0ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogaW5pdGlhbFN0YXRlO1xuICB2YXIgYWN0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG5cbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgXCJMT0dJTl9TVE9SRVwiOlxuICAgICAge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgIGlkOiBhY3Rpb24ucGF5bG9hZC5pZCxcbiAgICAgICAgICBuYW1lOiBhY3Rpb24ucGF5bG9hZC51c2VyTmFtZSxcbiAgICAgICAgICBpc0xvZ2luOiBhY3Rpb24ucGF5bG9hZC5pc0xvZ2luXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICBjYXNlIFwiTE9HT1VUX1NUT1JFXCI6XG4gICAgICB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgaWQ6IG51bGwsXG4gICAgICAgICAgbmFtZTogbnVsbCxcbiAgICAgICAgICBpc0xvZ2luOiBmYWxzZSxcbiAgICAgICAgICBsb2dpbkVycm9yTWVzOiBudWxsXG4gICAgICAgIH07XG4gICAgICB9XG5cbiAgICBjYXNlIFwiTE9HSU5fRVJST1JfU1RPUkVcIjpcbiAgICAgIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICBsb2dpbkVycm9yTWVzOiBhY3Rpb24ucGF5bG9hZC5lcnJvci5tZXNcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgfVxuXG4gIHJldHVybiBwcmV2U3RhdGU7XG59XG5leHBvcnQgZnVuY3Rpb24gdG9vZ2xlQ2F0ZWdvcnlSZWR1Y2VyKCkge1xuICB2YXIgcHJldlN0YXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBpbml0aWFsU3RhdGU7XG4gIHZhciBhY3Rpb24gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IGFyZ3VtZW50c1sxXSA6IHVuZGVmaW5lZDtcblxuICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgY2FzZSBcIlRPR0dMRV9DQVRFR09SWVNfVFlQRV9TVE9SRVwiOlxuICAgICAge1xuICAgICAgICByZXR1cm4gYWN0aW9uLnBheWxvYWQuY2F0ZWdvcnlUeXBlO1xuICAgICAgfVxuICB9XG5cbiAgcmV0dXJuIHByZXZTdGF0ZTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBkYXRhUmVkdWNlcigpIHtcbiAgdmFyIHByZXZTdGF0ZSA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogaW5pdGlhbFN0YXRlO1xuICB2YXIgYWN0aW9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG5cbiAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgIGNhc2UgXCJVUERfREFUQV9TVE9SRVwiOlxuICAgICAge1xuICAgICAgICByZXR1cm4gYWN0aW9uLnBheWxvYWQuY2F0ZWdvcnlzO1xuICAgICAgfVxuXG4gICAgY2FzZSBcIkFERF9ORVdfQ0FURUdPUllfU1RPUkVcIjpcbiAgICAgIHtcbiAgICAgICAgdmFyIGRhdGEgPSBjbG9uZShwcmV2U3RhdGUpO1xuICAgICAgICBpZiAoIWRhdGEuZW50aXRpZXMuY2F0ZWdvcnlzKSBkYXRhLmVudGl0aWVzLmNhdGVnb3J5cyA9IHt9O1xuICAgICAgICBkYXRhLmVudGl0aWVzLmNhdGVnb3J5c1thY3Rpb24ucGF5bG9hZC5jYXRlZ29yeS5pZF0gPSBhY3Rpb24ucGF5bG9hZC5jYXRlZ29yeTtcbiAgICAgICAgZGF0YS5yZXN1bHQuY2F0ZWdvcnlzLnB1c2goYWN0aW9uLnBheWxvYWQuY2F0ZWdvcnkuaWQpO1xuICAgICAgICByZXR1cm4gZGF0YTtcbiAgICAgIH1cblxuICAgIGNhc2UgXCJBRERfTkVXX0xJU1RfSVRFTV9TVE9SRVwiOlxuICAgICAge1xuICAgICAgICB2YXIgX2RhdGEgPSBjbG9uZShwcmV2U3RhdGUpO1xuXG4gICAgICAgIGlmICghX2RhdGEuZW50aXRpZXMubGlzdCkgX2RhdGEuZW50aXRpZXMubGlzdCA9IHt9O1xuICAgICAgICBfZGF0YS5lbnRpdGllcy5saXN0W2FjdGlvbi5wYXlsb2FkLmxpc3RJdGVtLmlkXSA9IGFjdGlvbi5wYXlsb2FkLmxpc3RJdGVtO1xuXG4gICAgICAgIF9kYXRhLmVudGl0aWVzLmNhdGVnb3J5c1thY3Rpb24ucGF5bG9hZC5saXN0SXRlbS5jYXRlZ29yeUlkXS5saXN0LnVuc2hpZnQoYWN0aW9uLnBheWxvYWQubGlzdEl0ZW0uaWQpO1xuXG4gICAgICAgIF9kYXRhLmVudGl0aWVzLmNhdGVnb3J5c1thY3Rpb24ucGF5bG9hZC5saXN0SXRlbS5jYXRlZ29yeUlkXS50b3RhbFN1bSArPSBhY3Rpb24ucGF5bG9hZC5saXN0SXRlbS5zdW07XG4gICAgICAgIHJldHVybiBfZGF0YTtcbiAgICAgIH1cblxuICAgIGNhc2UgXCJVUERfT05FX0NBVEVHT1JZX1NUT1JFXCI6XG4gICAgICB7XG4gICAgICAgIHZhciBfZGF0YTIgPSBjbG9uZShwcmV2U3RhdGUpO1xuXG4gICAgICAgIF9kYXRhMi5lbnRpdGllcy5jYXRlZ29yeXNbYWN0aW9uLnBheWxvYWQuY2F0ZWdvcnkuaWRdID0gYWN0aW9uLnBheWxvYWQuY2F0ZWdvcnk7XG4gICAgICAgIHJldHVybiBfZGF0YTI7XG4gICAgICB9XG5cbiAgICBjYXNlIFwiVVBEX09ORV9MSVNUX0lURU1fU1RPUkVcIjpcbiAgICAgIHtcbiAgICAgICAgdmFyIF9kYXRhMyA9IGNsb25lKHByZXZTdGF0ZSk7XG5cbiAgICAgICAgdmFyIGxpc3RJdGVtID0gYWN0aW9uLnBheWxvYWQubGlzdEl0ZW07XG4gICAgICAgIHZhciBwcmV2U3VtID0gcHJldlN0YXRlLmVudGl0aWVzLmxpc3RbbGlzdEl0ZW0uaWRdLnN1bTtcbiAgICAgICAgX2RhdGEzLmVudGl0aWVzLmxpc3RbbGlzdEl0ZW0uaWRdID0gbGlzdEl0ZW07XG4gICAgICAgIF9kYXRhMy5lbnRpdGllcy5jYXRlZ29yeXNbbGlzdEl0ZW0uY2F0ZWdvcnlJZF0udG90YWxTdW0gLT0gcHJldlN1bTtcbiAgICAgICAgX2RhdGEzLmVudGl0aWVzLmNhdGVnb3J5c1tsaXN0SXRlbS5jYXRlZ29yeUlkXS50b3RhbFN1bSArPSBsaXN0SXRlbS5zdW07XG4gICAgICAgIHJldHVybiBfZGF0YTM7XG4gICAgICB9XG5cbiAgICBjYXNlIFwiREVMX09ORV9DQVRFR09SWV9TVE9SRVwiOlxuICAgICAge1xuICAgICAgICB2YXIgX2RhdGE0ID0gY2xvbmUocHJldlN0YXRlKTtcblxuICAgICAgICBkZWxldGUgX2RhdGE0LmVudGl0aWVzLmNhdGVnb3J5c1thY3Rpb24ucGF5bG9hZC5jYXRlZ29yeS5pZF07XG4gICAgICAgIF9kYXRhNC5yZXN1bHQuY2F0ZWdvcnlzID0gX2RhdGE0LnJlc3VsdC5jYXRlZ29yeXMuZmlsdGVyKGZ1bmN0aW9uIChjYXRlZ29yeUlkKSB7XG4gICAgICAgICAgcmV0dXJuIGNhdGVnb3J5SWQgIT09IGFjdGlvbi5wYXlsb2FkLmNhdGVnb3J5LmlkO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIF9kYXRhNDtcbiAgICAgIH1cblxuICAgIGNhc2UgXCJERUxfT05FX0xJU1RfSVRFTV9TVE9SRVwiOlxuICAgICAge1xuICAgICAgICB2YXIgX2RhdGE1ID0gY2xvbmUocHJldlN0YXRlKTtcblxuICAgICAgICB2YXIgX2xpc3RJdGVtID0gYWN0aW9uLnBheWxvYWQubGlzdEl0ZW07XG5cbiAgICAgICAgdmFyIG5ld0xpc3RBcnIgPSBfZGF0YTUuZW50aXRpZXMuY2F0ZWdvcnlzW19saXN0SXRlbS5jYXRlZ29yeUlkXS5saXN0LmZpbHRlcihmdW5jdGlvbiAobGlzdElkKSB7XG4gICAgICAgICAgcmV0dXJuIGxpc3RJZCAhPT0gX2xpc3RJdGVtLmlkO1xuICAgICAgICB9KTtcblxuICAgICAgICBfZGF0YTUuZW50aXRpZXMuY2F0ZWdvcnlzW19saXN0SXRlbS5jYXRlZ29yeUlkXS5saXN0ID0gbmV3TGlzdEFycjtcbiAgICAgICAgX2RhdGE1LmVudGl0aWVzLmNhdGVnb3J5c1tfbGlzdEl0ZW0uY2F0ZWdvcnlJZF0udG90YWxTdW0gLT0gX2xpc3RJdGVtLnN1bTtcbiAgICAgICAgZGVsZXRlIF9kYXRhNS5lbnRpdGllcy5saXN0W19saXN0SXRlbS5pZF07XG4gICAgICAgIHJldHVybiBfZGF0YTU7XG4gICAgICB9XG4gIH1cblxuICByZXR1cm4gcHJldlN0YXRlO1xufSIsImltcG9ydCB7IGNyZWF0ZVN0b3JlLCBjb21iaW5lUmVkdWNlcnMsIGFwcGx5TWlkZGxld2FyZSB9IGZyb20gXCJyZWR1eFwiO1xuaW1wb3J0IGNyZWF0ZVNhZ2FNaWRkbGV3YXJlIGZyb20gJ3JlZHV4LXNhZ2EnO1xuaW1wb3J0IHNhZ2FzIGZyb20gJy4vc2FnYXMnO1xuaW1wb3J0IHsgcmV0dXJuU3RhdGVSZWR1Y2VyLCB0b29nbGVDYXRlZ29yeVJlZHVjZXIsIHVzZXJSZWR1Y2VyLCBkYXRhUmVkdWNlciB9IGZyb20gXCIuL3JlZHVjZXJzXCI7XG52YXIgc2FnYU1pZGRsZXdhcmUgPSBjcmVhdGVTYWdhTWlkZGxld2FyZSgpO1xuZXhwb3J0IHZhciBpbml0aWFsU3RhdGUgPSB7XG4gIHVzZXI6IHtcbiAgICBpZDogbnVsbCxcbiAgICBuYW1lOiBudWxsLFxuICAgIGlzTG9naW46IG51bGwsXG4gICAgbG9naW5FcnJvck1lczogbnVsbFxuICB9LFxuICB0b2dnbGVDYXRlZ29yeTogJ2V4cGVuc2UnLFxuICBtZW51OiBbe1xuICAgIHRpdGxlOiAn0K3RgtC+0YIg0LzQtdGB0Y/RhicsXG4gICAgbGluazogJ21vbnRoJ1xuICB9LCB7XG4gICAgdGl0bGU6ICfQn9GA0L7RiNC70YvQuSDQvNC10YHRj9GGJyxcbiAgICBsaW5rOiAnbGFzdC1tb250aCdcbiAgfSwge1xuICAgIHRpdGxlOiAn0KjQtdGB0YLRjCDQvNC10YHRj9GG0LXQsicsXG4gICAgbGluazogJ2hhbGYteWVhcidcbiAgfSwge1xuICAgIHRpdGxlOiAn0K3RgtC+0YIg0LPQvtC0JyxcbiAgICBsaW5rOiAneWVhcidcbiAgfV0sXG4gIGRhdGE6IG51bGxcbn07XG52YXIgcmVkdWNlciA9IGNvbWJpbmVSZWR1Y2Vycyh7XG4gIHVzZXI6IHVzZXJSZWR1Y2VyLFxuICBtZW51OiByZXR1cm5TdGF0ZVJlZHVjZXIsXG4gIGRhdGE6IGRhdGFSZWR1Y2VyLFxuICB0b2dnbGVDYXRlZ29yeTogdG9vZ2xlQ2F0ZWdvcnlSZWR1Y2VyXG59KTtcbmV4cG9ydCB2YXIgc3RvcmUgPSBjcmVhdGVTdG9yZShyZWR1Y2VyLCBpbml0aWFsU3RhdGUsIGFwcGx5TWlkZGxld2FyZShzYWdhTWlkZGxld2FyZSkpO1xuc2FnYU1pZGRsZXdhcmUucnVuKHNhZ2FzKTsiLCJpbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzXCI7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiO1xuaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZlwiO1xuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG52YXIgTWVudUl0ZW0gPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhNZW51SXRlbSwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTWVudUl0ZW0pO1xuXG4gIGZ1bmN0aW9uIE1lbnVJdGVtKHByb3BzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1lbnVJdGVtKTtcblxuICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTWVudUl0ZW0sIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge1xuICAgICAgICBocmVmOiBcIi9cIi5jb25jYXQodGhpcy5wcm9wcy5saW5rKSxcbiAgICAgICAgY2xhc3NOYW1lOiBcImJ1dHRvbiBidXR0b25fcGVyaW9kXCJcbiAgICAgIH0sIHRoaXMucHJvcHMudGl0bGUpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTWVudUl0ZW07XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5leHBvcnQgeyBNZW51SXRlbSBhcyBkZWZhdWx0IH07IiwiaW1wb3J0IE1lbnVJdGVtIGZyb20gJy4vY29tcG9uZW50JztcbmV4cG9ydCBkZWZhdWx0IE1lbnVJdGVtOyIsImltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgTWVudUl0ZW0gZnJvbSAnLi4vTWVudUl0ZW0nO1xuXG52YXIgTWVudUNvbXBvbmVudCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKE1lbnVDb21wb25lbnQsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKE1lbnVDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1lbnVDb21wb25lbnQocHJvcHMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTWVudUNvbXBvbmVudCk7XG5cbiAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKE1lbnVDb21wb25lbnQsIFt7XG4gICAga2V5OiBcInJlbmRlckl0ZW1zXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlckl0ZW1zKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMubWVudS5tYXAoZnVuY3Rpb24gKG1lbnVJdGVtLCBpKSB7XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChNZW51SXRlbSwge1xuICAgICAgICAgIGtleTogaSxcbiAgICAgICAgICB0aXRsZTogbWVudUl0ZW0udGl0bGUsXG4gICAgICAgICAgbGluazogbWVudUl0ZW0ubGlua1xuICAgICAgICB9KTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwibmF2XCIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwibWVudVwiXG4gICAgICB9LCB0aGlzLnJlbmRlckl0ZW1zKCkpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gTWVudUNvbXBvbmVudDtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IE1lbnVDb21wb25lbnQgYXMgZGVmYXVsdCB9OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IE1lbnVDb21wb25lbnQgZnJvbSAnLi9jb21wb25lbnQnO1xuXG52YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gbWFwU3RhdGVUb1Byb3BzKHN0YXRlKSB7XG4gIHJldHVybiB7XG4gICAgbWVudTogc3RhdGUubWVudVxuICB9O1xufTtcblxudmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCkge1xuICByZXR1cm4ge307XG59O1xuXG5leHBvcnQgdmFyIE1lbnUgPSBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShNZW51Q29tcG9uZW50KTsiLCJpbXBvcnQgeyBNZW51IH0gZnJvbSAnLi9jb250YWluZXInO1xuZXhwb3J0IGRlZmF1bHQgTWVudTsiLCJpbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzXCI7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiO1xuaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZlwiO1xuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG52YXIgVXNlckxvZ291dExpbmtDb21wb25lbnQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhVc2VyTG9nb3V0TGlua0NvbXBvbmVudCwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoVXNlckxvZ291dExpbmtDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIFVzZXJMb2dvdXRMaW5rQ29tcG9uZW50KHByb3BzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVzZXJMb2dvdXRMaW5rQ29tcG9uZW50KTtcblxuICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoVXNlckxvZ291dExpbmtDb21wb25lbnQsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwidXNlclwiXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJ1c2VyLW5hbWVcIlxuICAgICAgfSwgdGhpcy5wcm9wcy51c2VyTmFtZSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIHtcbiAgICAgICAgb25DbGljazogdGhpcy5wcm9wcy5sb2dvdXQsXG4gICAgICAgIGNsYXNzTmFtZTogXCJ1c2VyLWxvZ291dFwiXG4gICAgICB9LCBcIlxcdTA0MTJcXHUwNDRCXFx1MDQ0NVxcdTA0M0VcXHUwNDM0XCIpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gVXNlckxvZ291dExpbmtDb21wb25lbnQ7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5leHBvcnQgeyBVc2VyTG9nb3V0TGlua0NvbXBvbmVudCBhcyBkZWZhdWx0IH07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgVXNlckxvZ291dExpbmtDb21wb25lbnQgZnJvbSAnLi9jb21wb25lbnQnO1xuaW1wb3J0IHsgbG9nb3V0QWN0aW9uIH0gZnJvbSBcIi4uLy4uL3N0b3JlL2FjdGlvbnNcIjtcblxudmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSkge1xuICByZXR1cm4ge1xuICAgIHVzZXJOYW1lOiBzdGF0ZS51c2VyLm5hbWVcbiAgfTtcbn07XG5cbnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIHtcbiAgICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dCgpIHtcbiAgICAgIHJldHVybiBkaXNwYXRjaChsb2dvdXRBY3Rpb24oKSk7XG4gICAgfVxuICB9O1xufTtcblxuZXhwb3J0IHZhciBVc2VyTG9nb3V0TGluayA9IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKFVzZXJMb2dvdXRMaW5rQ29tcG9uZW50KTsiLCJpbXBvcnQgeyBVc2VyTG9nb3V0TGluayB9IGZyb20gJy4vY29udGFpbmVyJztcbmV4cG9ydCBkZWZhdWx0IFVzZXJMb2dvdXRMaW5rOyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcbmV4cG9ydCBmdW5jdGlvbiBTZXR1cExpbmsoKSB7XG4gIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwge1xuICAgIGhyZWY6IFwiL3NldHVwL1wiLFxuICAgIGNsYXNzTmFtZTogXCJidXR0b24tc2V0dXBcIlxuICB9LCBcIlxcdTA0MURcXHUwNDMwXFx1MDQ0MVxcdTA0NDJcXHUwNDQwXFx1MDQzRVxcdTA0MzlcXHUwNDNBXFx1MDQzOFwiKTtcbn0iLCJpbXBvcnQgeyBTZXR1cExpbmsgfSBmcm9tICcuL2NvbXBvbmVudCc7XG5leHBvcnQgZGVmYXVsdCBTZXR1cExpbms7IiwiaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm5cIjtcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2ZcIjtcblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCBNZW51IGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTWVudSc7XG5pbXBvcnQgVXNlckxvZ291dExpbmsgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Vc2VyTG9nb3V0TGluayc7XG5pbXBvcnQgU2V0dXBMaW5rIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvU2V0dXBMaW5rJztcblxudmFyIEhlYWRlciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoSGVhZGVyLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEhlYWRlcik7XG5cbiAgZnVuY3Rpb24gSGVhZGVyKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBIZWFkZXIpO1xuXG4gICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEhlYWRlciwgW3tcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImhlYWRlclwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJ0b3BcIlxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTWVudSwgbnVsbCksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIm1lbnUtc2V0dXBcIlxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU2V0dXBMaW5rLCBudWxsKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVXNlckxvZ291dExpbmssIG51bGwpKSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEhlYWRlcjtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgSGVhZGVyIGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5cbnZhciBDaGFydHNJdGVtID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQ2hhcnRzSXRlbSwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQ2hhcnRzSXRlbSk7XG5cbiAgZnVuY3Rpb24gQ2hhcnRzSXRlbShwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDaGFydHNJdGVtKTtcblxuICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgY2hhcnRTdHlsZU5hbWU6IFwid2lkdGhcIlxuICAgIH07XG4gICAgX3RoaXMudXBkYXRlQ2hhcnREaW1lbnNpb24gPSBfdGhpcy51cGRhdGVDaGFydERpbWVuc2lvbi5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQ2hhcnRzSXRlbSwgW3tcbiAgICBrZXk6IFwiY29tcG9uZW50RGlkTW91bnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICB0aGlzLnVwZGF0ZUNoYXJ0RGltZW5zaW9uKCk7XG4gICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB0aGlzLnVwZGF0ZUNoYXJ0RGltZW5zaW9uKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY29tcG9uZW50V2lsbFVubW91bnRcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInJlc2l6ZVwiLCB0aGlzLnVwZGF0ZUNoYXJ0RGltZW5zaW9uKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwidXBkYXRlQ2hhcnREaW1lbnNpb25cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdXBkYXRlQ2hhcnREaW1lbnNpb24oKSB7XG4gICAgICBpZiAod2luZG93LmlubmVyV2lkdGggPD0gNDgwKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIGNoYXJ0U3R5bGVOYW1lOiBcImhlaWdodFwiXG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgY2hhcnRTdHlsZU5hbWU6IFwid2lkdGhcIlxuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJjaGFydFwiXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIHN0eWxlOiBfZGVmaW5lUHJvcGVydHkoe30sIHRoaXMuc3RhdGUuY2hhcnRTdHlsZU5hbWUsIFwiXCIuY29uY2F0KHRoaXMucHJvcHMucGVyc2VudCwgXCIlXCIpKSxcbiAgICAgICAgY2xhc3NOYW1lOiBcImNoYXJ0LWxpbmUgY2hhcnQtbGluZV9cIi5jb25jYXQodGhpcy5wcm9wcy50eXBlKVxuICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImNoYXJ0LXR4dFwiXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJjaGFydC10eHRfdGl0bGVcIlxuICAgICAgfSwgdGhpcy5wcm9wcy50aXRsZSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImNoYXJ0LXR4dF92YWxcIlxuICAgICAgfSwgdGhpcy5wcm9wcy5zdW0sIFwiIFxcdTIwQkRcIikpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ2hhcnRzSXRlbTtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IENoYXJ0c0l0ZW0gYXMgZGVmYXVsdCB9OyIsImltcG9ydCBDaGFydHNJdGVtIGZyb20gJy4vY29tcG9uZW50JztcbmV4cG9ydCBkZWZhdWx0IENoYXJ0c0l0ZW07IiwiaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm5cIjtcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2ZcIjtcblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCBDaGFydHNJdGVtIGZyb20gJy4uL0NoYXJ0c0l0ZW0nO1xuXG52YXIgQ2hhcnRzQ29tcG9uZW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQ2hhcnRzQ29tcG9uZW50LCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihDaGFydHNDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIENoYXJ0c0NvbXBvbmVudChwcm9wcykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDaGFydHNDb21wb25lbnQpO1xuXG4gICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhDaGFydHNDb21wb25lbnQsIFt7XG4gICAga2V5OiBcInJlbmRlckl0ZW1zXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlckl0ZW1zKCkge1xuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2hhcnRzLm1hcChmdW5jdGlvbiAoY2hhcnRzSXRlbSwgaSkge1xuICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ2hhcnRzSXRlbSwge1xuICAgICAgICAgIGtleTogaSxcbiAgICAgICAgICB0aXRsZTogY2hhcnRzSXRlbS50aXRsZSxcbiAgICAgICAgICBzdW06IGNoYXJ0c0l0ZW0uc3VtLFxuICAgICAgICAgIHBlcnNlbnQ6IGNoYXJ0c0l0ZW0ucGVyc2VudCxcbiAgICAgICAgICB0eXBlOiBjaGFydHNJdGVtLnR5cGVcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIGlmICgnY2hhcnRzJyBpbiB0aGlzLnByb3BzKSB7XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgICAgY2xhc3NOYW1lOiBcImNoYXJ0c1wiXG4gICAgICAgIH0sIHRoaXMucmVuZGVySXRlbXMoKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBbXTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ2hhcnRzQ29tcG9uZW50O1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgQ2hhcnRzQ29tcG9uZW50IGFzIGRlZmF1bHQgfTsiLCJleHBvcnQgZnVuY3Rpb24gY2FsY0NoYXJ0cyhkYXRhKSB7XG4gIHZhciBpbmNvbWUgPSAwO1xuICB2YXIgZXhwZW5zZSA9IDA7XG4gIGRhdGEucmVzdWx0LmNhdGVnb3J5cy5tYXAoZnVuY3Rpb24gKGNhdGVnb3J5SWQpIHtcbiAgICBpZiAoZGF0YS5lbnRpdGllcy5jYXRlZ29yeXNbY2F0ZWdvcnlJZF0udHlwZSA9PT0gXCJpbmNvbWVcIikge1xuICAgICAgaW5jb21lICs9IGRhdGEuZW50aXRpZXMuY2F0ZWdvcnlzW2NhdGVnb3J5SWRdLnRvdGFsU3VtO1xuICAgIH0gZWxzZSB7XG4gICAgICBleHBlbnNlICs9IGRhdGEuZW50aXRpZXMuY2F0ZWdvcnlzW2NhdGVnb3J5SWRdLnRvdGFsU3VtO1xuICAgIH1cbiAgfSk7XG4gIHZhciBwZXJzZW50cyA9IGNhbGNDaGFydHNQZXJzZW50cyhpbmNvbWUsIGV4cGVuc2UpO1xuICByZXR1cm4gW3tcbiAgICB0aXRsZTogXCJcXHUwNDE0XFx1MDQzRVxcdTA0NDVcXHUwNDNFXFx1MDQzNFwiLFxuICAgIHR5cGU6IFwiaW5jb21lXCIsXG4gICAgc3VtOiBpbmNvbWUsXG4gICAgcGVyc2VudDogcGVyc2VudHMuaW5jb21lUGVyc2VudHNcbiAgfSwge1xuICAgIHRpdGxlOiBcIlxcdTA0MjBcXHUwNDMwXFx1MDQ0MVxcdTA0NDVcXHUwNDNFXFx1MDQzNFwiLFxuICAgIHR5cGU6IFwiZXhwZW5zZVwiLFxuICAgIHN1bTogZXhwZW5zZSxcbiAgICBwZXJzZW50OiBwZXJzZW50cy5leHBlbnNlUGVyc2VudHNcbiAgfSwge1xuICAgIHRpdGxlOiBcIlxcdTA0MURcXHUwNDMwXFx1MDQzQVxcdTA0M0VcXHUwNDNGXFx1MDQzQlxcdTA0MzVcXHUwNDNEXFx1MDQzOFxcdTA0NEZcIixcbiAgICB0eXBlOiBcInNhdmluZ3NcIixcbiAgICBzdW06IGluY29tZSAtIGV4cGVuc2UsXG4gICAgcGVyc2VudDogcGVyc2VudHMuc2F2aW5nc1BlcnNlbnRzXG4gIH1dO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNhbGNDaGFydHNQZXJzZW50cyhpbmNvbWUsIGV4cGVuc2UpIHtcbiAgdmFyIG9uZVBlcnNlbnQgPSAwO1xuICBpZiAoaW5jb21lICE9PSAwICYmIGV4cGVuc2UgIT09IDApIG9uZVBlcnNlbnQgPSBpbmNvbWUgPiBleHBlbnNlID8gMTAwIC8gaW5jb21lIDogMTAwIC8gZXhwZW5zZTtcbiAgdmFyIGluY29tZVBlcnNlbnRzID0gTWF0aC5jZWlsKGluY29tZSA+IGV4cGVuc2UgPyAxMDAgOiBpbmNvbWUgKiBvbmVQZXJzZW50KTtcbiAgdmFyIGV4cGVuc2VQZXJzZW50cyA9IE1hdGguY2VpbChpbmNvbWUgPCBleHBlbnNlID8gMTAwIDogZXhwZW5zZSAqIG9uZVBlcnNlbnQpO1xuICB2YXIgc2F2aW5nc1BlcnNlbnRzID0gTWF0aC5jZWlsKChpbmNvbWUgLSBleHBlbnNlKSAqIG9uZVBlcnNlbnQpO1xuICBpZiAoaW5jb21lUGVyc2VudHMgPCAxKSBpbmNvbWVQZXJzZW50cyA9IDE7XG4gIGlmIChleHBlbnNlUGVyc2VudHMgPCAxKSBleHBlbnNlUGVyc2VudHMgPSAxO1xuICBpZiAoc2F2aW5nc1BlcnNlbnRzIDwgMSkgc2F2aW5nc1BlcnNlbnRzID0gMTtcbiAgcmV0dXJuIHtcbiAgICBpbmNvbWVQZXJzZW50czogaW5jb21lUGVyc2VudHMsXG4gICAgZXhwZW5zZVBlcnNlbnRzOiBleHBlbnNlUGVyc2VudHMsXG4gICAgc2F2aW5nc1BlcnNlbnRzOiBzYXZpbmdzUGVyc2VudHNcbiAgfTtcbn0iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBDaGFydHNDb21wb25lbnQgZnJvbSAnLi9jb21wb25lbnQnO1xuaW1wb3J0IHsgY2FsY0NoYXJ0cyB9IGZyb20gJy4uLy4uL3V0aWxzL2NhbGNDaGFydHMnO1xuXG52YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gbWFwU3RhdGVUb1Byb3BzKHN0YXRlKSB7XG4gIGlmIChzdGF0ZS5kYXRhID09PSBudWxsKSByZXR1cm4ge307XG4gIHJldHVybiB7XG4gICAgY2hhcnRzOiBjYWxjQ2hhcnRzKHN0YXRlLmRhdGEpXG4gIH07XG59O1xuXG5leHBvcnQgdmFyIENoYXJ0cyA9IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzKShDaGFydHNDb21wb25lbnQpOyIsImltcG9ydCB7IENoYXJ0cyB9IGZyb20gJy4vY29udGFpbmVyJztcbmV4cG9ydCBkZWZhdWx0IENoYXJ0czsiLCJpbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzXCI7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiO1xuaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZlwiO1xuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG52YXIgUGx1c0J1dHRvbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFBsdXNCdXR0b24sIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKFBsdXNCdXR0b24pO1xuXG4gIGZ1bmN0aW9uIFBsdXNCdXR0b24ocHJvcHMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUGx1c0J1dHRvbik7XG5cbiAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKFBsdXNCdXR0b24sIFt7XG4gICAga2V5OiBcInJldHVybkNsYXNzTmFtZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXR1cm5DbGFzc05hbWUoKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy5pc09wZW4pIHtcbiAgICAgICAgcmV0dXJuICdtaW51cyc7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiAncGx1cyc7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwge1xuICAgICAgICBvbkNsaWNrOiB0aGlzLnByb3BzLnRvZ2dsZUNhbGxiYWNrLFxuICAgICAgICBjbGFzc05hbWU6IHRoaXMucmV0dXJuQ2xhc3NOYW1lKClcbiAgICAgIH0pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBQbHVzQnV0dG9uO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgUGx1c0J1dHRvbiBhcyBkZWZhdWx0IH07IiwiaW1wb3J0IFBsdXNCdXR0b24gZnJvbSAnLi9jb21wb25lbnQnO1xuZXhwb3J0IGRlZmF1bHQgUGx1c0J1dHRvbjsiLCJpbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzXCI7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiO1xuaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZlwiO1xuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG52YXIgU3VibWl0QnV0dG9uID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoU3VibWl0QnV0dG9uLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihTdWJtaXRCdXR0b24pO1xuXG4gIGZ1bmN0aW9uIFN1Ym1pdEJ1dHRvbihwcm9wcykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBTdWJtaXRCdXR0b24pO1xuXG4gICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTdWJtaXRCdXR0b24sIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwiYnV0dG9uIFwiLmNvbmNhdCh0aGlzLnByb3BzLmNsYXNzTmFtZSksXG4gICAgICAgIG9uQ2xpY2s6IHRoaXMucHJvcHMuY2FsbGJhY2tcbiAgICAgIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTdWJtaXRCdXR0b247XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5leHBvcnQgeyBTdWJtaXRCdXR0b24gYXMgZGVmYXVsdCB9OyIsImltcG9ydCBTdWJtaXRCdXR0b24gZnJvbSAnLi9jb21wb25lbnQnO1xuZXhwb3J0IGRlZmF1bHQgU3VibWl0QnV0dG9uOyIsImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHlcIjtcbmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHsgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyB9IGtleXMucHVzaC5hcHBseShrZXlzLCBzeW1ib2xzKTsgfSByZXR1cm4ga2V5czsgfVxuXG5mdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH1cblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCBTdWJtaXRCdXR0b24gZnJvbSBcIi4uL1N1Ym1pdEJ1dHRvblwiO1xuXG52YXIgQWRkRm9ybUNvbXBvbmVudCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKEFkZEZvcm1Db21wb25lbnQsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEFkZEZvcm1Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIEFkZEZvcm1Db21wb25lbnQocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQWRkRm9ybUNvbXBvbmVudCk7XG5cbiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTtcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHN1bTogJycsXG4gICAgICB0aXRsZTogJydcbiAgICB9O1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhBZGRGb3JtQ29tcG9uZW50LCBbe1xuICAgIGtleTogXCJoYW5kbGVDaGFuZ2VcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gaGFuZGxlQ2hhbmdlKGUsIHZhbCkge1xuICAgICAgdmFyIGZpZWxkVmFsdWUgPSB2YWwgPT09IFwic3VtXCIgPyBlLnRhcmdldC52YWx1ZS5yZXBsYWNlKC9cXEQvLCAnJykgOiBlLnRhcmdldC52YWx1ZTtcbiAgICAgIHRoaXMuc2V0U3RhdGUoX2RlZmluZVByb3BlcnR5KHt9LCB2YWwsIGZpZWxkVmFsdWUpKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiY2hlY2tBbmRBZGRMaXN0SXRlbVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjaGVja0FuZEFkZExpc3RJdGVtKCkge1xuICAgICAgaWYgKHRoaXMuc3RhdGUuc3VtICYmIHRoaXMuc3RhdGUudGl0bGUpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5hZGRMaXN0SXRlbShfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIHtcbiAgICAgICAgICBjYXRlZ29yeUlkOiB0aGlzLnByb3BzLmNhdGVnb3J5SWRcbiAgICAgICAgfSksIHRoaXMuc3RhdGUpKTtcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgc3VtOiAnJyxcbiAgICAgICAgICB0aXRsZTogJydcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucHJvcHMudG9nZ2xlQ2FsbGJhY2soKTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5wcm9wcy5pc09wZW4gPT09IHRydWUpIHtcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgICBjbGFzc05hbWU6IFwiYWRkLWZvcm1cIlxuICAgICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICAgICAgICB2YWx1ZTogdGhpcy5zdGF0ZS5zdW0sXG4gICAgICAgICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGUpIHtcbiAgICAgICAgICAgIHJldHVybiBfdGhpczIuaGFuZGxlQ2hhbmdlKGUsICdzdW0nKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHBsYWNlaG9sZGVyOiBcIlxcdTA0MjFcXHUwNDQzXFx1MDQzQ1xcdTA0M0NcXHUwNDMwXCIsXG4gICAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgICAgY2xhc3NOYW1lOiBcImFkZC1mb3JtX19zdW1cIlxuICAgICAgICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiLCB7XG4gICAgICAgICAgdmFsdWU6IHRoaXMuc3RhdGUuY29tbWVudCxcbiAgICAgICAgICBvbkNoYW5nZTogZnVuY3Rpb24gb25DaGFuZ2UoZSkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5oYW5kbGVDaGFuZ2UoZSwgJ3RpdGxlJyk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBwbGFjZWhvbGRlcjogXCJcXHUwNDFBXFx1MDQzRVxcdTA0M0NcXHUwNDNDXFx1MDQzNVxcdTA0M0RcXHUwNDQyXFx1MDQzMFxcdTA0NDBcXHUwNDM4XFx1MDQzOVwiLFxuICAgICAgICAgIGNsYXNzTmFtZTogXCJhZGQtZm9ybV9fdHh0XCJcbiAgICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFN1Ym1pdEJ1dHRvbiwge1xuICAgICAgICAgIGNsYXNzTmFtZTogJ2J1dHRvbl9hZGQtZm9ybScsXG4gICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCkge1xuICAgICAgICAgICAgcmV0dXJuIF90aGlzMi5jaGVja0FuZEFkZExpc3RJdGVtKCk7XG4gICAgICAgICAgfVxuICAgICAgICB9LCBcIlxcdTA0MTRcXHUwNDNFXFx1MDQzMVxcdTA0MzBcXHUwNDMyXFx1MDQzOFxcdTA0NDJcXHUwNDRDXCIpKTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEFkZEZvcm1Db21wb25lbnQ7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5leHBvcnQgeyBBZGRGb3JtQ29tcG9uZW50IGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBBZGRGb3JtQ29tcG9uZW50IGZyb20gJy4vY29tcG9uZW50JztcbmltcG9ydCB7IGFkZExpc3RJdGVtQWN0aW9uIH0gZnJvbSBcIi4uLy4uL3N0b3JlL2FjdGlvbnNcIjtcblxudmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSkge1xuICByZXR1cm4ge307XG59O1xuXG52YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoKSB7XG4gIHJldHVybiB7XG4gICAgYWRkTGlzdEl0ZW06IGZ1bmN0aW9uIGFkZExpc3RJdGVtKGxpc3RJdGVtKSB7XG4gICAgICByZXR1cm4gZGlzcGF0Y2goYWRkTGlzdEl0ZW1BY3Rpb24obGlzdEl0ZW0pKTtcbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnQgdmFyIEFkZEZvcm0gPSBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShBZGRGb3JtQ29tcG9uZW50KTsiLCJpbXBvcnQgeyBBZGRGb3JtIH0gZnJvbSAnLi9jb250YWluZXInO1xuZXhwb3J0IGRlZmF1bHQgQWRkRm9ybTsiLCJpbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzXCI7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiO1xuaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZlwiO1xuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG52YXIgTW9kYWxXaW5kb3dDb21wb25lbnQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhNb2RhbFdpbmRvd0NvbXBvbmVudCwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTW9kYWxXaW5kb3dDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIE1vZGFsV2luZG93Q29tcG9uZW50KHByb3BzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIE1vZGFsV2luZG93Q29tcG9uZW50KTtcblxuICAgIHJldHVybiBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcyk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoTW9kYWxXaW5kb3dDb21wb25lbnQsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwibW9kYWwtd2luZG93LWNvbnRhaW5lclwiXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJtb2RhbC13aW5kb3dcIlxuICAgICAgfSwgdGhpcy5wcm9wcy5jaGlsZHJlbikpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBNb2RhbFdpbmRvd0NvbXBvbmVudDtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IE1vZGFsV2luZG93Q29tcG9uZW50IGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBNb2RhbFdpbmRvd0NvbXBvbmVudCBmcm9tICcuL2NvbXBvbmVudCc7XG5cbnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUpIHtcbiAgcmV0dXJuIHt9O1xufTtcblxudmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCkge1xuICByZXR1cm4ge307XG59O1xuXG5leHBvcnQgdmFyIE1vZGFsV2luZG93ID0gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoTW9kYWxXaW5kb3dDb21wb25lbnQpOyIsImltcG9ydCB7IE1vZGFsV2luZG93IH0gZnJvbSAnLi9jb250YWluZXInO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWxXaW5kb3c7IiwiaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm5cIjtcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2ZcIjtcblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcblxudmFyIENsb3NlV2luZG93QnV0dG9uID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQ2xvc2VXaW5kb3dCdXR0b24sIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKENsb3NlV2luZG93QnV0dG9uKTtcblxuICBmdW5jdGlvbiBDbG9zZVdpbmRvd0J1dHRvbihwcm9wcykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDbG9zZVdpbmRvd0J1dHRvbik7XG5cbiAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENsb3NlV2luZG93QnV0dG9uLCBbe1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImNsb3NlLXdpbmRvdy1jb250YWluZXJcIlxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJidXR0b25cIiwge1xuICAgICAgICBvbkNsaWNrOiB0aGlzLnByb3BzLmNsb3NlQ2FsbGJhY2ssXG4gICAgICAgIGNsYXNzTmFtZTogXCJjbG9zZS13aW5kb3dcIlxuICAgICAgfSkpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBDbG9zZVdpbmRvd0J1dHRvbjtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IENsb3NlV2luZG93QnV0dG9uIGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgQ2xvc2VXaW5kb3dCdXR0b24gZnJvbSAnLi9jb21wb25lbnQnO1xuZXhwb3J0IGRlZmF1bHQgQ2xvc2VXaW5kb3dCdXR0b247IiwiaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm5cIjtcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2ZcIjtcblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCBNb2RhbFdpbmRvdyBmcm9tIFwiLi4vTW9kYWxXaW5kb3dcIjtcbmltcG9ydCBDbG9zZVdpbmRvd0J1dHRvbiBmcm9tIFwiLi4vQ2xvc2VXaW5kb3dCdXR0b25cIjtcbmltcG9ydCBTdWJtaXRCdXR0b24gZnJvbSBcIi4uL1N1Ym1pdEJ1dHRvblwiO1xuXG52YXIgQ29uZmlybURlbGV0ZVdpbmRvdyA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKENvbmZpcm1EZWxldGVXaW5kb3csIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKENvbmZpcm1EZWxldGVXaW5kb3cpO1xuXG4gIGZ1bmN0aW9uIENvbmZpcm1EZWxldGVXaW5kb3cocHJvcHMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ29uZmlybURlbGV0ZVdpbmRvdyk7XG5cbiAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENvbmZpcm1EZWxldGVXaW5kb3csIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTW9kYWxXaW5kb3csIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENsb3NlV2luZG93QnV0dG9uLCB7XG4gICAgICAgIGNsb3NlQ2FsbGJhY2s6IHRoaXMucHJvcHMuY2FuY2VsQ2FsbGJhY2tcbiAgICAgIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJkZWxldGUtd2luZG93LXRleHRcIlxuICAgICAgfSwgXCJcXHUwNDIzXFx1MDQzNFxcdTA0MzBcXHUwNDNCXFx1MDQzOFxcdTA0NDJcXHUwNDRDIFwiLCB0aGlzLnByb3BzLnRpdGxlLCBcIj9cIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIm1vZGFsLXdpbmRvd19fYnV0dG9uc1wiXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTdWJtaXRCdXR0b24sIHtcbiAgICAgICAgY2FsbGJhY2s6IHRoaXMucHJvcHMuZGVsZXRlQ2FsbGJhY2ssXG4gICAgICAgIGNsYXNzTmFtZTogXCJidXR0b25fbW9kYWwtd2luZG93XCJcbiAgICAgIH0sIFwiXFx1MDQyM1xcdTA0MzRcXHUwNDMwXFx1MDQzQlxcdTA0MzhcXHUwNDQyXFx1MDQ0Q1wiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU3VibWl0QnV0dG9uLCB7XG4gICAgICAgIGNhbGxiYWNrOiB0aGlzLnByb3BzLmNhbmNlbENhbGxiYWNrLFxuICAgICAgICBjbGFzc05hbWU6IFwiYnV0dG9uX21vZGFsLXdpbmRvd1wiXG4gICAgICB9LCBcIlxcdTA0MUVcXHUwNDQyXFx1MDQzQ1xcdTA0MzVcXHUwNDNEXFx1MDQzMFwiKSkpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ29uZmlybURlbGV0ZVdpbmRvdztcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IENvbmZpcm1EZWxldGVXaW5kb3cgYXMgZGVmYXVsdCB9OyIsImltcG9ydCBDb25maXJtRGVsZXRlV2luZG93IGZyb20gJy4vY29tcG9uZW50JztcbmV4cG9ydCBkZWZhdWx0IENvbmZpcm1EZWxldGVXaW5kb3c7IiwiaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eVwiO1xuaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvYXNzZXJ0VGhpc0luaXRpYWxpemVkXCI7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzXCI7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiO1xuaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZlwiO1xuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuaW1wb3J0IE1vZGFsV2luZG93IGZyb20gXCIuLi9Nb2RhbFdpbmRvd1wiO1xuaW1wb3J0IENsb3NlV2luZG93QnV0dG9uIGZyb20gXCIuLi9DbG9zZVdpbmRvd0J1dHRvblwiO1xuaW1wb3J0IFN1Ym1pdEJ1dHRvbiBmcm9tIFwiLi4vU3VibWl0QnV0dG9uXCI7XG5pbXBvcnQgQ29uZmlybURlbGV0ZVdpbmRvdyBmcm9tIFwiLi4vQ29uZmlybURlbGV0ZVdpbmRvd1wiO1xuXG52YXIgTGlzdEl0ZW1Db21wb25lbnQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhMaXN0SXRlbUNvbXBvbmVudCwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTGlzdEl0ZW1Db21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIExpc3RJdGVtQ29tcG9uZW50KHByb3BzKSB7XG4gICAgdmFyIF90aGlzO1xuXG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExpc3RJdGVtQ29tcG9uZW50KTtcblxuICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgaXNPcGVuRWRpdFdpbmRvdzogZmFsc2UsXG4gICAgICBpc09wZW5Db25maXJtRGVsZXRlOiBmYWxzZSxcbiAgICAgIHRpdGxlOiBfdGhpcy5wcm9wcy50aXRsZSxcbiAgICAgIHN1bTogX3RoaXMucHJvcHMuc3VtXG4gICAgfTtcbiAgICBfdGhpcy5vcGVuRWRpdFdpbmRvdyA9IF90aGlzLm9wZW5FZGl0V2luZG93LmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLmNsb3NlV2luZG93cyA9IF90aGlzLmNsb3NlV2luZG93cy5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5vcGVuQ29uZmlybURlbGV0ZVdpbmRvdyA9IF90aGlzLm9wZW5Db25maXJtRGVsZXRlV2luZG93LmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLnNhdmVMaXN0SXRlbSA9IF90aGlzLnNhdmVMaXN0SXRlbS5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5kZWxldGVMaXN0SXRlbSA9IF90aGlzLmRlbGV0ZUxpc3RJdGVtLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMaXN0SXRlbUNvbXBvbmVudCwgW3tcbiAgICBrZXk6IFwiaGFuZGxlQ2hhbmdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUNoYW5nZShlLCB2YWwpIHtcbiAgICAgIHZhciBmaWVsZFZhbHVlID0gdmFsID09PSBcInN1bVwiID8gZS50YXJnZXQudmFsdWUucmVwbGFjZSgvXFxELywgJycpIDogZS50YXJnZXQudmFsdWU7XG4gICAgICB0aGlzLnNldFN0YXRlKF9kZWZpbmVQcm9wZXJ0eSh7fSwgdmFsLCBmaWVsZFZhbHVlKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9wZW5FZGl0V2luZG93XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9wZW5FZGl0V2luZG93KCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGlzT3BlbkVkaXRXaW5kb3c6IHRydWUsXG4gICAgICAgIGlzT3BlbkNvbmZpcm1EZWxldGU6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwib3BlbkNvbmZpcm1EZWxldGVXaW5kb3dcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb3BlbkNvbmZpcm1EZWxldGVXaW5kb3coKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaXNPcGVuRWRpdFdpbmRvdzogZmFsc2UsXG4gICAgICAgIGlzT3BlbkNvbmZpcm1EZWxldGU6IHRydWVcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjbG9zZVdpbmRvd3NcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2xvc2VXaW5kb3dzKCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGlzT3BlbkVkaXRXaW5kb3c6IGZhbHNlLFxuICAgICAgICBpc09wZW5Db25maXJtRGVsZXRlOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNhdmVMaXN0SXRlbVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBzYXZlTGlzdEl0ZW0oKSB7XG4gICAgICB0aGlzLnByb3BzLnVwZExpc3RJdGVtKHtcbiAgICAgICAgaWQ6IHRoaXMucHJvcHMuaWQsXG4gICAgICAgIHRpdGxlOiB0aGlzLnN0YXRlLnRpdGxlLFxuICAgICAgICBzdW06IHRoaXMuc3RhdGUuc3VtXG4gICAgICB9KTtcbiAgICAgIHRoaXMuY2xvc2VXaW5kb3dzKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcImRlbGV0ZUxpc3RJdGVtXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlbGV0ZUxpc3RJdGVtKCkge1xuICAgICAgdGhpcy5wcm9wcy5kZWxMaXN0SXRlbSh7XG4gICAgICAgIGlkOiB0aGlzLnByb3BzLmlkLFxuICAgICAgICBzdW06IHRoaXMucHJvcHMuc3VtXG4gICAgICB9KTtcbiAgICAgIHRoaXMuY2xvc2VXaW5kb3dzKCk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgcmV0dXJuIFsvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5vcGVuRWRpdFdpbmRvdygpO1xuICAgICAgICB9LFxuICAgICAgICBrZXk6IHRoaXMucHJvcHMuaWQsXG4gICAgICAgIGNsYXNzTmFtZTogXCJjYXRlZ29yeS1pdGVtXCJcbiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImNhdGVnb3J5LWl0ZW1fX3R4dFwiXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJjYXRlZ29yeS1pdGVtX19kYXRlXCJcbiAgICAgIH0sIFwiMjAtMDEtMjAyMFwiKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwiY2F0ZWdvcnktaXRlbV9fZGVzY3JcIlxuICAgICAgfSwgdGhpcy5wcm9wcy50aXRsZSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJjYXRlZ29yeS1pdGVtX19zdW1cIlxuICAgICAgfSwgdGhpcy5wcm9wcy5zdW0sIFwiIFxcdTIwQkRcIikpLCB0aGlzLnN0YXRlLmlzT3BlbkVkaXRXaW5kb3cgJiYgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoTW9kYWxXaW5kb3csIHtcbiAgICAgICAga2V5OiBcImV3XCIuY29uY2F0KHRoaXMucHJvcHMuaWQpXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDbG9zZVdpbmRvd0J1dHRvbiwge1xuICAgICAgICBjbG9zZUNhbGxiYWNrOiB0aGlzLmNsb3NlV2luZG93c1xuICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgICAgICB2YWx1ZTogdGhpcy5zdGF0ZS5zdW0sXG4gICAgICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShlKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5oYW5kbGVDaGFuZ2UoZSwgJ3N1bScpO1xuICAgICAgICB9LFxuICAgICAgICBwbGFjZWhvbGRlcjogXCJcXHUwNDIxXFx1MDQ0M1xcdTA0M0NcXHUwNDNDXFx1MDQzMFwiLFxuICAgICAgICB0eXBlOiBcInRleHRcIixcbiAgICAgICAgY2xhc3NOYW1lOiBcImFkZC1mb3JtX19zdW1cIlxuICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwidGV4dGFyZWFcIiwge1xuICAgICAgICB2YWx1ZTogdGhpcy5zdGF0ZS50aXRsZSxcbiAgICAgICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGUpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLmhhbmRsZUNoYW5nZShlLCAndGl0bGUnKTtcbiAgICAgICAgfSxcbiAgICAgICAgcGxhY2Vob2xkZXI6IFwiXFx1MDQxQVxcdTA0M0VcXHUwNDNDXFx1MDQzQ1xcdTA0MzVcXHUwNDNEXFx1MDQ0MlxcdTA0MzBcXHUwNDQwXFx1MDQzOFxcdTA0MzlcIixcbiAgICAgICAgY2xhc3NOYW1lOiBcImFkZC1mb3JtX190eHRcIlxuICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIm1vZGFsLXdpbmRvd19fYnV0dG9uc1wiXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTdWJtaXRCdXR0b24sIHtcbiAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczIuc2F2ZUxpc3RJdGVtKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGNsYXNzTmFtZTogXCJidXR0b25fbW9kYWwtd2luZG93XCJcbiAgICAgIH0sIFwiXFx1MDQyMVxcdTA0M0VcXHUwNDQ1XFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDJcXHUwNDRDXCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTdWJtaXRCdXR0b24sIHtcbiAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczIub3BlbkNvbmZpcm1EZWxldGVXaW5kb3coKTtcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lOiBcImJ1dHRvbl9tb2RhbC13aW5kb3dcIlxuICAgICAgfSwgXCJcXHUwNDIzXFx1MDQzNFxcdTA0MzBcXHUwNDNCXFx1MDQzOFxcdTA0NDJcXHUwNDRDXCIpKSkpLCB0aGlzLnN0YXRlLmlzT3BlbkNvbmZpcm1EZWxldGUgJiYgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ29uZmlybURlbGV0ZVdpbmRvdywge1xuICAgICAgICBrZXk6IFwiZHdcIi5jb25jYXQodGhpcy5wcm9wcy5pZCksXG4gICAgICAgIGNhbmNlbENhbGxiYWNrOiBmdW5jdGlvbiBjYW5jZWxDYWxsYmFjaygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLmNsb3NlV2luZG93cygpO1xuICAgICAgICB9LFxuICAgICAgICBkZWxldGVDYWxsYmFjazogZnVuY3Rpb24gZGVsZXRlQ2FsbGJhY2soKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5kZWxldGVMaXN0SXRlbSgpO1xuICAgICAgICB9LFxuICAgICAgICB0aXRsZTogdGhpcy5wcm9wcy50aXRsZVxuICAgICAgfSldO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMaXN0SXRlbUNvbXBvbmVudDtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IExpc3RJdGVtQ29tcG9uZW50IGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBMaXN0SXRlbUNvbXBvbmVudCBmcm9tICcuL2NvbXBvbmVudCc7XG5pbXBvcnQgeyBkZWxMaXN0SXRlbUFjdGlvbiwgdXBkTGlzdEl0ZW1BY3Rpb24gfSBmcm9tIFwiLi4vLi4vc3RvcmUvYWN0aW9uc1wiO1xuXG52YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gbWFwU3RhdGVUb1Byb3BzKHN0YXRlKSB7XG4gIHJldHVybiB7fTtcbn07XG5cbnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIHtcbiAgICB1cGRMaXN0SXRlbTogZnVuY3Rpb24gdXBkTGlzdEl0ZW0obGlzdEl0ZW0pIHtcbiAgICAgIHJldHVybiBkaXNwYXRjaCh1cGRMaXN0SXRlbUFjdGlvbihsaXN0SXRlbSkpO1xuICAgIH0sXG4gICAgZGVsTGlzdEl0ZW06IGZ1bmN0aW9uIGRlbExpc3RJdGVtKGxpc3RJdGVtKSB7XG4gICAgICByZXR1cm4gZGlzcGF0Y2goZGVsTGlzdEl0ZW1BY3Rpb24obGlzdEl0ZW0pKTtcbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnQgdmFyIExpc3RJdGVtID0gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoTGlzdEl0ZW1Db21wb25lbnQpOyIsImltcG9ydCB7IExpc3RJdGVtIH0gZnJvbSAnLi9jb250YWluZXInO1xuZXhwb3J0IGRlZmF1bHQgTGlzdEl0ZW07IiwiaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm5cIjtcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2ZcIjtcblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCBMaXN0SXRlbSBmcm9tIFwiLi4vTGlzdEl0ZW1cIjtcblxudmFyIExpc3RDb21wb25lbnQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRQdXJlQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhMaXN0Q29tcG9uZW50LCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihMaXN0Q29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMaXN0Q29tcG9uZW50KHByb3BzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIExpc3RDb21wb25lbnQpO1xuXG4gICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMaXN0Q29tcG9uZW50LCBbe1xuICAgIGtleTogXCJyZW5kZXJJdGVtc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJJdGVtcygpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIGlmICh0aGlzLnByb3BzLmxpc3RJZEFyci5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJldHVybiB0aGlzLnByb3BzLmxpc3RJZEFyci5tYXAoZnVuY3Rpb24gKGxpc3RJdGVtSWQpIHtcbiAgICAgICAgICB2YXIgbGlzdEl0ZW0gPSBfdGhpcy5wcm9wcy5saXN0W2xpc3RJdGVtSWRdO1xuICAgICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMaXN0SXRlbSwge1xuICAgICAgICAgICAgaWQ6IGxpc3RJdGVtLmlkLFxuICAgICAgICAgICAga2V5OiBsaXN0SXRlbS5pZCxcbiAgICAgICAgICAgIHRpdGxlOiBsaXN0SXRlbS50aXRsZSxcbiAgICAgICAgICAgIHN1bTogbGlzdEl0ZW0uc3VtXG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICB9XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy5pc09wZW4gPT09IHRydWUpIHtcbiAgICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgICBjbGFzc05hbWU6IFwiY2F0ZWdvcnktbGlzdFwiXG4gICAgICAgIH0sIHRoaXMucmVuZGVySXRlbXMoKSk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMaXN0Q29tcG9uZW50O1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgTGlzdENvbXBvbmVudCBhcyBkZWZhdWx0IH07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgTGlzdENvbXBvbmVudCBmcm9tICcuL2NvbXBvbmVudCc7XG5cbnZhciBtYXBTdGF0ZVRvUHJvcHMgPSBmdW5jdGlvbiBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUpIHtcbiAgcmV0dXJuIHtcbiAgICBsaXN0OiBzdGF0ZS5kYXRhLmVudGl0aWVzLmxpc3RcbiAgfTtcbn07XG5cbnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIHt9O1xufTtcblxuZXhwb3J0IHZhciBMaXN0ID0gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoTGlzdENvbXBvbmVudCk7IiwiaW1wb3J0IHsgTGlzdCB9IGZyb20gJy4vY29udGFpbmVyJztcbmV4cG9ydCBkZWZhdWx0IExpc3Q7IiwiaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm5cIjtcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2ZcIjtcblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCBQbHVzQnV0dG9uIGZyb20gJy4uL1BsdXNCdXR0b24nO1xuaW1wb3J0IEFkZEZvcm0gZnJvbSAnLi4vQWRkRm9ybSc7XG5pbXBvcnQgTGlzdCBmcm9tICcuLi9MaXN0JztcblxudmFyIENhdGVnb3J5SXRlbSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKENhdGVnb3J5SXRlbSwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoQ2F0ZWdvcnlJdGVtKTtcblxuICBmdW5jdGlvbiBDYXRlZ29yeUl0ZW0ocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2F0ZWdvcnlJdGVtKTtcblxuICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgaXNPcGVuTGlzdDogZmFsc2UsXG4gICAgICBpc09wZW5Gb3JtOiBmYWxzZVxuICAgIH07XG4gICAgcmV0dXJuIF90aGlzO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENhdGVnb3J5SXRlbSwgW3tcbiAgICBrZXk6IFwidG9nZ2xlTGlzdFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiB0b2dnbGVMaXN0KCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGlzT3Blbkxpc3Q6ICF0aGlzLnN0YXRlLmlzT3Blbkxpc3RcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJ0b2dnbGVGb3JtXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHRvZ2dsZUZvcm0oKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaXNPcGVuRm9ybTogIXRoaXMuc3RhdGUuaXNPcGVuRm9ybVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMyID0gdGhpcztcblxuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImNhdGVnb3J5XCJcbiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImNhdGVnb3J5X19oZWFkZXJcIlxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczIudG9nZ2xlTGlzdCgpO1xuICAgICAgICB9LFxuICAgICAgICBjbGFzc05hbWU6IFwiY2F0ZWdvcnktdHh0IFwiLmNvbmNhdCh0aGlzLnN0YXRlLmlzT3Blbkxpc3QgPyBcImNhdGVnb3J5LXR4dF9yb3RhdGU5MFwiIDogXCJjYXRlZ29yeS10eHRfcm90YXRlMFwiKVxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwiY2F0ZWdvcnktdHh0X190aXRsZVwiXG4gICAgICB9LCB0aGlzLnByb3BzLnRpdGxlKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwiY2F0ZWdvcnktdHh0X19zdW1cIlxuICAgICAgfSwgdGhpcy5wcm9wcy5zdW0gPiAwID8gdGhpcy5wcm9wcy5zdW0gOiAwLCBcIiBcXHUyMEJEXCIpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwiYWRkLWJ1dHRvblwiXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChQbHVzQnV0dG9uLCB7XG4gICAgICAgIGlzT3BlbjogdGhpcy5zdGF0ZS5pc09wZW5Gb3JtLFxuICAgICAgICB0b2dnbGVDYWxsYmFjazogZnVuY3Rpb24gdG9nZ2xlQ2FsbGJhY2soKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi50b2dnbGVGb3JtKCk7XG4gICAgICAgIH1cbiAgICAgIH0pKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcImNhdGVnb3J5LWNvbnRlbnRcIlxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQWRkRm9ybSwge1xuICAgICAgICBjYXRlZ29yeVR5cGU6IHRoaXMucHJvcHMudHlwZSxcbiAgICAgICAgY2F0ZWdvcnlJZDogdGhpcy5wcm9wcy5pZCxcbiAgICAgICAgaXNPcGVuOiB0aGlzLnN0YXRlLmlzT3BlbkZvcm0sXG4gICAgICAgIHRvZ2dsZUNhbGxiYWNrOiBmdW5jdGlvbiB0b2dnbGVDYWxsYmFjaygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLnRvZ2dsZUZvcm0oKTtcbiAgICAgICAgfVxuICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExpc3QsIHtcbiAgICAgICAgbGlzdElkQXJyOiB0aGlzLnByb3BzLmxpc3RJZEFycixcbiAgICAgICAgaXNPcGVuOiB0aGlzLnN0YXRlLmlzT3Blbkxpc3RcbiAgICAgIH0pKSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIENhdGVnb3J5SXRlbTtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IENhdGVnb3J5SXRlbSBhcyBkZWZhdWx0IH07IiwiaW1wb3J0IENhdGVnb3J5SXRlbSBmcm9tICcuL2NvbXBvbmVudCc7XG5leHBvcnQgZGVmYXVsdCBDYXRlZ29yeUl0ZW07IiwiaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm5cIjtcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2ZcIjtcblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCBDYXRlZ29yeUl0ZW0gZnJvbSAnLi4vQ2F0ZWdvcnlJdGVtJztcblxudmFyIENhdGVnb3J5Q29tcG9uZW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQ2F0ZWdvcnlDb21wb25lbnQsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKENhdGVnb3J5Q29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBDYXRlZ29yeUNvbXBvbmVudChwcm9wcykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDYXRlZ29yeUNvbXBvbmVudCk7XG5cbiAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENhdGVnb3J5Q29tcG9uZW50LCBbe1xuICAgIGtleTogXCJyZXR1cm5DbGFzc05hbWVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmV0dXJuQ2xhc3NOYW1lKCkge1xuICAgICAgaWYgKHRoaXMucHJvcHMudHlwZSAhPT0gdGhpcy5wcm9wcy50b2dnbGVDYXRlZ29yeSkge1xuICAgICAgICByZXR1cm4gJ2RldGFpbHNfX2Jsb2NrX2hpZGUnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlckl0ZW1zXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlckl0ZW1zKCkge1xuICAgICAgdmFyIF90aGlzID0gdGhpcztcblxuICAgICAgcmV0dXJuIHRoaXMucHJvcHMuY2F0ZWdvcnlzSWRBcnIubWFwKGZ1bmN0aW9uIChjYXRlZ29yeUlkKSB7XG4gICAgICAgIHZhciBjYXRlZ29yeSA9IF90aGlzLnByb3BzLmNhdGVnb3J5c1tjYXRlZ29yeUlkXTtcblxuICAgICAgICBpZiAoY2F0ZWdvcnkudHlwZSA9PT0gX3RoaXMucHJvcHMudHlwZSkge1xuICAgICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDYXRlZ29yeUl0ZW0sIHtcbiAgICAgICAgICAgIGtleTogY2F0ZWdvcnkuaWQsXG4gICAgICAgICAgICBpZDogY2F0ZWdvcnkuaWQsXG4gICAgICAgICAgICB0aXRsZTogY2F0ZWdvcnkudGl0bGUsXG4gICAgICAgICAgICB0eXBlOiBjYXRlZ29yeS50eXBlLFxuICAgICAgICAgICAgc3VtOiBjYXRlZ29yeS50b3RhbFN1bSxcbiAgICAgICAgICAgIGxpc3RJZEFycjogY2F0ZWdvcnkubGlzdFxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIGlmICgnY2F0ZWdvcnlzJyBpbiB0aGlzLnByb3BzKSB7XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgICAgY2xhc3NOYW1lOiBcImRldGFpbHNfX2Jsb2NrIFwiLmNvbmNhdCh0aGlzLnJldHVybkNsYXNzTmFtZSgpKVxuICAgICAgICB9LCB0aGlzLnJlbmRlckl0ZW1zKCkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIENhdGVnb3J5Q29tcG9uZW50O1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgQ2F0ZWdvcnlDb21wb25lbnQgYXMgZGVmYXVsdCB9OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IENhdGVnb3J5Q29tcG9uZW50IGZyb20gJy4vY29tcG9uZW50JztcblxudmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSkge1xuICBpZiAoc3RhdGUuZGF0YSA9PT0gbnVsbCkgcmV0dXJuIHt9O1xuICByZXR1cm4ge1xuICAgIGNhdGVnb3J5czogc3RhdGUuZGF0YS5lbnRpdGllcy5jYXRlZ29yeXMsXG4gICAgY2F0ZWdvcnlzSWRBcnI6IHN0YXRlLmRhdGEucmVzdWx0LmNhdGVnb3J5cyxcbiAgICB0b2dnbGVDYXRlZ29yeTogc3RhdGUudG9nZ2xlQ2F0ZWdvcnlcbiAgfTtcbn07XG5cbnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIHt9O1xufTtcblxuZXhwb3J0IHZhciBDYXRlZ29yeSA9IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKENhdGVnb3J5Q29tcG9uZW50KTsiLCJpbXBvcnQgeyBDYXRlZ29yeSB9IGZyb20gJy4vY29udGFpbmVyJztcbmV4cG9ydCBkZWZhdWx0IENhdGVnb3J5OyIsImltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgU3VibWl0QnV0dG9uIGZyb20gJy4uL1N1Ym1pdEJ1dHRvbic7XG5cbnZhciBUb2dnbGVDYXRlZ29yeUNvbXBvbmVudCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFRvZ2dsZUNhdGVnb3J5Q29tcG9uZW50LCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihUb2dnbGVDYXRlZ29yeUNvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gVG9nZ2xlQ2F0ZWdvcnlDb21wb25lbnQocHJvcHMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgVG9nZ2xlQ2F0ZWdvcnlDb21wb25lbnQpO1xuXG4gICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhUb2dnbGVDYXRlZ29yeUNvbXBvbmVudCwgW3tcbiAgICBrZXk6IFwicmV0dXJuQ2xhc3NOYW1lXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJldHVybkNsYXNzTmFtZSh0eXBlKSB7XG4gICAgICBpZiAodHlwZSA9PT0gdGhpcy5wcm9wcy50b2dnbGVDYXRlZ29yeSkge1xuICAgICAgICByZXR1cm4gJ2J1dHRvbl9hY3RpdmUnO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gJyc7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICB2YXIgX3RoaXMgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJtZW51X19kZXRhaWxzIG1lbnVfX2RldGFpbHNfc2VhcmNoXCJcbiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU3VibWl0QnV0dG9uLCB7XG4gICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMucHJvcHMudG9nZ2xlKCdleHBlbnNlJyk7XG4gICAgICAgIH0sXG4gICAgICAgIGNsYXNzTmFtZTogXCJidXR0b25fZGV0YWlscyBcIi5jb25jYXQodGhpcy5yZXR1cm5DbGFzc05hbWUoJ2V4cGVuc2UnKSlcbiAgICAgIH0sIFwiXFx1MDQyMFxcdTA0MzBcXHUwNDQxXFx1MDQ0NVxcdTA0M0VcXHUwNDM0XFx1MDQ0QlwiKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU3VibWl0QnV0dG9uLCB7XG4gICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMucHJvcHMudG9nZ2xlKCdpbmNvbWUnKTtcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lOiBcImJ1dHRvbl9kZXRhaWxzIFwiLmNvbmNhdCh0aGlzLnJldHVybkNsYXNzTmFtZSgnaW5jb21lJykpXG4gICAgICB9LCBcIlxcdTA0MTRcXHUwNDNFXFx1MDQ0NVxcdTA0M0VcXHUwNDM0XFx1MDQ0QlwiKSkpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBUb2dnbGVDYXRlZ29yeUNvbXBvbmVudDtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IFRvZ2dsZUNhdGVnb3J5Q29tcG9uZW50IGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IHRvZ2dsZUNhdGVnb3J5QWN0aW9uIH0gZnJvbSAnLi4vLi4vc3RvcmUvYWN0aW9ucyc7XG5pbXBvcnQgVG9nZ2xlQ2F0ZWdvcnlDb21wb25lbnQgZnJvbSAnLi9jb21wb25lbnQnO1xuXG52YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gbWFwU3RhdGVUb1Byb3BzKHN0YXRlKSB7XG4gIHJldHVybiB7XG4gICAgdG9nZ2xlQ2F0ZWdvcnk6IHN0YXRlLnRvZ2dsZUNhdGVnb3J5XG4gIH07XG59O1xuXG52YXIgbWFwRGlzcGF0Y2hUb1Byb3BzID0gZnVuY3Rpb24gbWFwRGlzcGF0Y2hUb1Byb3BzKGRpc3BhdGNoKSB7XG4gIHJldHVybiB7XG4gICAgdG9nZ2xlOiBmdW5jdGlvbiB0b2dnbGUoY2F0ZWdvcnlUeXBlKSB7XG4gICAgICByZXR1cm4gZGlzcGF0Y2godG9nZ2xlQ2F0ZWdvcnlBY3Rpb24oY2F0ZWdvcnlUeXBlKSk7XG4gICAgfVxuICB9O1xufTtcblxuZXhwb3J0IHZhciBUb2dnbGVDYXRlZ29yeSA9IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKFRvZ2dsZUNhdGVnb3J5Q29tcG9uZW50KTsiLCJpbXBvcnQgeyBUb2dnbGVDYXRlZ29yeSB9IGZyb20gJy4vY29udGFpbmVyJztcbmV4cG9ydCBkZWZhdWx0IFRvZ2dsZUNhdGVnb3J5OyIsImV4cG9ydCBmdW5jdGlvbiBjYWxjRGF0ZVJhbmdlKHBlcmlvZCkge1xuICB2YXIgZGF0ZSA9IG5ldyBEYXRlKCk7XG4gIHZhciBkYXRlTWluO1xuICB2YXIgZGF0ZU1heDtcbiAgdmFyIHllYXJNaW47XG4gIHZhciBtb250aE1pbjtcblxuICBzd2l0Y2ggKHBlcmlvZCkge1xuICAgIGNhc2UgJ21vbnRoJzpcbiAgICAgIGRhdGVNaW4gPSBuZXcgRGF0ZShkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSwgMSk7XG4gICAgICBkYXRlTWF4ID0gbmV3IERhdGUoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAnbGFzdC1tb250aCc6XG4gICAgICB5ZWFyTWluID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgbW9udGhNaW4gPSBkYXRlLmdldE1vbnRoKCkgLSAxO1xuXG4gICAgICBpZiAobW9udGhNaW4gPCAwKSB7XG4gICAgICAgIC0teWVhck1pbjtcbiAgICAgICAgbW9udGhNaW4gPSAxMTtcbiAgICAgIH1cblxuICAgICAgZGF0ZU1pbiA9IG5ldyBEYXRlKHllYXJNaW4sIG1vbnRoTWluLCAxKTtcbiAgICAgIGRhdGVNYXggPSBuZXcgRGF0ZShkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSwgMSk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2hhbGYteWVhcic6XG4gICAgICB5ZWFyTWluID0gZGF0ZS5nZXRGdWxsWWVhcigpO1xuICAgICAgbW9udGhNaW4gPSBkYXRlLmdldE1vbnRoKCkgLSA2O1xuXG4gICAgICBpZiAobW9udGhNaW4gPCAwKSB7XG4gICAgICAgIC0teWVhck1pbjtcbiAgICAgICAgbW9udGhNaW4gPSAxMSAtIC1tb250aE1pbjtcbiAgICAgIH1cblxuICAgICAgZGF0ZU1pbiA9IG5ldyBEYXRlKHllYXJNaW4sIG1vbnRoTWluLCAxKTtcbiAgICAgIGRhdGVNYXggPSBuZXcgRGF0ZShkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSwgMSk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3llYXInOlxuICAgICAgZGF0ZU1pbiA9IG5ldyBEYXRlKGRhdGUuZ2V0RnVsbFllYXIoKSwgMCwgMSk7XG4gICAgICBkYXRlTWF4ID0gbmV3IERhdGUoKTtcbiAgICAgIGJyZWFrO1xuXG4gICAgZGVmYXVsdDpcbiAgICAgIGRhdGVNaW4gPSBuZXcgRGF0ZShkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSwgMSk7XG4gICAgICBkYXRlTWF4ID0gbmV3IERhdGUoKTtcbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZGF0ZU1pbjogZGF0ZU1pbixcbiAgICBkYXRlTWF4OiBkYXRlTWF4XG4gIH07XG59IiwiaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9kZWZpbmVQcm9wZXJ0eVwiO1xuaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm5cIjtcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2ZcIjtcblxuZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgeyBzeW1ib2xzID0gc3ltYm9scy5maWx0ZXIoZnVuY3Rpb24gKHN5bSkgeyByZXR1cm4gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihvYmplY3QsIHN5bSkuZW51bWVyYWJsZTsgfSk7IH0ga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9XG5cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfVxuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuaW1wb3J0IENhdGVnb3J5IGZyb20gJy4uL0NhdGVnb3J5JztcbmltcG9ydCBUb2dnbGVDYXRlZ29yeSBmcm9tIFwiLi4vVG9nZ2xlQ2F0ZWdvcnlcIjtcbmltcG9ydCB7IGNhbGNEYXRlUmFuZ2UgfSBmcm9tIFwiLi4vLi4vdXRpbHMvY2FsY0RhdGVSYW5nZVwiO1xuXG52YXIgQ2F0ZWdvcnlzQ29tcG9uZW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQ2F0ZWdvcnlzQ29tcG9uZW50LCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihDYXRlZ29yeXNDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIENhdGVnb3J5c0NvbXBvbmVudChwcm9wcykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDYXRlZ29yeXNDb21wb25lbnQpO1xuXG4gICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhDYXRlZ29yeXNDb21wb25lbnQsIFt7XG4gICAga2V5OiBcImNvbXBvbmVudERpZE1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgdmFyIGRhdGVSYW5nZSA9IGNhbGNEYXRlUmFuZ2UodGhpcy5wcm9wcy5kYXRlUGVyaW9kKTtcbiAgICAgIHRoaXMucHJvcHMuZ2V0QWxsTGlzdHNXaXRoQ2F0ZWdvcnlzKF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwge1xuICAgICAgICB1c2VySWQ6IHRoaXMucHJvcHMudXNlci5pZFxuICAgICAgfSksIGRhdGVSYW5nZSkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIFsvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChUb2dnbGVDYXRlZ29yeSwge1xuICAgICAgICBrZXk6IFwiY3QwMVwiXG4gICAgICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBrZXk6IFwiY3QwMlwiLFxuICAgICAgICBjbGFzc05hbWU6IFwiZGV0YWlscyBkZXRhaWxzX2NhdGVnb3J5c1wiXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDYXRlZ29yeSwge1xuICAgICAgICB0eXBlOiBcImV4cGVuc2VcIlxuICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENhdGVnb3J5LCB7XG4gICAgICAgIHR5cGU6IFwiaW5jb21lXCJcbiAgICAgIH0pKV07XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIENhdGVnb3J5c0NvbXBvbmVudDtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IENhdGVnb3J5c0NvbXBvbmVudCBhcyBkZWZhdWx0IH07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgQ2F0ZWdvcnlzQ29tcG9uZW50IGZyb20gJy4vY29tcG9uZW50JztcbmltcG9ydCB7IGdldEFsbExpc3RzV2l0aENhdGVnb3J5c0FjdGlvbiB9IGZyb20gJy4uLy4uL3N0b3JlL2FjdGlvbnMnO1xuXG52YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gbWFwU3RhdGVUb1Byb3BzKHN0YXRlKSB7XG4gIHJldHVybiB7XG4gICAgdXNlcjogc3RhdGUudXNlclxuICB9O1xufTtcblxudmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCkge1xuICByZXR1cm4ge1xuICAgIGdldEFsbExpc3RzV2l0aENhdGVnb3J5czogZnVuY3Rpb24gZ2V0QWxsTGlzdHNXaXRoQ2F0ZWdvcnlzKHVzZXJJZEFuZERhdGVSYW5nZSkge1xuICAgICAgcmV0dXJuIGRpc3BhdGNoKGdldEFsbExpc3RzV2l0aENhdGVnb3J5c0FjdGlvbih1c2VySWRBbmREYXRlUmFuZ2UpKTtcbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnQgdmFyIENhdGVnb3J5cyA9IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKENhdGVnb3J5c0NvbXBvbmVudCk7IiwiaW1wb3J0IHsgQ2F0ZWdvcnlzIH0gZnJvbSAnLi9jb250YWluZXInO1xuZXhwb3J0IGRlZmF1bHQgQ2F0ZWdvcnlzOyIsImltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgSGVhZGVyIGZyb20gJy4uL2hlYWRlcic7XG5pbXBvcnQgQ2hhcnRzIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvQ2hhcnRzJztcbmltcG9ydCBDYXRlZ29yeXMgZnJvbSAnLi4vLi4vY29tcG9uZW50cy9DYXRlZ29yeXMnO1xuXG52YXIgSG9tZSA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoSG9tZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihIb21lKTtcblxuICBmdW5jdGlvbiBIb21lKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBIb21lKTtcblxuICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhIb21lLCBbe1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEhlYWRlciwgbnVsbCksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwic2VjdGlvblwiLCBudWxsLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDaGFydHMsIG51bGwpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzZWN0aW9uXCIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENhdGVnb3J5cywge1xuICAgICAgICBkYXRlUGVyaW9kOiB0aGlzLnByb3BzLnVybFBhcmFtcy5wZXJpb2RcbiAgICAgIH0pKSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIEhvbWU7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IEhvbWUgYXMgZGVmYXVsdCB9OyIsImltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5cbnZhciBSYWRpb0J1dHRvbiA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFJhZGlvQnV0dG9uLCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihSYWRpb0J1dHRvbik7XG5cbiAgZnVuY3Rpb24gUmFkaW9CdXR0b24ocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmFkaW9CdXR0b24pO1xuXG4gICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcyk7XG4gICAgX3RoaXMuZGVmYXVsdENoZWNrZWQgPSBfdGhpcy5wcm9wcy5kZWZhdWx0Q2hlY2tlZCB8fCBmYWxzZTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUmFkaW9CdXR0b24sIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gWy8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgICAgICBrZXk6ICdyYjAxJyxcbiAgICAgICAgY2xhc3NOYW1lOiBcInJhZGlvLWJ1dHRvblwiLFxuICAgICAgICB0eXBlOiBcInJhZGlvXCIsXG4gICAgICAgIGlkOiB0aGlzLnByb3BzLmlkLFxuICAgICAgICBuYW1lOiB0aGlzLnByb3BzLm5hbWUsXG4gICAgICAgIHZhbHVlOiB0aGlzLnByb3BzLnZhbHVlLFxuICAgICAgICBkZWZhdWx0Q2hlY2tlZDogdGhpcy5kZWZhdWx0Q2hlY2tlZCxcbiAgICAgICAgb25DbGljazogdGhpcy5wcm9wcy5jYWxsYmFja1xuICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwibGFiZWxcIiwge1xuICAgICAgICBrZXk6ICdyYjAyJyxcbiAgICAgICAgY2xhc3NOYW1lOiBcIlwiLmNvbmNhdCh0aGlzLnByb3BzLmNsYXNzTmFtZSwgXCIgcmFkaW8tYnV0dG9uLWxhYmxlXCIpLFxuICAgICAgICBodG1sRm9yOiB0aGlzLnByb3BzLmlkXG4gICAgICB9LCB0aGlzLnByb3BzLmNoaWxkcmVuKV07XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFJhZGlvQnV0dG9uO1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgUmFkaW9CdXR0b24gYXMgZGVmYXVsdCB9OyIsImltcG9ydCBSYWRpb0J1dHRvbiBmcm9tICcuL2NvbXBvbmVudCc7XG5leHBvcnQgZGVmYXVsdCBSYWRpb0J1dHRvbjsiLCJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgUmFkaW9CdXR0b24gZnJvbSBcIi4uL1JhZGlvQnV0dG9uXCI7XG5pbXBvcnQgU3VibWl0QnV0dG9uIGZyb20gXCIuLi9TdWJtaXRCdXR0b25cIjtcblxudmFyIEFkZENhdGVnb3J5Q29tcG9uZW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQWRkQ2F0ZWdvcnlDb21wb25lbnQsIF9SZWFjdCRQdXJlQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEFkZENhdGVnb3J5Q29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBBZGRDYXRlZ29yeUNvbXBvbmVudChwcm9wcykge1xuICAgIHZhciBfdGhpcztcblxuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBZGRDYXRlZ29yeUNvbXBvbmVudCk7XG5cbiAgICBfdGhpcyA9IF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTtcbiAgICBfdGhpcy5zdGF0ZSA9IHtcbiAgICAgIHR5cGU6ICdleHBlbnNlJyxcbiAgICAgIHRpdGxlOiAnJyxcbiAgICAgIHVzZXJJZDogcHJvcHMudXNlci5pZFxuICAgIH07XG4gICAgX3RoaXMuaGFuZGxlQ2hhbmdlID0gX3RoaXMuaGFuZGxlQ2hhbmdlLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLmFkZENhdGVnb3J5QW5kUmVzZXRTdGF0ZSA9IF90aGlzLmFkZENhdGVnb3J5QW5kUmVzZXRTdGF0ZS5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQWRkQ2F0ZWdvcnlDb21wb25lbnQsIFt7XG4gICAga2V5OiBcImhhbmRsZUNoYW5nZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoZSwgdmFsKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKF9kZWZpbmVQcm9wZXJ0eSh7fSwgdmFsLCBlLnRhcmdldC52YWx1ZSkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJhZGRDYXRlZ29yeUFuZFJlc2V0U3RhdGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gYWRkQ2F0ZWdvcnlBbmRSZXNldFN0YXRlKGNhdGVnb3J5KSB7XG4gICAgICBpZiAodGhpcy5zdGF0ZS50aXRsZSAhPT0gJycpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5hZGRDYXRlZ29yeShjYXRlZ29yeSk7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgIHRpdGxlOiAnJ1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJmb3JtXCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcInNldHVwLWZvcm1cIixcbiAgICAgICAgb25TdWJtaXQ6IGZ1bmN0aW9uIG9uU3VibWl0KGUpIHtcbiAgICAgICAgICByZXR1cm4gZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB9XG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSYWRpb0J1dHRvbiwge1xuICAgICAgICBjbGFzc05hbWU6ICdyYWRpby1zZXR1cC1sYWJsZScsXG4gICAgICAgIGlkOiAncmFkaW8tZXhwZW5zZScsXG4gICAgICAgIG5hbWU6ICdjYXRlZ29yeS10eXBlJyxcbiAgICAgICAgdmFsdWU6ICdleHBlbnNlJyxcbiAgICAgICAgZGVmYXVsdENoZWNrZWQ6IHRydWUsXG4gICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjayhlKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5oYW5kbGVDaGFuZ2UoZSwgJ3R5cGUnKTtcbiAgICAgICAgfVxuICAgICAgfSwgXCJcXHUwNDIwXFx1MDQzMFxcdTA0NDFcXHUwNDQ1XFx1MDQzRVxcdTA0MzRcIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJhZGlvQnV0dG9uLCB7XG4gICAgICAgIGNsYXNzTmFtZTogJ3JhZGlvLXNldHVwLWxhYmxlJyxcbiAgICAgICAgaWQ6ICdyYWRpby1pbmNvbWUnLFxuICAgICAgICBuYW1lOiAnY2F0ZWdvcnktdHlwZScsXG4gICAgICAgIHZhbHVlOiAnaW5jb21lJyxcbiAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKGUpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLmhhbmRsZUNoYW5nZShlLCAndHlwZScpO1xuICAgICAgICB9XG4gICAgICB9LCBcIlxcdTA0MTRcXHUwNDNFXFx1MDQ0NVxcdTA0M0VcXHUwNDM0XCIpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICAgICAgdmFsdWU6IHRoaXMuc3RhdGUudGl0bGUsXG4gICAgICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShlKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5oYW5kbGVDaGFuZ2UoZSwgJ3RpdGxlJyk7XG4gICAgICAgIH0sXG4gICAgICAgIHBsYWNlaG9sZGVyOiBcIlxcdTA0MURcXHUwNDMwXFx1MDQzN1xcdTA0MzJcXHUwNDMwXFx1MDQzRFxcdTA0MzhcXHUwNDM1XCIsXG4gICAgICAgIHR5cGU6IFwidGV4dFwiLFxuICAgICAgICBjbGFzc05hbWU6IFwic2V0dXAtaW5wdXQtZmllbGRcIlxuICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFN1Ym1pdEJ1dHRvbiwge1xuICAgICAgICBjbGFzc05hbWU6ICdidXR0b25fc2V0dXAtZm9ybScsXG4gICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLmFkZENhdGVnb3J5QW5kUmVzZXRTdGF0ZShfdGhpczIuc3RhdGUpO1xuICAgICAgICB9XG4gICAgICB9LCBcIlxcdTA0MTRcXHUwNDNFXFx1MDQzMVxcdTA0MzBcXHUwNDMyXFx1MDQzOFxcdTA0NDJcXHUwNDRDXCIpKTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQWRkQ2F0ZWdvcnlDb21wb25lbnQ7XG59KFJlYWN0LlB1cmVDb21wb25lbnQpO1xuXG5leHBvcnQgeyBBZGRDYXRlZ29yeUNvbXBvbmVudCBhcyBkZWZhdWx0IH07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgeyBhZGRDYXRlZ29yeUFjdGlvbiB9IGZyb20gJy4uLy4uL3N0b3JlL2FjdGlvbnMnO1xuaW1wb3J0IEFkZENhdGVnb3J5Q29tcG9uZW50IGZyb20gJy4vY29tcG9uZW50JztcblxudmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSkge1xuICByZXR1cm4ge1xuICAgIHVzZXI6IHN0YXRlLnVzZXJcbiAgfTtcbn07XG5cbnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIHtcbiAgICBhZGRDYXRlZ29yeTogZnVuY3Rpb24gYWRkQ2F0ZWdvcnkoY2F0ZWdvcnkpIHtcbiAgICAgIHJldHVybiBkaXNwYXRjaChhZGRDYXRlZ29yeUFjdGlvbihjYXRlZ29yeSkpO1xuICAgIH1cbiAgfTtcbn07XG5cbmV4cG9ydCB2YXIgQWRkQ2F0ZWdvcnkgPSBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShBZGRDYXRlZ29yeUNvbXBvbmVudCk7IiwiaW1wb3J0IHsgQWRkQ2F0ZWdvcnkgfSBmcm9tICcuL2NvbnRhaW5lcic7XG5leHBvcnQgZGVmYXVsdCBBZGRDYXRlZ29yeTsiLCJpbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2RlZmluZVByb3BlcnR5XCI7XG5pbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2Fzc2VydFRoaXNJbml0aWFsaXplZCBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9hc3NlcnRUaGlzSW5pdGlhbGl6ZWRcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgU3VibWl0QnV0dG9uIGZyb20gXCIuLi9TdWJtaXRCdXR0b25cIjtcbmltcG9ydCBNb2RhbFdpbmRvdyBmcm9tIFwiLi4vTW9kYWxXaW5kb3dcIjtcbmltcG9ydCBDbG9zZVdpbmRvd0J1dHRvbiBmcm9tIFwiLi4vQ2xvc2VXaW5kb3dCdXR0b25cIjtcbmltcG9ydCBDb25maXJtRGVsZXRlV2luZG93IGZyb20gXCIuLi9Db25maXJtRGVsZXRlV2luZG93XCI7XG5cbnZhciBDYXRlZ29yeUl0ZW1TZXR1cENvbXBvbmVudCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKENhdGVnb3J5SXRlbVNldHVwQ29tcG9uZW50LCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihDYXRlZ29yeUl0ZW1TZXR1cENvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQ2F0ZWdvcnlJdGVtU2V0dXBDb21wb25lbnQocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2F0ZWdvcnlJdGVtU2V0dXBDb21wb25lbnQpO1xuXG4gICAgX3RoaXMgPSBfc3VwZXIuY2FsbCh0aGlzLCBwcm9wcyk7XG4gICAgX3RoaXMuc3RhdGUgPSB7XG4gICAgICBpc09wZW5FZGl0V2luZG93OiBmYWxzZSxcbiAgICAgIGlzT3BlbkNvbmZpcm1EZWxldGU6IGZhbHNlLFxuICAgICAgdGl0bGU6IF90aGlzLnByb3BzLnRpdGxlXG4gICAgfTtcbiAgICBfdGhpcy5vcGVuRWRpdFdpbmRvdyA9IF90aGlzLm9wZW5FZGl0V2luZG93LmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLmNsb3NlV2luZG93cyA9IF90aGlzLmNsb3NlV2luZG93cy5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy5vcGVuQ29uZmlybURlbGV0ZVdpbmRvdyA9IF90aGlzLm9wZW5Db25maXJtRGVsZXRlV2luZG93LmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLnNhdmVDYXRlZ29yeUl0ZW0gPSBfdGhpcy5zYXZlQ2F0ZWdvcnlJdGVtLmJpbmQoX2Fzc2VydFRoaXNJbml0aWFsaXplZChfdGhpcykpO1xuICAgIF90aGlzLmRlbGV0ZUNhdGVnb3J5SXRlbSA9IF90aGlzLmRlbGV0ZUNhdGVnb3J5SXRlbS5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICBfdGhpcy50b2dnbGVWaXNpYmxlQW5kVXBkYXRlID0gX3RoaXMudG9nZ2xlVmlzaWJsZUFuZFVwZGF0ZS5iaW5kKF9hc3NlcnRUaGlzSW5pdGlhbGl6ZWQoX3RoaXMpKTtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQ2F0ZWdvcnlJdGVtU2V0dXBDb21wb25lbnQsIFt7XG4gICAga2V5OiBcInRvZ2dsZVZpc2libGVBbmRVcGRhdGVcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gdG9nZ2xlVmlzaWJsZUFuZFVwZGF0ZSgpIHtcbiAgICAgIHZhciBjYXRlZ29yeSA9IHtcbiAgICAgICAgaWQ6IHRoaXMucHJvcHMuaWQsXG4gICAgICAgIHZpc2libGU6ICF0aGlzLnByb3BzLnZpc2libGVcbiAgICAgIH07XG4gICAgICB0aGlzLnByb3BzLnVwZENhdGVnb3J5KGNhdGVnb3J5KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiaGFuZGxlQ2hhbmdlXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGhhbmRsZUNoYW5nZShlLCB2YWwpIHtcbiAgICAgIHZhciBmaWVsZFZhbHVlID0gdmFsID09PSBcInN1bVwiID8gZS50YXJnZXQudmFsdWUucmVwbGFjZSgvXFxELywgJycpIDogZS50YXJnZXQudmFsdWU7XG4gICAgICB0aGlzLnNldFN0YXRlKF9kZWZpbmVQcm9wZXJ0eSh7fSwgdmFsLCBmaWVsZFZhbHVlKSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcIm9wZW5FZGl0V2luZG93XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIG9wZW5FZGl0V2luZG93KCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGlzT3BlbkVkaXRXaW5kb3c6IHRydWUsXG4gICAgICAgIGlzT3BlbkNvbmZpcm1EZWxldGU6IGZhbHNlXG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwib3BlbkNvbmZpcm1EZWxldGVXaW5kb3dcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gb3BlbkNvbmZpcm1EZWxldGVXaW5kb3coKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgaXNPcGVuRWRpdFdpbmRvdzogZmFsc2UsXG4gICAgICAgIGlzT3BlbkNvbmZpcm1EZWxldGU6IHRydWVcbiAgICAgIH0pO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJjbG9zZVdpbmRvd3NcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gY2xvc2VXaW5kb3dzKCkge1xuICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgIGlzT3BlbkVkaXRXaW5kb3c6IGZhbHNlLFxuICAgICAgICBpc09wZW5Db25maXJtRGVsZXRlOiBmYWxzZVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiBcInNhdmVDYXRlZ29yeUl0ZW1cIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gc2F2ZUNhdGVnb3J5SXRlbSgpIHtcbiAgICAgIHRoaXMucHJvcHMudXBkQ2F0ZWdvcnkoe1xuICAgICAgICBpZDogdGhpcy5wcm9wcy5pZCxcbiAgICAgICAgdGl0bGU6IHRoaXMuc3RhdGUudGl0bGVcbiAgICAgIH0pO1xuICAgICAgdGhpcy5jbG9zZVdpbmRvd3MoKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwiZGVsZXRlQ2F0ZWdvcnlJdGVtXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGRlbGV0ZUNhdGVnb3J5SXRlbSgpIHtcbiAgICAgIHRoaXMucHJvcHMuZGVsQ2F0ZWdvcnkoe1xuICAgICAgICBpZDogdGhpcy5wcm9wcy5pZFxuICAgICAgfSk7XG4gICAgICB0aGlzLmNsb3NlV2luZG93cygpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHJldHVybiBbLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBrZXk6IHRoaXMucHJvcHMuaWQsXG4gICAgICAgIGNsYXNzTmFtZTogXCJjYXRlZ29yeV9fc2V0dXBcIlxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBvbkNsaWNrOiBmdW5jdGlvbiBvbkNsaWNrKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczIub3BlbkVkaXRXaW5kb3coKTtcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lOiBcImNhdGVnb3J5LXNldHVwX19pdGVtIFwiLmNvbmNhdCghdGhpcy5wcm9wcy52aXNpYmxlICYmIFwiY2F0ZWdvcnktc2V0dXBfX2l0ZW1faGlkZGVuXCIpXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJjYXRlZ29yeS1zZXR1cF9fdGl0bGVcIlxuICAgICAgfSwgdGhpcy5wcm9wcy50aXRsZSkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTdWJtaXRCdXR0b24sIHtcbiAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uIGNhbGxiYWNrKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczIudG9nZ2xlVmlzaWJsZUFuZFVwZGF0ZSgpO1xuICAgICAgICB9LFxuICAgICAgICBjbGFzc05hbWU6IFwiYnV0dG9uIGJ1dHRvbl9oaWRlXCJcbiAgICAgIH0sIHRoaXMucHJvcHMudmlzaWJsZSA/IFwiXFx1MDQyMVxcdTA0M0FcXHUwNDQwXFx1MDQ0QlxcdTA0NDJcXHUwNDRDXCIgOiBcIlxcdTA0MUZcXHUwNDNFXFx1MDQzQVxcdTA0MzBcXHUwNDM3XFx1MDQzMFxcdTA0NDJcXHUwNDRDXCIpKSwgdGhpcy5zdGF0ZS5pc09wZW5FZGl0V2luZG93ICYmIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KE1vZGFsV2luZG93LCB7XG4gICAgICAgIGtleTogXCJld1wiLmNvbmNhdCh0aGlzLnByb3BzLmlkKVxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ2xvc2VXaW5kb3dCdXR0b24sIHtcbiAgICAgICAgY2xvc2VDYWxsYmFjazogdGhpcy5jbG9zZVdpbmRvd3NcbiAgICAgIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcInRleHRhcmVhXCIsIHtcbiAgICAgICAgdmFsdWU6IHRoaXMuc3RhdGUudGl0bGUsXG4gICAgICAgIG9uQ2hhbmdlOiBmdW5jdGlvbiBvbkNoYW5nZShlKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5oYW5kbGVDaGFuZ2UoZSwgJ3RpdGxlJyk7XG4gICAgICAgIH0sXG4gICAgICAgIHBsYWNlaG9sZGVyOiBcIlxcdTA0MUFcXHUwNDNFXFx1MDQzQ1xcdTA0M0NcXHUwNDM1XFx1MDQzRFxcdTA0NDJcXHUwNDMwXFx1MDQ0MFxcdTA0MzhcXHUwNDM5XCIsXG4gICAgICAgIGNsYXNzTmFtZTogXCJhZGQtZm9ybV9fdHh0XCJcbiAgICAgIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJtb2RhbC13aW5kb3dfX2J1dHRvbnNcIlxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoU3VibWl0QnV0dG9uLCB7XG4gICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbiBjYWxsYmFjaygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLnNhdmVDYXRlZ29yeUl0ZW0oKTtcbiAgICAgICAgfSxcbiAgICAgICAgY2xhc3NOYW1lOiBcImJ1dHRvbl9tb2RhbC13aW5kb3dcIlxuICAgICAgfSwgXCJcXHUwNDIxXFx1MDQzRVxcdTA0NDVcXHUwNDQwXFx1MDQzMFxcdTA0M0RcXHUwNDM4XFx1MDQ0MlxcdTA0NENcIiksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFN1Ym1pdEJ1dHRvbiwge1xuICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5vcGVuQ29uZmlybURlbGV0ZVdpbmRvdygpO1xuICAgICAgICB9LFxuICAgICAgICBjbGFzc05hbWU6IFwiYnV0dG9uX21vZGFsLXdpbmRvd1wiXG4gICAgICB9LCBcIlxcdTA0MjNcXHUwNDM0XFx1MDQzMFxcdTA0M0JcXHUwNDM4XFx1MDQ0MlxcdTA0NENcIikpKSksIHRoaXMuc3RhdGUuaXNPcGVuQ29uZmlybURlbGV0ZSAmJiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDb25maXJtRGVsZXRlV2luZG93LCB7XG4gICAgICAgIGtleTogXCJkd1wiLmNvbmNhdCh0aGlzLnByb3BzLmlkKSxcbiAgICAgICAgY2FuY2VsQ2FsbGJhY2s6IGZ1bmN0aW9uIGNhbmNlbENhbGxiYWNrKCkge1xuICAgICAgICAgIHJldHVybiBfdGhpczIuY2xvc2VXaW5kb3dzKCk7XG4gICAgICAgIH0sXG4gICAgICAgIGRlbGV0ZUNhbGxiYWNrOiBmdW5jdGlvbiBkZWxldGVDYWxsYmFjaygpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLmRlbGV0ZUNhdGVnb3J5SXRlbSgpO1xuICAgICAgICB9LFxuICAgICAgICB0aXRsZTogdGhpcy5wcm9wcy50aXRsZVxuICAgICAgfSldO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBDYXRlZ29yeUl0ZW1TZXR1cENvbXBvbmVudDtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IENhdGVnb3J5SXRlbVNldHVwQ29tcG9uZW50IGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBDYXRlZ29yeUl0ZW1TZXR1cENvbXBvbmVudCBmcm9tICcuL2NvbXBvbmVudCc7XG5pbXBvcnQgeyB1cGRDYXRlZ29yeUFjdGlvbiwgZGVsQ2F0ZWdvcnlBY3Rpb24gfSBmcm9tIFwiLi4vLi4vc3RvcmUvYWN0aW9uc1wiO1xuXG52YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gbWFwU3RhdGVUb1Byb3BzKHN0YXRlKSB7XG4gIHJldHVybiB7fTtcbn07XG5cbnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIHtcbiAgICB1cGRDYXRlZ29yeTogZnVuY3Rpb24gdXBkQ2F0ZWdvcnkoY2F0ZWdvcnkpIHtcbiAgICAgIHJldHVybiBkaXNwYXRjaCh1cGRDYXRlZ29yeUFjdGlvbihjYXRlZ29yeSkpO1xuICAgIH0sXG4gICAgZGVsQ2F0ZWdvcnk6IGZ1bmN0aW9uIGRlbENhdGVnb3J5KGNhdGVnb3J5KSB7XG4gICAgICByZXR1cm4gZGlzcGF0Y2goZGVsQ2F0ZWdvcnlBY3Rpb24oY2F0ZWdvcnkpKTtcbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnQgdmFyIENhdGVnb3J5SXRlbVNldHVwID0gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoQ2F0ZWdvcnlJdGVtU2V0dXBDb21wb25lbnQpOyIsImltcG9ydCB7IENhdGVnb3J5SXRlbVNldHVwIH0gZnJvbSAnLi9jb250YWluZXInO1xuZXhwb3J0IGRlZmF1bHQgQ2F0ZWdvcnlJdGVtU2V0dXA7IiwiaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm5cIjtcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2ZcIjtcblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgJy4vc3R5bGUuY3NzJztcbmltcG9ydCBDYXRlZ29yeUl0ZW1TZXR1cCBmcm9tIFwiLi4vQ2F0ZWdvcnlJdGVtX1NldHVwXCI7XG5cbnZhciBDYXRlZ29yeVNldHVwQ29tcG9uZW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhDYXRlZ29yeVNldHVwQ29tcG9uZW50LCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKENhdGVnb3J5U2V0dXBDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIENhdGVnb3J5U2V0dXBDb21wb25lbnQocHJvcHMpIHtcbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgQ2F0ZWdvcnlTZXR1cENvbXBvbmVudCk7XG5cbiAgICByZXR1cm4gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKENhdGVnb3J5U2V0dXBDb21wb25lbnQsIFt7XG4gICAga2V5OiBcInJldHVybkNsYXNzTmFtZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZXR1cm5DbGFzc05hbWUoKSB7XG4gICAgICBpZiAodGhpcy5wcm9wcy50eXBlICE9PSB0aGlzLnByb3BzLnRvZ2dsZUNhdGVnb3J5KSB7XG4gICAgICAgIHJldHVybiBcImRldGFpbHMtc2V0dXBfX2Jsb2NrX2hpZGVcIjtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJJdGVtc1wiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXJJdGVtcygpIHtcbiAgICAgIHZhciBfdGhpcyA9IHRoaXM7XG5cbiAgICAgIHJldHVybiB0aGlzLnByb3BzLmNhdGVnb3J5c0lkQXJyLm1hcChmdW5jdGlvbiAoY2F0ZWdvcnlJZCkge1xuICAgICAgICB2YXIgY2F0ZWdvcnkgPSBfdGhpcy5wcm9wcy5jYXRlZ29yeXNbY2F0ZWdvcnlJZF07XG5cbiAgICAgICAgaWYgKGNhdGVnb3J5LnR5cGUgPT09IF90aGlzLnByb3BzLnR5cGUpIHtcbiAgICAgICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ2F0ZWdvcnlJdGVtU2V0dXAsIHtcbiAgICAgICAgICAgIGtleTogY2F0ZWdvcnkuaWQsXG4gICAgICAgICAgICBpZDogY2F0ZWdvcnkuaWQsXG4gICAgICAgICAgICB0aXRsZTogY2F0ZWdvcnkudGl0bGUsXG4gICAgICAgICAgICB0eXBlOiBjYXRlZ29yeS50eXBlLFxuICAgICAgICAgICAgdmlzaWJsZTogY2F0ZWdvcnkudmlzaWJsZVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIGlmICgnY2F0ZWdvcnlzJyBpbiB0aGlzLnByb3BzKSB7XG4gICAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgICAgY2xhc3NOYW1lOiBcImRldGFpbHMtc2V0dXBfX2Jsb2NrIFwiLmNvbmNhdCh0aGlzLnJldHVybkNsYXNzTmFtZSgpKVxuICAgICAgICB9LCB0aGlzLnJlbmRlckl0ZW1zKCkpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gW107XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIENhdGVnb3J5U2V0dXBDb21wb25lbnQ7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IENhdGVnb3J5U2V0dXBDb21wb25lbnQgYXMgZGVmYXVsdCB9OyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IENhdGVnb3J5U2V0dXBDb21wb25lbnQgZnJvbSAnLi9jb21wb25lbnQnO1xuXG52YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gbWFwU3RhdGVUb1Byb3BzKHN0YXRlKSB7XG4gIGlmIChzdGF0ZS5kYXRhID09PSBudWxsKSByZXR1cm4ge307XG4gIHJldHVybiB7XG4gICAgY2F0ZWdvcnlzOiBzdGF0ZS5kYXRhLmVudGl0aWVzLmNhdGVnb3J5cyxcbiAgICBjYXRlZ29yeXNJZEFycjogc3RhdGUuZGF0YS5yZXN1bHQuY2F0ZWdvcnlzLFxuICAgIHRvZ2dsZUNhdGVnb3J5OiBzdGF0ZS50b2dnbGVDYXRlZ29yeVxuICB9O1xufTtcblxudmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCkge1xuICByZXR1cm4ge307XG59O1xuXG5leHBvcnQgdmFyIENhdGVnb3J5U2V0dXAgPSBjb25uZWN0KG1hcFN0YXRlVG9Qcm9wcywgbWFwRGlzcGF0Y2hUb1Byb3BzKShDYXRlZ29yeVNldHVwQ29tcG9uZW50KTsiLCJpbXBvcnQgeyBDYXRlZ29yeVNldHVwIH0gZnJvbSAnLi9jb250YWluZXInO1xuZXhwb3J0IGRlZmF1bHQgQ2F0ZWdvcnlTZXR1cDsiLCJpbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzXCI7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiO1xuaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZlwiO1xuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuaW1wb3J0IENhdGVnb3J5U2V0dXAgZnJvbSAnLi4vQ2F0ZWdvcnlfU2V0dXAnO1xuaW1wb3J0IFRvZ2dsZUNhdGVnb3J5IGZyb20gXCIuLi9Ub2dnbGVDYXRlZ29yeVwiO1xuXG52YXIgQ2F0ZWdvcnlzQ29tcG9uZW50ID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQ2F0ZWdvcnlzQ29tcG9uZW50LCBfUmVhY3QkUHVyZUNvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihDYXRlZ29yeXNDb21wb25lbnQpO1xuXG4gIGZ1bmN0aW9uIENhdGVnb3J5c0NvbXBvbmVudChwcm9wcykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDYXRlZ29yeXNDb21wb25lbnQpO1xuXG4gICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhDYXRlZ29yeXNDb21wb25lbnQsIFt7XG4gICAga2V5OiBcImNvbXBvbmVudERpZE1vdW50XCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgdGhpcy5wcm9wcy5nZXRBbGxDYXRlZ29yeXModGhpcy5wcm9wcy51c2VyLmlkKTtcbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBbLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoVG9nZ2xlQ2F0ZWdvcnksIHtcbiAgICAgICAga2V5OiBcImN0MDFcIlxuICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAga2V5OiBcImN0MDJcIixcbiAgICAgICAgY2xhc3NOYW1lOiBcImRldGFpbHMtc2V0dXAgZGV0YWlscy1zZXR1cF9jYXRlZ29yeXNcIlxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQ2F0ZWdvcnlTZXR1cCwge1xuICAgICAgICB0eXBlOiBcImV4cGVuc2VcIlxuICAgICAgfSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KENhdGVnb3J5U2V0dXAsIHtcbiAgICAgICAgdHlwZTogXCJpbmNvbWVcIlxuICAgICAgfSkpXTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gQ2F0ZWdvcnlzQ29tcG9uZW50O1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgQ2F0ZWdvcnlzQ29tcG9uZW50IGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBDYXRlZ29yeXNTZXR1cENvbXBvbmVudCBmcm9tICcuL2NvbXBvbmVudCc7XG5pbXBvcnQgeyBnZXRBbGxDYXRlZ29yeXNBY3Rpb24gfSBmcm9tICcuLi8uLi9zdG9yZS9hY3Rpb25zJztcblxudmFyIG1hcFN0YXRlVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSkge1xuICByZXR1cm4ge1xuICAgIHVzZXI6IHN0YXRlLnVzZXJcbiAgfTtcbn07XG5cbnZhciBtYXBEaXNwYXRjaFRvUHJvcHMgPSBmdW5jdGlvbiBtYXBEaXNwYXRjaFRvUHJvcHMoZGlzcGF0Y2gpIHtcbiAgcmV0dXJuIHtcbiAgICBnZXRBbGxDYXRlZ29yeXM6IGZ1bmN0aW9uIGdldEFsbENhdGVnb3J5cyh1c2VySWQpIHtcbiAgICAgIHJldHVybiBkaXNwYXRjaChnZXRBbGxDYXRlZ29yeXNBY3Rpb24odXNlcklkKSk7XG4gICAgfVxuICB9O1xufTtcblxuZXhwb3J0IHZhciBDYXRlZ29yeXNTZXR1cCA9IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKENhdGVnb3J5c1NldHVwQ29tcG9uZW50KTsiLCJpbXBvcnQgeyBDYXRlZ29yeXNTZXR1cCB9IGZyb20gJy4vY29udGFpbmVyJztcbmV4cG9ydCBkZWZhdWx0IENhdGVnb3J5c1NldHVwOyIsImltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgSGVhZGVyIGZyb20gJy4uL2hlYWRlcic7XG5pbXBvcnQgQWRkQ2F0ZWdvcnkgZnJvbSBcIi4uLy4uL2NvbXBvbmVudHMvQWRkQ2F0ZWdvcnlcIjtcbmltcG9ydCBDYXRlZ29yeXNTZXR1cCBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9DYXRlZ29yeXNfU2V0dXBcIjtcblxudmFyIFNldHVwID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkQ29tcG9uZW50KSB7XG4gIF9pbmhlcml0cyhTZXR1cCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihTZXR1cCk7XG5cbiAgZnVuY3Rpb24gU2V0dXAoKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFNldHVwKTtcblxuICAgIHJldHVybiBfc3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhTZXR1cCwgW3tcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiBbLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoSGVhZGVyLCB7XG4gICAgICAgIGtleTogJ2FjMDEnXG4gICAgICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQWRkQ2F0ZWdvcnksIHtcbiAgICAgICAga2V5OiAnYWMwMidcbiAgICAgIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChDYXRlZ29yeXNTZXR1cCwge1xuICAgICAgICBrZXk6ICdhYzAzJ1xuICAgICAgfSldO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBTZXR1cDtcbn0oUmVhY3QuQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgU2V0dXAgYXMgZGVmYXVsdCB9OyIsImltcG9ydCBfZGVmaW5lUHJvcGVydHkgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZGVmaW5lUHJvcGVydHlcIjtcbmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgU3VibWl0QnV0dG9uIGZyb20gXCIuLi9TdWJtaXRCdXR0b25cIjtcblxudmFyIExvZ2luRm9ybUNvbXBvbmVudCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKExvZ2luRm9ybUNvbXBvbmVudCwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoTG9naW5Gb3JtQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBMb2dpbkZvcm1Db21wb25lbnQocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgTG9naW5Gb3JtQ29tcG9uZW50KTtcblxuICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICAgIF90aGlzLnN0YXRlID0ge1xuICAgICAgbG9naW46ICcnLFxuICAgICAgcGFzczogJydcbiAgICB9O1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMb2dpbkZvcm1Db21wb25lbnQsIFt7XG4gICAga2V5OiBcImhhbmRsZUNoYW5nZVwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBoYW5kbGVDaGFuZ2UoZSwgdmFsKSB7XG4gICAgICB0aGlzLnNldFN0YXRlKF9kZWZpbmVQcm9wZXJ0eSh7fSwgdmFsLCBlLnRhcmdldC52YWx1ZSkpO1xuICAgIH1cbiAgfSwge1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCB0aGlzLnByb3BzLnVzZXIubG9naW5FcnJvck1lcyAmJiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7XG4gICAgICAgIGNsYXNzTmFtZTogXCJsb2dpbi1lcnJvci1tZXNcIlxuICAgICAgfSwgdGhpcy5wcm9wcy51c2VyLmxvZ2luRXJyb3JNZXMpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImZvcm1cIiwge1xuICAgICAgICBvblN1Ym1pdDogZnVuY3Rpb24gb25TdWJtaXQoZSkge1xuICAgICAgICAgIHJldHVybiBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgIH1cbiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwge1xuICAgICAgICB2YWx1ZTogdGhpcy5zdGF0ZS5sb2dpbixcbiAgICAgICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGUpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLmhhbmRsZUNoYW5nZShlLCAnbG9naW4nKTtcbiAgICAgICAgfSxcbiAgICAgICAgcGxhY2Vob2xkZXI6IFwiXFx1MDQxQlxcdTA0M0VcXHUwNDMzXFx1MDQzOFxcdTA0M0RcIixcbiAgICAgICAgdHlwZTogXCJ0ZXh0XCIsXG4gICAgICAgIGNsYXNzTmFtZTogXCJhZGQtZm9ybV9fc3VtXCJcbiAgICAgIH0pLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHtcbiAgICAgICAgdmFsdWU6IHRoaXMuc3RhdGUucGFzcyxcbiAgICAgICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGUpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLmhhbmRsZUNoYW5nZShlLCAncGFzcycpO1xuICAgICAgICB9LFxuICAgICAgICBwbGFjZWhvbGRlcjogXCJcXHUwNDFGXFx1MDQzMFxcdTA0NDBcXHUwNDNFXFx1MDQzQlxcdTA0NENcIixcbiAgICAgICAgdHlwZTogXCJwYXNzd29yZFwiLFxuICAgICAgICBjbGFzc05hbWU6IFwiYWRkLWZvcm1fX3N1bVwiXG4gICAgICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwibG9naW4tZm9ybS1zdWJtaXQtd3JhcFwiXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChTdWJtaXRCdXR0b24sIHtcbiAgICAgICAgY2xhc3NOYW1lOiAnYnV0dG9uX2xvZ2luLWZvcm0nLFxuICAgICAgICBjYWxsYmFjazogZnVuY3Rpb24gY2FsbGJhY2soKSB7XG4gICAgICAgICAgcmV0dXJuIF90aGlzMi5wcm9wcy5sb2dpblJlcXVlc3Qoe1xuICAgICAgICAgICAgbG9naW46IF90aGlzMi5zdGF0ZS5sb2dpbixcbiAgICAgICAgICAgIHBhc3M6IF90aGlzMi5zdGF0ZS5wYXNzXG4gICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgIH0sIFwiXFx1MDQxMlxcdTA0M0VcXHUwNDM5XFx1MDQ0MlxcdTA0MzhcIikpKSk7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIExvZ2luRm9ybUNvbXBvbmVudDtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IExvZ2luRm9ybUNvbXBvbmVudCBhcyBkZWZhdWx0IH07IiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgeyBsb2dpblJlcXVlc3RBY3Rpb24gfSBmcm9tICcuLi8uLi9zdG9yZS9hY3Rpb25zJztcbmltcG9ydCBMb2dpbkZvcm1Db21wb25lbnQgZnJvbSAnLi9jb21wb25lbnQnO1xuXG52YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gbWFwU3RhdGVUb1Byb3BzKHN0YXRlKSB7XG4gIHJldHVybiB7XG4gICAgdXNlcjogc3RhdGUudXNlclxuICB9O1xufTtcblxudmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCkge1xuICByZXR1cm4ge1xuICAgIGxvZ2luUmVxdWVzdDogZnVuY3Rpb24gbG9naW5SZXF1ZXN0KGRhdGEpIHtcbiAgICAgIHJldHVybiBkaXNwYXRjaChsb2dpblJlcXVlc3RBY3Rpb24oZGF0YSkpO1xuICAgIH1cbiAgfTtcbn07XG5cbmV4cG9ydCB2YXIgTG9naW5Gb3JtID0gY29ubmVjdChtYXBTdGF0ZVRvUHJvcHMsIG1hcERpc3BhdGNoVG9Qcm9wcykoTG9naW5Gb3JtQ29tcG9uZW50KTsiLCJpbXBvcnQgeyBMb2dpbkZvcm0gfSBmcm9tICcuL2NvbnRhaW5lcic7XG5leHBvcnQgZGVmYXVsdCBMb2dpbkZvcm07IiwiaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVja1wiO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9jcmVhdGVDbGFzc1wiO1xuaW1wb3J0IF9pbmhlcml0cyBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9pbmhlcml0c1wiO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm5cIjtcbmltcG9ydCBfZ2V0UHJvdG90eXBlT2YgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvZ2V0UHJvdG90eXBlT2ZcIjtcblxuZnVuY3Rpb24gX2NyZWF0ZVN1cGVyKERlcml2ZWQpIHsgdmFyIGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QgPSBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCk7IHJldHVybiBmdW5jdGlvbiBfY3JlYXRlU3VwZXJJbnRlcm5hbCgpIHsgdmFyIFN1cGVyID0gX2dldFByb3RvdHlwZU9mKERlcml2ZWQpLCByZXN1bHQ7IGlmIChoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KSB7IHZhciBOZXdUYXJnZXQgPSBfZ2V0UHJvdG90eXBlT2YodGhpcykuY29uc3RydWN0b3I7IHJlc3VsdCA9IFJlZmxlY3QuY29uc3RydWN0KFN1cGVyLCBhcmd1bWVudHMsIE5ld1RhcmdldCk7IH0gZWxzZSB7IHJlc3VsdCA9IFN1cGVyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7IH0gcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIHJlc3VsdCk7IH07IH1cblxuZnVuY3Rpb24gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpIHsgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcInVuZGVmaW5lZFwiIHx8ICFSZWZsZWN0LmNvbnN0cnVjdCkgcmV0dXJuIGZhbHNlOyBpZiAoUmVmbGVjdC5jb25zdHJ1Y3Quc2hhbSkgcmV0dXJuIGZhbHNlOyBpZiAodHlwZW9mIFByb3h5ID09PSBcImZ1bmN0aW9uXCIpIHJldHVybiB0cnVlOyB0cnkgeyBCb29sZWFuLnByb3RvdHlwZS52YWx1ZU9mLmNhbGwoUmVmbGVjdC5jb25zdHJ1Y3QoQm9vbGVhbiwgW10sIGZ1bmN0aW9uICgpIHt9KSk7IHJldHVybiB0cnVlOyB9IGNhdGNoIChlKSB7IHJldHVybiBmYWxzZTsgfSB9XG5cbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0ICcuL3N0eWxlLmNzcyc7XG5pbXBvcnQgTG9naW5Gb3JtIGZyb20gJy4uLy4uL2NvbXBvbmVudHMvTG9naW5Gb3JtJztcbmltcG9ydCB7IFJvdXRlLCBSZWRpcmVjdCB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCI7XG5cbnZhciBMb2dpblBhZ2UgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKF9SZWFjdCRDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKExvZ2luUGFnZSwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihMb2dpblBhZ2UpO1xuXG4gIGZ1bmN0aW9uIExvZ2luUGFnZShwcm9wcykge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBMb2dpblBhZ2UpO1xuXG4gICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhMb2dpblBhZ2UsIFt7XG4gICAga2V5OiBcInJlbmRlclwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiByZW5kZXIoKSB7XG4gICAgICByZXR1cm4gLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwge1xuICAgICAgICBjbGFzc05hbWU6IFwibG9naW4tZm9ybS13cmFwXCJcbiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KExvZ2luRm9ybSwgbnVsbCkpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBMb2dpblBhZ2U7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbnZhciBSZWRpcmVjdFJvdXRlID0gLyojX19QVVJFX18qL2Z1bmN0aW9uIChfUmVhY3QkUHVyZUNvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUmVkaXJlY3RSb3V0ZSwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIyID0gX2NyZWF0ZVN1cGVyKFJlZGlyZWN0Um91dGUpO1xuXG4gIGZ1bmN0aW9uIFJlZGlyZWN0Um91dGUocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUmVkaXJlY3RSb3V0ZSk7XG5cbiAgICBfdGhpcyA9IF9zdXBlcjIuY2FsbCh0aGlzLCBwcm9wcyk7XG4gICAgX3RoaXMubG9jYXRpb24gPSBwcm9wcy5sb2NhdGlvbjtcbiAgICBfdGhpcy5mcm9tID0gXCIvXCI7XG4gICAgaWYgKHByb3BzLmxvY2F0aW9uLnN0YXRlICE9PSB1bmRlZmluZWQpIF90aGlzLmZyb20gPSBwcm9wcy5sb2NhdGlvbi5zdGF0ZS5mcm9tLnBhdGhuYW1lO1xuICAgIHJldHVybiBfdGhpcztcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhSZWRpcmVjdFJvdXRlLCBbe1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgdmFyIF90aGlzMiA9IHRoaXM7XG5cbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwge1xuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICByZXR1cm4gIV90aGlzMi5wcm9wcy51c2VyLmlzTG9naW4gPyAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChMb2dpblBhZ2UsIG51bGwpIDogLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUmVkaXJlY3QsIHtcbiAgICAgICAgICAgIHRvOiB7XG4gICAgICAgICAgICAgIHBhdGhuYW1lOiBfdGhpczIuZnJvbSAvL3N0YXRlOiB7ZnJvbTogdGhpcy5sb2NhdGlvbn1cblxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUmVkaXJlY3RSb3V0ZTtcbn0oUmVhY3QuUHVyZUNvbXBvbmVudCk7XG5cbnZhciBMb2dpbiA9IGNvbm5lY3QoZnVuY3Rpb24gKHN0YXRlKSB7XG4gIHJldHVybiB7XG4gICAgdXNlcjogc3RhdGUudXNlclxuICB9O1xufSkoUmVkaXJlY3RSb3V0ZSk7XG5leHBvcnQgZGVmYXVsdCBMb2dpbjsiLCJpbXBvcnQgX2NsYXNzQ2FsbENoZWNrIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NsYXNzQ2FsbENoZWNrXCI7XG5pbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzXCI7XG5pbXBvcnQgX2luaGVyaXRzIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2luaGVyaXRzXCI7XG5pbXBvcnQgX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4gZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvcG9zc2libGVDb25zdHJ1Y3RvclJldHVyblwiO1xuaW1wb3J0IF9nZXRQcm90b3R5cGVPZiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9nZXRQcm90b3R5cGVPZlwiO1xuXG5mdW5jdGlvbiBfY3JlYXRlU3VwZXIoRGVyaXZlZCkgeyB2YXIgaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCA9IF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKTsgcmV0dXJuIGZ1bmN0aW9uIF9jcmVhdGVTdXBlckludGVybmFsKCkgeyB2YXIgU3VwZXIgPSBfZ2V0UHJvdG90eXBlT2YoRGVyaXZlZCksIHJlc3VsdDsgaWYgKGhhc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QpIHsgdmFyIE5ld1RhcmdldCA9IF9nZXRQcm90b3R5cGVPZih0aGlzKS5jb25zdHJ1Y3RvcjsgcmVzdWx0ID0gUmVmbGVjdC5jb25zdHJ1Y3QoU3VwZXIsIGFyZ3VtZW50cywgTmV3VGFyZ2V0KTsgfSBlbHNlIHsgcmVzdWx0ID0gU3VwZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsgfSByZXR1cm4gX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4odGhpcywgcmVzdWx0KTsgfTsgfVxuXG5mdW5jdGlvbiBfaXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0KCkgeyBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwidW5kZWZpbmVkXCIgfHwgIVJlZmxlY3QuY29uc3RydWN0KSByZXR1cm4gZmFsc2U7IGlmIChSZWZsZWN0LmNvbnN0cnVjdC5zaGFtKSByZXR1cm4gZmFsc2U7IGlmICh0eXBlb2YgUHJveHkgPT09IFwiZnVuY3Rpb25cIikgcmV0dXJuIHRydWU7IHRyeSB7IEJvb2xlYW4ucHJvdG90eXBlLnZhbHVlT2YuY2FsbChSZWZsZWN0LmNvbnN0cnVjdChCb29sZWFuLCBbXSwgZnVuY3Rpb24gKCkge30pKTsgcmV0dXJuIHRydWU7IH0gY2F0Y2ggKGUpIHsgcmV0dXJuIGZhbHNlOyB9IH1cblxuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCAnLi9zdHlsZS5jc3MnO1xuXG52YXIgUGFnZTQwNCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoUGFnZTQwNCwgX1JlYWN0JENvbXBvbmVudCk7XG5cbiAgdmFyIF9zdXBlciA9IF9jcmVhdGVTdXBlcihQYWdlNDA0KTtcblxuICBmdW5jdGlvbiBQYWdlNDA0KHByb3BzKSB7XG4gICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFBhZ2U0MDQpO1xuXG4gICAgcmV0dXJuIF9zdXBlci5jYWxsKHRoaXMsIHByb3BzKTtcbiAgfVxuXG4gIF9jcmVhdGVDbGFzcyhQYWdlNDA0LCBbe1xuICAgIGtleTogXCJyZW5kZXJcIixcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIFwiNDA0IFxcdTA0NDFcXHUwNDQyXFx1MDQ0MFxcdTA0MzBcXHUwNDNEXFx1MDQzOFxcdTA0NDZcXHUwNDMwIFxcdTA0M0RcXHUwNDM1IFxcdTA0M0RcXHUwNDMwXFx1MDQzOVxcdTA0MzRcXHUwNDM1XFx1MDQzRFxcdTA0MzBcIik7XG4gICAgfVxuICB9XSk7XG5cbiAgcmV0dXJuIFBhZ2U0MDQ7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cbmV4cG9ydCB7IFBhZ2U0MDQgYXMgZGVmYXVsdCB9OyIsImltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUm91dGUsIFJlZGlyZWN0IH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcblxudmFyIFByaXZhdGVSb3V0ZUNvbXBvbmVudCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JFB1cmVDb21wb25lbnQpIHtcbiAgX2luaGVyaXRzKFByaXZhdGVSb3V0ZUNvbXBvbmVudCwgX1JlYWN0JFB1cmVDb21wb25lbnQpO1xuXG4gIHZhciBfc3VwZXIgPSBfY3JlYXRlU3VwZXIoUHJpdmF0ZVJvdXRlQ29tcG9uZW50KTtcblxuICBmdW5jdGlvbiBQcml2YXRlUm91dGVDb21wb25lbnQocHJvcHMpIHtcbiAgICB2YXIgX3RoaXM7XG5cbiAgICBfY2xhc3NDYWxsQ2hlY2sodGhpcywgUHJpdmF0ZVJvdXRlQ29tcG9uZW50KTtcblxuICAgIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgcHJvcHMpO1xuICAgIF90aGlzLmNoaWxkcmVuID0gcHJvcHMuY2hpbGRyZW47XG4gICAgX3RoaXMudXJsUGFyYW1zID0gcHJvcHMuY29tcHV0ZWRNYXRjaC5wYXJhbXM7XG4gICAgX3RoaXMubG9jYXRpb24gPSBwcm9wcy5sb2NhdGlvbjtcbiAgICByZXR1cm4gX3RoaXM7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoUHJpdmF0ZVJvdXRlQ29tcG9uZW50LCBbe1xuICAgIGtleTogXCJjb21wb25lbnREaWRNb3VudFwiLFxuICAgIHZhbHVlOiBmdW5jdGlvbiBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgIGlmICh0aGlzLnByb3BzLnVzZXIuaXNMb2dpbiAhPT0gdHJ1ZSAmJiB0aGlzLnByb3BzLnVzZXIuaXNMb2dpbiAhPT0gZmFsc2UpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5hdXRoUmVxdWVzdCgpOyAvL9Cw0LLRgtC+0YDQuNC30LDRhtC40Y9cbiAgICAgIH1cbiAgICB9XG4gIH0sIHtcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHZhciBfdGhpczIgPSB0aGlzO1xuXG4gICAgICBpZiAodGhpcy5wcm9wcy51c2VyLmlzTG9naW4gIT09IHRydWUgJiYgdGhpcy5wcm9wcy51c2VyLmlzTG9naW4gIT09IGZhbHNlKSB7XG4gICAgICAgIHJldHVybiBbXTsgLy/Qt9Cw0LPQu9GD0YjQutCwXG4gICAgICB9XG5cbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwge1xuICAgICAgICByZW5kZXI6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgICAgICByZXR1cm4gX3RoaXMyLnByb3BzLnVzZXIuaXNMb2dpbiA/IC8qI19fUFVSRV9fKi9SZWFjdC5jbG9uZUVsZW1lbnQoX3RoaXMyLmNoaWxkcmVuLCB7XG4gICAgICAgICAgICB1cmxQYXJhbXM6IF90aGlzMi51cmxQYXJhbXNcbiAgICAgICAgICB9KSA6IC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJlZGlyZWN0LCB7XG4gICAgICAgICAgICB0bzoge1xuICAgICAgICAgICAgICBwYXRobmFtZTogXCIvbG9naW5cIixcbiAgICAgICAgICAgICAgc3RhdGU6IHtcbiAgICAgICAgICAgICAgICBmcm9tOiBfdGhpczIubG9jYXRpb25cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICB9KTtcbiAgICB9XG4gIH1dKTtcblxuICByZXR1cm4gUHJpdmF0ZVJvdXRlQ29tcG9uZW50O1xufShSZWFjdC5QdXJlQ29tcG9uZW50KTtcblxuZXhwb3J0IHsgUHJpdmF0ZVJvdXRlQ29tcG9uZW50IGFzIGRlZmF1bHQgfTsiLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCBQcml2YXRlUm91dGVDb21wb25lbnQgZnJvbSAnLi9jb21wb25lbnQnO1xuaW1wb3J0IHsgYXV0aFJlcXVlc3RBY3Rpb24gfSBmcm9tIFwiLi4vLi4vc3RvcmUvYWN0aW9uc1wiO1xuXG52YXIgbWFwU3RhdGVUb1Byb3BzID0gZnVuY3Rpb24gbWFwU3RhdGVUb1Byb3BzKHN0YXRlKSB7XG4gIHJldHVybiB7XG4gICAgdXNlcjogc3RhdGUudXNlclxuICB9O1xufTtcblxudmFyIG1hcERpc3BhdGNoVG9Qcm9wcyA9IGZ1bmN0aW9uIG1hcERpc3BhdGNoVG9Qcm9wcyhkaXNwYXRjaCkge1xuICByZXR1cm4ge1xuICAgIGF1dGhSZXF1ZXN0OiBmdW5jdGlvbiBhdXRoUmVxdWVzdCgpIHtcbiAgICAgIHJldHVybiBkaXNwYXRjaChhdXRoUmVxdWVzdEFjdGlvbigpKTtcbiAgICB9XG4gIH07XG59O1xuXG5leHBvcnQgdmFyIFByaXZhdGVSb3V0ZSA9IGNvbm5lY3QobWFwU3RhdGVUb1Byb3BzLCBtYXBEaXNwYXRjaFRvUHJvcHMpKFByaXZhdGVSb3V0ZUNvbXBvbmVudCk7IiwiaW1wb3J0IHsgUHJpdmF0ZVJvdXRlIH0gZnJvbSAnLi9jb250YWluZXInO1xuZXhwb3J0IGRlZmF1bHQgUHJpdmF0ZVJvdXRlOyIsImltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2tcIjtcbmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3NcIjtcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSBcIkBiYWJlbC9ydW50aW1lL2hlbHBlcnMvaW5oZXJpdHNcIjtcbmltcG9ydCBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybiBmcm9tIFwiQGJhYmVsL3J1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuXCI7XG5pbXBvcnQgX2dldFByb3RvdHlwZU9mIGZyb20gXCJAYmFiZWwvcnVudGltZS9oZWxwZXJzL2dldFByb3RvdHlwZU9mXCI7XG5cbmZ1bmN0aW9uIF9jcmVhdGVTdXBlcihEZXJpdmVkKSB7IHZhciBoYXNOYXRpdmVSZWZsZWN0Q29uc3RydWN0ID0gX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCgpOyByZXR1cm4gZnVuY3Rpb24gX2NyZWF0ZVN1cGVySW50ZXJuYWwoKSB7IHZhciBTdXBlciA9IF9nZXRQcm90b3R5cGVPZihEZXJpdmVkKSwgcmVzdWx0OyBpZiAoaGFzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCkgeyB2YXIgTmV3VGFyZ2V0ID0gX2dldFByb3RvdHlwZU9mKHRoaXMpLmNvbnN0cnVjdG9yOyByZXN1bHQgPSBSZWZsZWN0LmNvbnN0cnVjdChTdXBlciwgYXJndW1lbnRzLCBOZXdUYXJnZXQpOyB9IGVsc2UgeyByZXN1bHQgPSBTdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9IHJldHVybiBfcG9zc2libGVDb25zdHJ1Y3RvclJldHVybih0aGlzLCByZXN1bHQpOyB9OyB9XG5cbmZ1bmN0aW9uIF9pc05hdGl2ZVJlZmxlY3RDb25zdHJ1Y3QoKSB7IGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJ1bmRlZmluZWRcIiB8fCAhUmVmbGVjdC5jb25zdHJ1Y3QpIHJldHVybiBmYWxzZTsgaWYgKFJlZmxlY3QuY29uc3RydWN0LnNoYW0pIHJldHVybiBmYWxzZTsgaWYgKHR5cGVvZiBQcm94eSA9PT0gXCJmdW5jdGlvblwiKSByZXR1cm4gdHJ1ZTsgdHJ5IHsgQm9vbGVhbi5wcm90b3R5cGUudmFsdWVPZi5jYWxsKFJlZmxlY3QuY29uc3RydWN0KEJvb2xlYW4sIFtdLCBmdW5jdGlvbiAoKSB7fSkpOyByZXR1cm4gdHJ1ZTsgfSBjYXRjaCAoZSkgeyByZXR1cm4gZmFsc2U7IH0gfVxuXG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IEJyb3dzZXJSb3V0ZXIgYXMgUm91dGVyLCBTd2l0Y2gsIFJvdXRlIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIjtcbmltcG9ydCB7IHN0b3JlIH0gZnJvbSAnLi9zdG9yZSc7XG5pbXBvcnQgSG9tZSBmcm9tICcuL3BhZ2VzL2hvbWUnO1xuaW1wb3J0IFNldHVwIGZyb20gJy4vcGFnZXMvc2V0dXAnO1xuaW1wb3J0IExvZ2luIGZyb20gJy4vcGFnZXMvbG9naW4nO1xuaW1wb3J0IFBhZ2U0MDQgZnJvbSAnLi9wYWdlcy80MDQnO1xuaW1wb3J0IFByaXZhdGVSb3V0ZSBmcm9tICcuL2NvbXBvbmVudHMvUHJpdmF0ZVJvdXRlJztcbmltcG9ydCAnLi9zdHlsZXMuY3NzJztcblxudmFyIEFwcCA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoX1JlYWN0JENvbXBvbmVudCkge1xuICBfaW5oZXJpdHMoQXBwLCBfUmVhY3QkQ29tcG9uZW50KTtcblxuICB2YXIgX3N1cGVyID0gX2NyZWF0ZVN1cGVyKEFwcCk7XG5cbiAgZnVuY3Rpb24gQXBwKCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBBcHApO1xuXG4gICAgcmV0dXJuIF9zdXBlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICB9XG5cbiAgX2NyZWF0ZUNsYXNzKEFwcCwgW3tcbiAgICBrZXk6IFwicmVuZGVyXCIsXG4gICAgdmFsdWU6IGZ1bmN0aW9uIHJlbmRlcigpIHtcbiAgICAgIHJldHVybiAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChQcm92aWRlciwge1xuICAgICAgICBzdG9yZTogc3RvcmVcbiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHtcbiAgICAgICAgY2xhc3NOYW1lOiBcIm1heC13aWR0aFwiXG4gICAgICB9LCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXIsIG51bGwsIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFN3aXRjaCwgbnVsbCwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUHJpdmF0ZVJvdXRlLCB7XG4gICAgICAgIGV4YWN0OiB0cnVlLFxuICAgICAgICBwYXRoOiBcIi9cIlxuICAgICAgfSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoSG9tZSwgbnVsbCkpLCAvKiNfX1BVUkVfXyovUmVhY3QuY3JlYXRlRWxlbWVudChQcml2YXRlUm91dGUsIHtcbiAgICAgICAgZXhhY3Q6IHRydWUsXG4gICAgICAgIHBhdGg6IFwiL3NldHVwXCJcbiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFNldHVwLCBudWxsKSksIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCB7XG4gICAgICAgIHBhdGg6IFwiL2xvZ2luL1wiLFxuICAgICAgICBjb21wb25lbnQ6IExvZ2luXG4gICAgICB9KSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUHJpdmF0ZVJvdXRlLCB7XG4gICAgICAgIGV4YWN0OiB0cnVlLFxuICAgICAgICBwYXRoOiBcIi86cGVyaW9kXCJcbiAgICAgIH0sIC8qI19fUFVSRV9fKi9SZWFjdC5jcmVhdGVFbGVtZW50KEhvbWUsIG51bGwpKSwgLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHtcbiAgICAgICAgcGF0aDogXCIqXCIsXG4gICAgICAgIGNvbXBvbmVudDogUGFnZTQwNFxuICAgICAgfSkpKSkpO1xuICAgIH1cbiAgfV0pO1xuXG4gIHJldHVybiBBcHA7XG59KFJlYWN0LkNvbXBvbmVudCk7XG5cblJlYWN0RE9NLnJlbmRlciggLyojX19QVVJFX18qL1JlYWN0LmNyZWF0ZUVsZW1lbnQoQXBwLCBudWxsKSwgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJhcHBcIikpOyJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///vAhzLcGh\n");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, [953,296], () => (__webpack_exec__("vAhzLcGh")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);